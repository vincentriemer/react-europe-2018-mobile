{"version":3,"sources":["../../ReactDom/bridge/RCTBridge.js"],"names":["getPropertyNames","bridgeModuleNameForClass","RCT_EXPORT_METHOD","YG","RCTFunctionTypeNormal","RCTFunctionTypePromise","RCTFunctionTypeSync","MODULE_IDS","METHOD_IDS","PARAMS","DEVTOOLS_FLAG","HOTRELOAD_FLAG","WORKER_SRC","__DEV__","test","location","search","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","log","obj","currentPropertyNames","Object","getOwnPropertyNames","concat","getPrototypeOf","cls","name","__moduleName","startsWith","substring","generateModuleConfig","bridgeModule","methodNames","Set","filter","methodName","constants","constantsToExport","undefined","allMethods","promiseMethods","syncMethods","forEach","rctName","call","methodType","push","length","RCTBridge","moduleName","bundle","nativeModules","loading","bundleLocation","bridgeCodeBlob","Blob","worker","Worker","URL","createObjectURL","setThread","modulesByName","thread","onmessage","onMessage","bind","topic","payload","postMessage","moduleId","methodId","params","moduleConfig","moduleConfigs","functions","functionName","nativeModule","apply","message","data","emitEvent","bundleFinishedLoading","Array","isArray","moduleIds","methodIds","i","messages","args","devLoadingView","updateProgress","warn","shouldContinue","uiManager","requestTick","moduleDataForName","methods","config","getInitialModuleConfig","sendMessage","moduleDotMethod","split","module","method","enqueueJSCall","id","enqueueJSCallback","callNativeModule","_uiManager","_devLoadingView","_eventDispatcher","eventDispatcher","_imageLoader","imageLoader","_deviceInfo","deviceInfo","_devSettings","devSettings","_redBox","redBox","moduleClasses","queue","executing","initializeModules","Promise","all","map","maybeModule","__esModule","default","moduleClass","remoteModuleConfig","keys","type","target","key","descriptor","value","defineProperty","RCT_EXPORT_MODULE"],"mappings":"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","file":"RCTBridge.js","sourcesContent":["/**\n * @providesModule RCTBridge\n * @flow\n */\nimport invariant from \"Invariant\";\nimport Yoga, * as YG from \"yoga-dom\";\nimport { moduleConfigFactory } from \"RCTModuleConfig\";\nimport NotificationCenter from \"NotificationCenter\";\nimport {\n  RCTFunctionTypeNormal,\n  RCTFunctionTypePromise,\n  RCTFunctionTypeSync\n} from \"RCTBridgeMethod\";\nimport type { ModuleConfig } from \"RCTModuleConfig\";\nimport type { RCTFunctionType } from \"RCTBridgeMethod\";\nimport type RCTEventDispatcher from \"RCTEventDispatcher\";\nimport type RCTImageLoader from \"RCTImageLoader\";\nimport type RCTDeviceInfo from \"RCTDeviceInfo\";\nimport type RCTDevLoadingView from \"RCTDevLoadingView\";\nimport type RCTDevSettings from \"RCTDevSettings\";\nimport type {\n  RCTModule,\n  RCTModuleStatics,\n  NativeModuleImports\n} from \"RCTModule\";\nimport type RCTRedBox from \"RCTRedBox\";\n\nimport typeof _RCTUIManager from \"RCTUIManager\";\ntype RCTUIManager = $Call<$await<_RCTUIManager>>;\n\nexport { RCTFunctionTypeNormal, RCTFunctionTypePromise, RCTFunctionTypeSync };\nexport type { RCTFunctionType };\n\ntype MessagePayload = {\n  data: {\n    topic: string,\n    payload: any\n  }\n};\n\ntype NativeCall = {\n  moduleId: number,\n  methodId: number,\n  args: Array<any>\n};\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\n\nconst DEVTOOLS_FLAG = /\\bdevtools\\b/;\nconst HOTRELOAD_FLAG = /\\bhotreload\\b/;\n\n// $FlowFixMe\nlet WORKER_SRC = preval`\n  const fs = require('fs');\n  const path = require('path');\n\n  module.exports = fs.readFileSync(\n    path.resolve(__dirname, 'RCTBridge.worker.js'),\n    'utf8'\n  );\n`;\n\nif (__DEV__) {\n  WORKER_SRC = \"__DEV__ = true;\\n\" + WORKER_SRC;\n  if (DEVTOOLS_FLAG.test(location.search)) {\n    WORKER_SRC = \"__DEVTOOLS__ = true;\\n\" + WORKER_SRC;\n    if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\n      console.log(\n        \"We detected that you have the React Devtools extension installed. \" +\n          \"Please note that at this time, React VR is only compatible with the \" +\n          \"standalone React Native Inspector that ships with Nuclide.\"\n      );\n    }\n  }\n} else {\n  WORKER_SRC = \"__DEV__ = false;\\n\" + WORKER_SRC;\n}\n\nexport function getPropertyNames(obj: ?Object): Array<string> {\n  if (obj == null) return [];\n\n  const currentPropertyNames = Object.getOwnPropertyNames(obj);\n  return currentPropertyNames.concat(\n    getPropertyNames(Object.getPrototypeOf(obj))\n  );\n}\n\nexport function bridgeModuleNameForClass(cls: RCTModuleStatics): string {\n  let name = cls.__moduleName;\n\n  if (name != null) {\n    if (name.startsWith(\"RK\")) {\n      name = name.substring(2);\n    } else if (name.startsWith(\"RCT\")) {\n      name = name.substring(3);\n    }\n    return name;\n  }\n\n  return \"\";\n}\n\nfunction generateModuleConfig(name: string, bridgeModule: RCTModule) {\n  const methodNames = [...new Set(getPropertyNames(bridgeModule))].filter(\n    (methodName) => methodName.startsWith(\"__rct_export__\")\n  );\n\n  const constants = bridgeModule.constantsToExport\n    ? bridgeModule.constantsToExport()\n    : undefined;\n\n  const allMethods = [];\n  const promiseMethods = [];\n  const syncMethods = [];\n\n  methodNames.forEach((rctName) => {\n    if (bridgeModule[rctName]) {\n      const [methodName, methodType] = bridgeModule[rctName].call(bridgeModule);\n      allMethods.push(methodName);\n\n      if (methodType === RCTFunctionTypePromise) {\n        promiseMethods.push(allMethods.length - 1);\n      }\n\n      if (methodType === RCTFunctionTypeSync) {\n        syncMethods.push(allMethods.length - 1);\n      }\n    }\n  });\n\n  return [name, constants, allMethods, promiseMethods, syncMethods];\n}\n\ntype ModuleData = {\n  name: string,\n  methods: string[],\n  constants: { [string]: any }\n};\n\nexport default class RCTBridge {\n  nativeModules: NativeModuleImports;\n\n  modulesByName: { [name: string]: RCTModule } = {};\n  moduleClasses: Array<Class<RCTModule>> = [];\n  moduleConfigs: Array<ModuleConfig> = [];\n  bundleFinishedLoading: ?() => void;\n  messages: Array<NativeCall> = [];\n  moduleDataForName: { [name: string]: ModuleData } = {};\n  moduleName: string;\n  bundleLocation: string;\n  loading: boolean;\n\n  _uiManager: ?RCTUIManager;\n  _eventDispatcher: ?RCTEventDispatcher;\n  _imageLoader: ?RCTImageLoader;\n  _deviceInfo: ?RCTDeviceInfo;\n  _devLoadingView: ?RCTDevLoadingView;\n  _devSettings: ?RCTDevSettings;\n  _redBox: ?RCTRedBox;\n\n  constructor(\n    moduleName: string,\n    bundle: string,\n    nativeModules: NativeModuleImports\n  ) {\n    this.loading = true;\n    this.moduleName = moduleName;\n    this.bundleLocation = bundle;\n    this.nativeModules = nativeModules;\n\n    const bridgeCodeBlob = new Blob([WORKER_SRC]);\n    const worker = new Worker(URL.createObjectURL(bridgeCodeBlob));\n    this.setThread(worker);\n  }\n\n  moduleForClass(cls: RCTModuleStatics): RCTModule {\n    invariant(cls.__moduleName, \"Class does not seem to be exported\");\n    return this.modulesByName[bridgeModuleNameForClass(cls)];\n  }\n\n  queue: Array<any> = [];\n  executing: boolean = false;\n  thread: ?Worker;\n\n  setThread(thread: Worker) {\n    this.thread = thread;\n    thread.onmessage = this.onMessage.bind(this);\n  }\n\n  sendMessage(topic: string, payload: any) {\n    if (this.thread) {\n      this.thread.postMessage({ topic, payload });\n    }\n  }\n\n  callNativeModule(moduleId: number, methodId: number, params: Array<any>) {\n    const moduleConfig = this.moduleConfigs[moduleId];\n\n    invariant(moduleConfig, `No such module with id: ${moduleId}`);\n    const [name, , functions] = moduleConfig;\n\n    invariant(functions, `Module ${name} has no methods to call`);\n    const functionName = functions[methodId];\n\n    invariant(\n      functionName,\n      `No such function in module ${name} with id ${methodId}`\n    );\n    const nativeModule = this.modulesByName[name];\n\n    invariant(nativeModule, `No such module with name ${name}`);\n    invariant(\n      nativeModule[functionName],\n      `No such method ${functionName} on module ${name}`\n    );\n\n    // console.log(\"JS -> Native\", name, functionName, params);\n\n    nativeModule[functionName].apply(nativeModule, params);\n  }\n\n  onMessage(message: any) {\n    const { topic, payload } = message.data;\n\n    switch (topic) {\n      case \"bundleFinishedLoading\": {\n        this.loading = false;\n        NotificationCenter.emitEvent(\"RCTJavaScriptDidLoadNotification\");\n        if (this.bundleFinishedLoading) {\n          this.bundleFinishedLoading();\n        }\n        break;\n      }\n      case \"flushedQueue\": {\n        if (payload != null && Array.isArray(payload)) {\n          const [moduleIds, methodIds, params] = payload;\n          for (let i = 0; i < moduleIds.length; i++) {\n            this.messages.push({\n              moduleId: moduleIds[i],\n              methodId: methodIds[i],\n              args: params[i]\n            });\n          }\n        }\n        break;\n      }\n      case \"updateProgress\": {\n        this.devLoadingView.updateProgress(payload);\n        break;\n      }\n      default: {\n        console.warn(`Unknown topic: ${topic}`);\n      }\n    }\n\n    if (this.shouldContinue()) {\n      this.uiManager.requestTick();\n    }\n  }\n\n  initializeModules = async () => {\n    this.moduleClasses = await Promise.all(this.nativeModules);\n\n    // resolve default exports from es modules\n    this.moduleClasses = this.moduleClasses.map((maybeModule) => {\n      return maybeModule.__esModule ? (maybeModule: any).default : maybeModule;\n    });\n\n    this.moduleClasses.forEach((moduleClass: Class<RCTModule>) => {\n      const module = new moduleClass(this);\n      const moduleName = bridgeModuleNameForClass(moduleClass);\n      this.modulesByName[moduleName] = module;\n    });\n  };\n\n  generateModuleConfig(name: string, bridgeModule: RCTModule): ModuleConfig {\n    const methodNames = [...new Set(getPropertyNames(bridgeModule))].filter(\n      (methodName) => methodName.startsWith(\"__rct_export__\")\n    );\n\n    const constants = bridgeModule.constantsToExport\n      ? bridgeModule.constantsToExport()\n      : undefined;\n\n    const allMethods = [];\n    const promiseMethods = [];\n    const syncMethods = [];\n\n    methodNames.forEach((rctName) => {\n      if (bridgeModule[rctName]) {\n        const [methodName, methodType] = bridgeModule[rctName].call(\n          bridgeModule\n        );\n        allMethods.push(methodName);\n\n        if (methodType === RCTFunctionTypePromise) {\n          promiseMethods.push(allMethods.length - 1);\n        }\n\n        if (methodType === RCTFunctionTypeSync) {\n          syncMethods.push(allMethods.length - 1);\n        }\n      }\n    });\n\n    this.moduleDataForName[name] = {\n      name,\n      constants: constants || {},\n      methods: allMethods\n    };\n\n    const moduleConfig = moduleConfigFactory(\n      name,\n      constants,\n      allMethods,\n      promiseMethods,\n      syncMethods\n    );\n\n    this.moduleConfigs.push(moduleConfig);\n\n    return [name, constants, allMethods, promiseMethods, syncMethods];\n  }\n\n  loadBridgeConfig() {\n    const config = this.getInitialModuleConfig();\n    this.sendMessage(\"loadBridgeConfig\", {\n      config,\n      bundle: this.bundleLocation\n    });\n  }\n\n  getInitialModuleConfig = () => {\n    const remoteModuleConfig: ModuleConfig[] = Object.keys(\n      this.modulesByName\n    ).map((moduleName) => {\n      const bridgeModule = this.modulesByName[moduleName];\n      return this.generateModuleConfig(moduleName, bridgeModule);\n    });\n    return { remoteModuleConfig };\n  };\n\n  enqueueJSCall(moduleName: string, methodName: string, args: Array<any>) {\n    // console.log(\"Native -> JS\", moduleName, methodName, args);\n    this.sendMessage(\"callFunctionReturnFlushedQueue\", [\n      moduleName,\n      methodName,\n      args\n    ]);\n  }\n\n  enqueueJSCallWithDotMethod(moduleDotMethod: string, args: Array<any>) {\n    const [module, method] = moduleDotMethod.split(\".\");\n    this.enqueueJSCall(module, method, args);\n  }\n\n  enqueueJSCallback(id: number, args: Array<any>) {\n    // console.log(\"invokeCallback\", id, args);\n    this.sendMessage(\"invokeCallbackAndReturnFlushedQueue\", [id, args]);\n  }\n\n  callbackFromId(id: number) {\n    return (...args: Array<any>) => {\n      this.enqueueJSCallback(id, args);\n    };\n  }\n\n  get uiManager(): RCTUIManager {\n    if (!this._uiManager) {\n      const uiManager: any = this.modulesByName[\"UIManager\"];\n      this._uiManager = uiManager;\n    }\n    return this._uiManager;\n  }\n\n  get devLoadingView(): RCTDevLoadingView {\n    if (!this._devLoadingView) {\n      const devLoadingView: any = this.modulesByName[\"DevLoadingView\"];\n      this._devLoadingView = devLoadingView;\n    }\n    return this._devLoadingView;\n  }\n\n  get eventDispatcher(): RCTEventDispatcher {\n    if (!this._eventDispatcher) {\n      const eventDispatcher: any = this.modulesByName[\"EventDispatcher\"];\n      this._eventDispatcher = eventDispatcher;\n    }\n    return this._eventDispatcher;\n  }\n\n  get imageLoader(): RCTImageLoader {\n    if (!this._imageLoader) {\n      const imageLoader: any = this.modulesByName[\"ImageLoader\"];\n      this._imageLoader = imageLoader;\n    }\n    return this._imageLoader;\n  }\n\n  get deviceInfo(): RCTDeviceInfo {\n    if (!this._deviceInfo) {\n      const deviceInfo: any = this.modulesByName[\"DeviceInfo\"];\n      this._deviceInfo = deviceInfo;\n    }\n    return this._deviceInfo;\n  }\n\n  get devSettings(): RCTDevSettings {\n    if (!this._devSettings) {\n      const devSettings: any = this.modulesByName[\"DevSettings\"];\n      this._devSettings = devSettings;\n    }\n    return this._devSettings;\n  }\n\n  get redBox(): RCTRedBox {\n    if (!this._redBox) {\n      const redBox: any = this.modulesByName[\"RedBox\"];\n      this._redBox = redBox;\n    }\n    return this._redBox;\n  }\n\n  async frame() {\n    this.sendMessage(\"flush\");\n\n    const messages = [...this.messages];\n    this.messages = [];\n\n    messages.forEach(({ moduleId, methodId, args }) => {\n      this.callNativeModule(moduleId, methodId, args);\n    });\n  }\n\n  shouldContinue(): boolean {\n    return this.messages.length !== 0;\n  }\n}\n\nexport function RCT_EXPORT_METHOD(type: RCTFunctionType) {\n  return (target: any, key: any, descriptor: any) => {\n    if (typeof descriptor.value === \"function\") {\n      Object.defineProperty(target, `__rct_export__${key}`, {\n        ...descriptor,\n        value: () => [key, type]\n      });\n    }\n\n    return descriptor;\n  };\n}\n\nexport const RCT_EXPORT_MODULE = (name: string) => (\n  target: RCTModuleStatics\n) => {\n  target.__moduleName = name;\n};\n"]}