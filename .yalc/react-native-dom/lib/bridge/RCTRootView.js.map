{"version":3,"sources":["../../ReactDom/bridge/RCTRootView.js"],"names":["getAvailableSize","width","window","innerWidth","height","innerHeight","RCTRootView","bundle","moduleName","parent","enableHotReload","nativeModules","bundleLocation","updateHostStyle","setAttribute","bridge","initialization","initializeBridge","bundleFinishedLoading","bind","initializeModules","deviceInfoModule","modulesByName","dimensions","exportedDimensions","availableSize","uiManager","timing","touchHandler","attachToView","WebkitTapHighlightColor","userSelect","overflow","position","ticking","runApplication","appParameters","rootTag","reactTag","initialProps","enqueueJSCall","__DEV__","bundleURL","URL","console","warn","pathname","toString","substr","hostname","port","requestTick","requestAnimationFrame","renderLoop","frameStart","performance","now","Date","frame","idle","appendChild","loadBridgeConfig","_reactTag","allocateRootTag","registerRootView","value"],"mappings":"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","file":"RCTRootView.js","sourcesContent":["/**\n * @providesModule RCTRootView\n * @flow\n */\nimport RCTBridge from \"RCTBridge\";\nimport UIView from \"UIView\";\nimport NotificationCenter from \"NotificationCenter\";\nimport RCTDeviceInfo from \"RCTDeviceInfo\";\nimport RCTTiming from \"RCTTiming\";\nimport RCTTouchHandler from \"RCTTouchHandler\";\nimport CustomElement from \"CustomElement\";\nimport instrument from \"Instrument\";\n\nimport type { NativeModuleImports } from \"RCTModule\";\n\nfunction getAvailableSize() {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\n\n@CustomElement(\"rct-root-view\")\n// $FlowFixMe\nclass RCTRootView extends UIView {\n  _reactTag: number;\n\n  bridge: RCTBridge;\n  renderRoot: HTMLElement;\n  moduleName: string;\n  availableSize: Size;\n  parent: Element;\n  uiManager: *;\n  timing: RCTTiming;\n  ticking: boolean;\n  bundleLocation: string;\n  enableHotReload: boolean;\n\n  touchHandler: RCTTouchHandler;\n\n  initialization: Promise<void>;\n\n  constructor(\n    bundle: string,\n    moduleName: string,\n    parent: Element,\n    enableHotReload: boolean = false,\n    nativeModules: NativeModuleImports\n  ) {\n    super();\n\n    this.bundleLocation = bundle;\n    this.enableHotReload = enableHotReload;\n    this.moduleName = moduleName;\n    this.parent = parent;\n\n    if (this.enableHotReload) {\n      bundle += \"&hot=true\";\n    }\n\n    this.updateHostStyle(\"touchAction\", \"none\");\n    this.setAttribute(\"touch-action\", \"none\");\n\n    const bridge = new RCTBridge(moduleName, bundle, nativeModules);\n    this.initialization = this.initializeBridge(bridge);\n  }\n\n  async initializeBridge(bridge: RCTBridge) {\n    this.bridge = bridge;\n    this.bridge.bundleFinishedLoading = this.bundleFinishedLoading.bind(this);\n\n    await this.bridge.initializeModules();\n\n    const deviceInfoModule: RCTDeviceInfo = (this.bridge.modulesByName[\n      \"DeviceInfo\"\n    ]: any);\n\n    const dimensions = deviceInfoModule.exportedDimensions().window;\n    this.availableSize = {\n      width: dimensions.width,\n      height: dimensions.height\n    };\n\n    this.width = this.availableSize.width;\n    this.height = this.availableSize.height;\n\n    this.uiManager = this.bridge.uiManager;\n    this.timing = (this.bridge.modulesByName[\"Timing\"]: any);\n\n    this.touchHandler = new RCTTouchHandler(this.bridge);\n    this.touchHandler.attachToView(this);\n\n    this.updateHostStyle({\n      WebkitTapHighlightColor: \"transparent\",\n      userSelect: \"none\",\n      overflow: \"hidden\",\n      position: \"fixed\"\n    });\n\n    this.ticking = false;\n  }\n\n  get reactTag(): number {\n    if (!this._reactTag) {\n      this._reactTag = this.uiManager.allocateRootTag;\n      this.uiManager.registerRootView(this);\n    }\n    return this._reactTag;\n  }\n\n  set reactTag(value: number) {}\n\n  bundleFinishedLoading() {\n    this.runApplication();\n  }\n\n  runApplication() {\n    const appParameters = {\n      rootTag: this.reactTag,\n      initialProps: {}\n    };\n\n    this.bridge.enqueueJSCall(\"AppRegistry\", \"runApplication\", [\n      this.moduleName,\n      appParameters\n    ]);\n\n    if (__DEV__ && this.enableHotReload) {\n      const bundleURL = new URL(this.bundleLocation);\n      console.warn(\"HotReload on \" + this.bundleLocation);\n      this.bridge.enqueueJSCall(\"HMRClient\", \"enable\", [\n        \"dom\",\n        bundleURL.pathname.toString().substr(1),\n        bundleURL.hostname,\n        bundleURL.port\n      ]);\n    }\n\n    this.requestTick();\n  }\n\n  requestTick() {\n    if (!this.ticking) {\n      window.requestAnimationFrame(this.renderLoop.bind(this));\n    }\n    this.ticking = true;\n  }\n\n  async renderLoop() {\n    this.ticking = false;\n\n    const frameStart = window.performance ? performance.now() : Date.now();\n\n    await instrument(\"⚛️ Timing\", () => this.timing.frame());\n    await instrument(\"⚛️ Bridge\", () => this.bridge.frame());\n    await instrument(\"⚛️ Rendering\", () => this.uiManager.frame());\n\n    await this.timing.idle(frameStart);\n\n    // if (\n    //   this.timing.shouldContinue() ||\n    //   this.bridge.shouldContinue() ||\n    //   this.uiManager.shouldContinue()\n    // ) {\n    this.requestTick();\n    // }\n  }\n\n  async render() {\n    await this.initialization;\n\n    this.parent.appendChild(this);\n    this.bridge.loadBridgeConfig();\n    this.requestTick();\n  }\n}\n\nexport default RCTRootView;\n"]}