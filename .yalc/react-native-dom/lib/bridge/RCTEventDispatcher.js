Object.defineProperty(exports,"__esModule",{value:true});exports.RCTTextEventType=undefined;var _toConsumableArray2=require("babel-runtime/helpers/toConsumableArray");var _toConsumableArray3=_interopRequireDefault(_toConsumableArray2);var _extends2=require("babel-runtime/helpers/extends");var _extends3=_interopRequireDefault(_extends2);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _dec,_class;exports.normalizeInputEventName=normalizeInputEventName;var _RCTBridge=require("./RCTBridge");var _RCTBridge2=_interopRequireDefault(_RCTBridge);var _Invariant=require("./../utils/Invariant");var _Invariant2=_interopRequireDefault(_Invariant);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var RCTTextEventType=exports.RCTTextEventType={RCTTextEventTypeFocus:0,RCTTextEventTypeBlur:1,RCTTextEventTypeChange:2,RCTTextEventTypeSubmit:3,RCTTextEventTypeEnd:4,RCTTextEventTypeKeyPress:5};function capitalizeFirstLetter(string){return string.charAt(0).toUpperCase()+string.slice(1);}function normalizeInputEventName(eventName){if(eventName.startsWith("on")){eventName="top"+eventName.substring(2);}else if(!eventName.startsWith("top")){eventName="top"+capitalizeFirstLetter(eventName);}return eventName;}function stringToHash(input){var hash=0,chr=void 0;if(input.length===0)return hash;for(var i=0;i<input.length;i++){chr=input.charCodeAt(i);hash=(hash<<5)-hash+chr;hash|=0;}return hash;}var RCTEventDispatcher=(_dec=(0,_RCTBridge.RCT_EXPORT_MODULE)("RCTEventDispatcher"),_dec(_class=function(){(0,_createClass3.default)(RCTEventDispatcher,null,[{key:"RCTGetEventID",value:function RCTGetEventID(event){return event.viewTag|(stringToHash(event.eventName)&0xffff)<<32|event.coalescingKey<<48;}}]);function RCTEventDispatcher(bridge){(0,_classCallCheck3.default)(this,RCTEventDispatcher);this.bridge=bridge;this.events={};this.eventQueue=[];this.eventsDispatchScheduled=false;this.observers=new Set();return this;}(0,_createClass3.default)(RCTEventDispatcher,[{key:"sendDeviceEvent",value:function sendDeviceEvent(name,body){this.bridge.enqueueJSCall("RCTDeviceEventEmitter","emit",body?[name,body]:[name]);}},{key:"sendInputEvent",value:function sendInputEvent(name,body){name=normalizeInputEventName(name);this.bridge.enqueueJSCall("RCTEventEmitter","receiveEvent",[body.target,name,body]);}},{key:"sendTextEvent",value:function sendTextEvent(type,reactTag,text,key,eventCount){var events=["focus","blur","change","submitEditing","endEditing","keyPress"];var body={eventCount:eventCount,target:reactTag};if(text){body.text=text;}if(key){}this.sendInputEvent(events[type],body);}},{key:"sendEvent",value:function sendEvent(event){for(var _iterator=this.observers,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var observer=_ref;observer.eventDispatcherWillDispatchEvent(event);}var eventID=RCTEventDispatcher.RCTGetEventID(event);var previousEvent=this.events[eventID];if(previousEvent){(0,_Invariant2.default)(event.canCoalesce(),"Got event which cannot be coalesced, but has the same eventID "+eventID+" as the previous event");event=previousEvent.coalesceWithEvent(previousEvent);}else{this.eventQueue.push(eventID);}this.events[eventID]=event;var scheduleEventsDispatch=false;if(!this.eventsDispatchScheduled){this.eventsDispatchScheduled=true;scheduleEventsDispatch=true;}if(scheduleEventsDispatch){this.flushEventsQueue();}}},{key:"dispatchEvent",value:function dispatchEvent(event){this.bridge.enqueueJSCallWithDotMethod(event.moduleDotMethod(),event.arguments());}},{key:"flushEventsQueue",value:function flushEventsQueue(){var _this=this;var events=(0,_extends3.default)({},this.events);this.events={};var eventQueue=[].concat((0,_toConsumableArray3.default)(this.eventQueue));this.eventQueue=[];this.eventsDispatchScheduled=false;eventQueue.forEach(function(eventId){_this.dispatchEvent(events[eventId]);});}},{key:"addDispatchObserver",value:function addDispatchObserver(observer){this.observers.add(observer);}},{key:"removeDispatchObserver",value:function removeDispatchObserver(observer){this.observers.delete(observer);}}]);return RCTEventDispatcher;}())||_class);exports.default=RCTEventDispatcher;
//# sourceMappingURL=RCTEventDispatcher.js.map