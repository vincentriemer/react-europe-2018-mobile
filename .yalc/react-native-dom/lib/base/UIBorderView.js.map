{"version":3,"sources":["../../ReactDom/base/UIBorderView.js"],"names":["BORDER_STYLE_PROPS","BORDER_WIDTH_PROPS","BORDER_COLOR_PROPS","BORDER_RADIUS_PROPS","ALL_BORDER_PROPS","concat","UIBorderView","style","position","top","left","boxSizing","transformOrigin","pointerEvents","borderStyle","borderWidth","overflow","contain","forEach","propName","Object","defineProperty","configurable","set","value","a","r","g","b","stringValue","width","height","borderColor","borderRadius","HTMLElement"],"mappings":"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","file":"UIBorderView.js","sourcesContent":["/**\n * @providesModule UIBorderView\n * @flow\n */\n\nimport ColorArrayFromHexARGB from \"ColorArrayFromHexARGB\";\nimport CustomElement from \"CustomElement\";\n\nconst BORDER_STYLE_PROPS = [\n  \"borderStyle\",\n  \"borderTopStyle\",\n  \"borderBottomStyle\",\n  \"borderLeftStyle\",\n  \"borderRightStyle\"\n];\n\nconst BORDER_WIDTH_PROPS = [\n  \"borderWidth\",\n  \"borderTopWidth\",\n  \"borderBottomWidth\",\n  \"borderLeftWidth\",\n  \"borderRightWidth\"\n];\n\nconst BORDER_COLOR_PROPS = [\n  \"borderColor\",\n  \"borderTopColor\",\n  \"borderBottomColor\",\n  \"borderLeftColor\",\n  \"borderRightColor\"\n];\n\nconst BORDER_RADIUS_PROPS = [\n  \"borderRadius\",\n  \"borderTopLeftRadius\",\n  \"borderTopRightRadius\",\n  \"borderBottomLeftRadius\",\n  \"borderBottomRightRadius\"\n];\n\nexport const ALL_BORDER_PROPS: string[] = [].concat(\n  BORDER_STYLE_PROPS,\n  BORDER_WIDTH_PROPS,\n  BORDER_COLOR_PROPS,\n  BORDER_RADIUS_PROPS\n);\n\n@CustomElement(\"ui-border-view\")\nclass UIBorderView extends HTMLElement {\n  constructor() {\n    super();\n\n    Object.assign(this.style, {\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      boxSizing: \"border-box\",\n      transformOrigin: \"top left\",\n      pointerEvents: \"none\",\n      borderStyle: \"solid\",\n      borderWidth: \"0\",\n      overflow: \"hidden\",\n      contain: \"strict\"\n    });\n\n    BORDER_STYLE_PROPS.forEach((propName) => {\n      Object.defineProperty(this, propName, {\n        configurable: true,\n        set: (value) => {\n          if (value == null) {\n            // $FlowFixMe\n            this.style[propName] = \"solid\";\n          } else {\n            // $FlowFixMe\n            this.style[propName] = value;\n          }\n        }\n      });\n    });\n\n    BORDER_COLOR_PROPS.forEach((propName) => {\n      Object.defineProperty(this, propName, {\n        configurable: true,\n        set: (value) => {\n          const [a, r, g, b] = ColorArrayFromHexARGB(value);\n          const stringValue = `rgba(${r},${g},${b},${a})`;\n          // $FlowFixMe\n          this.style[propName] = stringValue;\n        }\n      });\n    });\n\n    [].concat(BORDER_WIDTH_PROPS, BORDER_RADIUS_PROPS).forEach((propName) => {\n      Object.defineProperty(this, propName, {\n        configurable: true,\n        set: (value) => {\n          // $FlowFixMe\n          this.style[propName] = `${value}px`;\n        }\n      });\n    });\n  }\n\n  updateDimensions(width: number, height: number) {\n    this.style.width = `${width}px`;\n    this.style.height = `${height}px`;\n  }\n\n  // property shorthands\n  set borderColor(value: number) {\n    const [a, r, g, b] = ColorArrayFromHexARGB(value);\n    const stringValue = `rgba(${r},${g},${b},${a})`;\n    this.style.borderColor = stringValue;\n  }\n\n  set borderRadius(value: number) {\n    this.style.borderRadius = `${value}px`;\n  }\n\n  set borderWidth(value: number) {\n    this.style.borderWidth = `${value}px`;\n  }\n\n  set borderStyle(value: string) {\n    if (value == null) {\n      this.style.borderStyle = \"solid\";\n    } else {\n      this.style.borderStyle = value;\n    }\n  }\n}\n\nexport default UIBorderView;\n"]}