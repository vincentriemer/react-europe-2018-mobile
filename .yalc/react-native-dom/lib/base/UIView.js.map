{"version":3,"sources":["../../ReactDom/base/UIView.js"],"names":["MatrixMath","UIChildContainerView","style","contain","position","top","left","userSelect","transformOrigin","width","height","HTMLElement","styleElement","document","createElement","innerHTML","head","appendChild","UIHitSlopView","viewOwner","touchable","value","resolvedValue","Object","entries","defaultHitSlop","reduce","acc","cur","cursor","bottom","right","UIView","_top","_left","_bottom","_right","_width","_height","_touchable","_disabled","_shadowColor","_shadowOffset","_shadowOpacity","_shadowRadius","isAnimatingOpacity","handleEndedAnimatedOpacity","removeWillChange","isAnimatingTransform","handleEndedAnimatedTransform","childContainer","reactSubviews","hasBeenFramed","backgroundColor","_willChangeRegistry","boxSizing","overflow","forEach","propName","defineProperty","configurable","set","startsWith","endsWith","borderChild","key","hasOwnProperty","updateWillChange","willChange","keys","join","propValue","styleObject","prefixStyle","transforms","_animatedTransform","push","_transform","length","transformString","updateHostStyle","v","cursorValue","r","g","b","resolvedColor","subview","index","beforeElement","insertBefore","splice","reactSuperview","undefined","filter","s","removeReactSubview","remove","handler","deviceType","touchListenerOptions","addEventListener","pointerBegan","_reactTag","updateDimensions","borderView","updateTransform","a","stringValue","_backgroundColor","_pointerEvents","classList","includes","add","_opacity","addWillChange","maybe2d","attempt2d","transformObject","property","hitSlopView","updateCursor","color","updateShadow","slop","removeChild"],"mappings":"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","file":"UIView.js","sourcesContent":["/**\n * @providesModule UIView\n * @flow\n */\n\nimport type RCTTouchHandler from \"RCTTouchHandler\";\nimport type { RCTComponent } from \"RCTComponent\";\nimport UIBorderView, { ALL_BORDER_PROPS } from \"UIBorderView\";\nimport CustomElement from \"CustomElement\";\nimport ColorArrayFromHexARGB from \"ColorArrayFromHexARGB\";\nimport * as MatrixMath from \"MatrixMath\";\nimport prefixInlineStyles from \"prefixInlineStyles\";\nimport isIOS from \"isIOS\";\nimport debounce from \"debounce\";\n\n@CustomElement(\"ui-child-container-view\")\nexport class UIChildContainerView extends HTMLElement {\n  constructor() {\n    super();\n    Object.assign(\n      this.style,\n      prefixInlineStyles({\n        contain: \"layout style size\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        userSelect: \"inherit\",\n        transformOrigin: \"top left\"\n      })\n    );\n  }\n\n  updateDimensions(width: number, height: number) {\n    this.style.width = `${width}px`;\n    this.style.height = `${height}px`;\n  }\n}\n\nexport type HitSlop = {\n  top?: number,\n  bottom?: number,\n  left?: number,\n  right?: number\n};\n\ntype WillChangeRegistry = {\n  [key: string]: number\n};\n\n(() => {\n  const styleElement = document.createElement(\"style\");\n  styleElement.innerHTML = `\n    .pe-auto, .pe-box-only {\n      pointer-events: auto;\n    }\n    .pe-box-only > * {\n      pointer-events: none;\n    }\n    .pe-none, .pe-box-none, .pe-none * {\n      pointer-events: none !important;\n    }\n    .pe-box-none > * {\n      pointer-events: auto;\n    }\n  `;\n  document.head && document.head.appendChild(styleElement);\n})();\n\n@CustomElement(\"ui-hit-slop-view\")\nexport class UIHitSlopView extends HTMLElement {\n  static defaultHitSlop: HitSlop = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  };\n\n  viewOwner: UIView;\n\n  constructor(viewOwner: UIView, touchable: boolean) {\n    super();\n\n    this.viewOwner = viewOwner;\n    this.touchable = touchable;\n\n    Object.assign(\n      this.style,\n      prefixInlineStyles({\n        contain: \"strict\",\n        position: \"absolute\"\n      })\n    );\n  }\n\n  set slop(value: HitSlop) {\n    const resolvedValue = Object.entries({\n      ...UIHitSlopView.defaultHitSlop,\n      ...value\n    }).reduce(\n      (acc, cur: any) => ({\n        ...acc,\n        [cur[0]]: `${-1 * cur[1]}px`\n      }),\n      {}\n    );\n\n    Object.assign(this.style, resolvedValue);\n  }\n\n  set touchable(value: boolean) {\n    this.style.cursor = value ? \"pointer\" : \"auto\";\n  }\n}\n\n@CustomElement(\"ui-view\")\nclass UIView extends HTMLElement implements RCTComponent {\n  _top: number = 0;\n  _left: number = 0;\n  _bottom: number = 0;\n  _right: number = 0;\n  _width: number = 0;\n  _height: number = 0;\n  _touchable: boolean = false;\n  _opacity: number;\n  _transform: number[];\n  _animatedTransform: string;\n  _backgroundColor: string;\n  _disabled: boolean = false;\n  _pointerEvents: ?string;\n\n  _shadowColor: [number, number, number, number] = [1, 0, 0, 0];\n  _shadowOffset: { width: number, height: number } = { width: 0, height: 0 };\n  _shadowOpacity: number = 0;\n  _shadowRadius: number = 0;\n\n  _willChangeRegistry: WillChangeRegistry;\n\n  childContainer: UIChildContainerView;\n  borderView: ?UIBorderView;\n  hitSlopView: ?UIHitSlopView;\n\n  _reactTag: number;\n  reactSubviews: Array<UIView>;\n  reactSuperview: ?UIView;\n  hasBeenFramed: boolean;\n\n  constructor() {\n    super();\n\n    this.childContainer = new UIChildContainerView();\n    this.appendChild(this.childContainer);\n\n    this.reactSubviews = [];\n    this.hasBeenFramed = false;\n\n    this.position = \"absolute\";\n    this.backgroundColor = \"rgba(0,0,0,0)\";\n\n    this._willChangeRegistry = {};\n\n    Object.assign(\n      this.style,\n      prefixInlineStyles({\n        contain: \"size layout style\",\n        boxSizing: \"border-box\",\n        userSelect: \"inherit\",\n        overflow: \"visible\"\n      })\n    );\n\n    ALL_BORDER_PROPS.forEach((propName) => {\n      Object.defineProperty(this, propName, {\n        configurable: true,\n        set: (value) => {\n          if (propName.startsWith(\"border\") && propName.endsWith(\"Radius\")) {\n            this.style[propName] = `${value}px`;\n          }\n          // $FlowFixMe\n          this.borderChild[propName] = value;\n        }\n      });\n    });\n  }\n\n  addWillChange(key: string) {\n    if (this._willChangeRegistry.hasOwnProperty(key)) {\n      this._willChangeRegistry[key] += 1;\n    } else {\n      this._willChangeRegistry[key] = 1;\n    }\n    this.updateWillChange();\n  }\n\n  removeWillChange(key: string) {\n    if (this._willChangeRegistry.hasOwnProperty(key)) {\n      if (this._willChangeRegistry[key] === 1) {\n        delete this._willChangeRegistry[key];\n      } else {\n        this._willChangeRegistry[key] -= 1;\n      }\n      this.updateWillChange();\n    }\n  }\n\n  updateWillChange() {\n    this.style.willChange = Object.keys(this._willChangeRegistry).join(\", \");\n  }\n\n  prefixStyle(propName: string | Object, propValue?: string) {\n    let styleObject = {};\n    if (typeof propName === \"string\") {\n      styleObject[propName] = propValue;\n    } else {\n      styleObject = propName;\n    }\n    return prefixInlineStyles(styleObject);\n  }\n\n  updateHostStyle(propName: string | Object, propValue?: string) {\n    Object.assign(this.style, this.prefixStyle(propName, propValue));\n  }\n\n  updateChildContainerStyle(propName: string | Object, propValue?: string) {\n    Object.assign(\n      this.childContainer.style,\n      this.prefixStyle(propName, propValue)\n    );\n  }\n\n  get reactTag(): number {\n    return this._reactTag;\n  }\n\n  set reactTag(value: number) {\n    this._reactTag = value;\n  }\n\n  get frame(): Frame {\n    return {\n      top: this.top,\n      left: this.left,\n      width: this.width,\n      height: this.height\n    };\n  }\n\n  set frame(value: Frame) {\n    Object.assign(this, value);\n\n    this.childContainer.updateDimensions(value.width, value.height);\n    if (this.borderView) {\n      this.borderView.updateDimensions(value.width, value.height);\n    }\n    if (!this.hasBeenFramed) {\n      this.hasBeenFramed = true;\n    }\n  }\n\n  set position(value: string) {\n    this.updateHostStyle(\"position\", value);\n  }\n\n  get top(): number {\n    return this._top;\n  }\n\n  set top(value: number) {\n    if (value !== this._top) {\n      this._top = value;\n      this.updateTransform();\n    }\n  }\n\n  get left(): number {\n    return this._left;\n  }\n\n  set left(value: number) {\n    if (value !== this._left) {\n      this._left = value;\n      this.updateTransform();\n    }\n  }\n\n  updateTransform() {\n    const transforms = [`translate(${this._left}px, ${this._top}px)`];\n\n    if (this._animatedTransform) {\n      transforms.push(this._animatedTransform);\n    } else if (this._transform) {\n      transforms.push(\n        this._transform.length === 6\n          ? `matrix(${this._transform.join(\", \")}`\n          : `matrix3d(${this._transform.join(\", \")})`\n      );\n    }\n\n    const transformString = transforms.join(\" \");\n\n    this.updateHostStyle(\"transform\", transformString);\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  set width(value: number) {\n    if (value !== this._width) {\n      this._width = value;\n      this.updateHostStyle(\"width\", `${value}px`);\n    }\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  set height(value: number) {\n    if (value !== this._height) {\n      this._height = value;\n      this.updateHostStyle(\"height\", `${value}px`);\n    }\n  }\n\n  set backgroundColor(value: string | number) {\n    let resolvedValue = value;\n    if (typeof value === \"number\") {\n      const [a, r, g, b] = ColorArrayFromHexARGB(value);\n      const stringValue = `rgba(${r},${g},${b},${a})`;\n      this._backgroundColor = stringValue;\n      this.updateHostStyle(\"backgroundColor\", stringValue);\n    } else {\n      this._backgroundColor = value;\n      this.updateHostStyle(\"backgroundColor\", value);\n    }\n  }\n\n  set pointerEvents(value: string) {\n    if (this._pointerEvents != null) {\n      this.classList.remove(`pe-${this._pointerEvents}`);\n    }\n\n    if ([\"auto\", \"none\", \"box-none\", \"box-only\"].includes(value)) {\n      this.classList.add(`pe-${value}`);\n    }\n\n    this._pointerEvents = value;\n  }\n\n  isAnimatingOpacity = false;\n\n  get opacity(): number {\n    return this._opacity;\n  }\n\n  set opacity(value: number) {\n    if (!this.isAnimatingOpacity && this._opacity != null) {\n      this.addWillChange(\"opacity\");\n      this.isAnimatingOpacity = true;\n    }\n\n    this.handleEndedAnimatedOpacity();\n\n    this._opacity = value;\n    this.updateHostStyle(\"opacity\", `${value}`);\n  }\n\n  handleEndedAnimatedOpacity = debounce(() => {\n    this.removeWillChange(\"opacity\");\n    this.isAnimatingOpacity = false;\n  }, 200);\n\n  get transform(): number[] {\n    return this._transform;\n  }\n\n  attempt2d(v: Array<number>) {\n    if (\n      v[2] === 0 &&\n      v[3] === 0 &&\n      v[6] === 0 &&\n      v[7] === 0 &&\n      v[8] === 0 &&\n      v[9] === 0 &&\n      v[10] === 1 &&\n      v[11] === 0 &&\n      v[14] === 0 &&\n      v[15] === 1\n    ) {\n      return [v[0], v[1], v[4], v[5], v[12], v[13]];\n    }\n  }\n\n  set transform(value: ?Array<number>) {\n    if (value) {\n      const maybe2d = this.attempt2d(value);\n      this._transform = maybe2d ? maybe2d : value;\n    } else {\n      this._transform = [1, 0, 0, 1, 0, 0];\n    }\n    this.updateTransform();\n  }\n\n  get animatedTransform(): string {\n    return this._animatedTransform;\n  }\n\n  isAnimatingTransform = false;\n\n  set animatedTransform(value: ?Array<Object>) {\n    if (!value) {\n      this._animatedTransform = \"\";\n      this.updateTransform();\n      return;\n    }\n\n    let transformString = \"\";\n    value.forEach((transformObject) => {\n      Object.keys(transformObject).forEach((property) => {\n        const value = transformObject[property];\n        if ([\"translateX\", \"translateY\", \"translateZ\"].includes(property)) {\n          transformString += `${property}(${value}px)`;\n        } else if (\n          [\"rotate\", \"rotateX\", \"rotateY\", \"rotateZ\"].includes(property)\n        ) {\n          transformString += `${property}(${value}rad)`;\n        } else {\n          transformString += `${property}(${value})`;\n        }\n      });\n    });\n\n    if (!this.isAnimatingTransform) {\n      this.addWillChange(\"transform\");\n      this.isAnimatingTransform = true;\n    }\n\n    this.handleEndedAnimatedTransform();\n\n    this._animatedTransform = transformString;\n    this.updateTransform();\n  }\n\n  handleEndedAnimatedTransform = debounce(() => {\n    this.removeWillChange(\"transform\");\n    this.isAnimatingTransform = false;\n  }, 100);\n\n  get borderChild(): UIBorderView {\n    if (!this.borderView) {\n      const borderView = new UIBorderView();\n\n      this.appendChild(borderView);\n      this.borderView = borderView;\n      return borderView;\n    }\n\n    return this.borderView;\n  }\n\n  get touchable(): boolean {\n    return this._touchable;\n  }\n\n  updateCursor() {\n    const cursorValue = this._touchable && !this._disabled ? \"pointer\" : \"auto\";\n    this.updateHostStyle(\"cursor\", cursorValue);\n  }\n\n  set touchable(value: boolean) {\n    this._touchable = value;\n    if (this.hitSlopView) {\n      this.hitSlopView.touchable = value;\n    }\n    this.updateCursor();\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = value;\n    this.updateCursor();\n  }\n\n  set zIndex(value: number) {\n    this.updateHostStyle(\"zIndex\", `${value}`);\n  }\n\n  set overflow(value: string) {\n    if (value === \"scroll\") value = \"auto\";\n    this.updateHostStyle(\"overflow\", value);\n  }\n\n  set backfaceVisibility(value: string) {\n    this.updateHostStyle(\"backfaceVisibility\", value);\n  }\n\n  // SHADOW PROPS ================================================\n\n  updateShadow() {\n    const [, r, g, b] = this._shadowColor;\n    const resolvedColor = `rgba(${r}, ${g}, ${b}, ${this._shadowOpacity})`;\n\n    this.updateHostStyle(\n      \"boxShadow\",\n      `${this._shadowOffset.width}px ${this._shadowOffset.height}px ${\n        this._shadowRadius\n      }px ${resolvedColor}`\n    );\n  }\n\n  set shadowColor(value: number) {\n    const color = ColorArrayFromHexARGB(value);\n    this._shadowColor = color;\n    this.updateShadow();\n  }\n\n  set shadowOffset(value: { width: number, height: number }) {\n    this._shadowOffset = value;\n    this.updateShadow();\n  }\n\n  set shadowOpacity(value: number) {\n    this._shadowOpacity = value;\n    this.updateShadow();\n  }\n\n  set shadowRadius(value: number) {\n    this._shadowRadius = value;\n    this.updateShadow();\n  }\n\n  // HITSLOP PROPS ================================================\n\n  set hitSlop(value?: HitSlop) {\n    if (value != null) {\n      let hitSlopView = this.hitSlopView;\n      if (hitSlopView == null) {\n        hitSlopView = new UIHitSlopView(this, this._touchable);\n        this.insertBefore(hitSlopView, this.childContainer);\n        this.hitSlopView = hitSlopView;\n      }\n      hitSlopView.slop = value;\n    } else if (this.hitSlopView != null) {\n      this.removeChild(this.hitSlopView);\n      this.hitSlopView = undefined;\n    }\n  }\n\n  insertReactSubviewAtIndex(subview: UIView, index: number) {\n    if (index === this.reactSubviews.length) {\n      this.childContainer.appendChild(subview);\n    } else {\n      const beforeElement = this.reactSubviews[index];\n      this.childContainer.insertBefore(subview, beforeElement);\n    }\n\n    this.reactSubviews.splice(index, 0, subview);\n    subview.reactSuperview = this;\n  }\n\n  removeReactSubview(subview: UIView) {\n    subview.reactSuperview = undefined;\n    this.reactSubviews = this.reactSubviews.filter((s) => s !== subview);\n  }\n\n  purge() {\n    if (this.reactSuperview) {\n      this.reactSuperview.removeReactSubview(this);\n    }\n    this.remove();\n  }\n\n  addGestureRecognizer(\n    handler: RCTTouchHandler,\n    deviceType: \"mouseOnly\" | \"touchOnly\" | \"hybrid\",\n    touchListenerOptions: Object | boolean\n  ) {\n    // $FlowFixMe\n    this.addEventListener(\n      \"pointerdown\",\n      handler.pointerBegan,\n      touchListenerOptions\n    );\n  }\n\n  removeGestureRecognizer(handler: RCTTouchHandler) {\n    // TODO: Implement\n  }\n}\n\nexport default UIView;\n"]}