{"version":3,"sources":["../../ReactDom/utils/MatrixMath.dom.js"],"names":["MatrixMath","createIdentityMatrix","createCopy","m","createOrthographic","left","right","bottom","top","near","far","a","b","c","tx","ty","tz","createFrustum","r_width","r_height","r_depth","x","y","A","B","C","D","createPerspective","fovInRadians","aspect","h","Math","tan","createTranslate2d","mat","reuseTranslate2dCommand","matrixCommand","reuseTranslate3dCommand","z","createScale","factor","reuseScaleCommand","reuseScale3dCommand","reusePerspectiveCommand","p","reuseScaleXCommand","reuseScaleYCommand","reuseScaleZCommand","reuseRotateXCommand","radians","cos","sin","reuseRotateYCommand","amount","reuseRotateZCommand","createRotateZ","reuseSkewXCommand","reuseSkewYCommand","multiplyInto","out","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","determinant","matrix","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","det","transpose","multiplyVectorByMatrix","v","vx","vy","vz","vw","v3Length","sqrt","v3Normalize","vector","im","v3Dot","v3Combine","aScale","bScale","v3Cross","quaternionToDegreesXYZ","q","row","qx","qy","qz","qw","qw2","qx2","qy2","qz2","test","unit","conv","PI","atan2","roundTo3Places","asin","n","arr","toString","split","round","decomposeMatrix","transformMatrix","length","perspective","quaternion","scale","skew","translation","perspectiveMatrix","i","push","j","value","rightHandSide","inversePerspectiveMatrix","transposedInversePerspectiveMatrix","pdum3","max","rotationDegrees","rotate","rotateX","rotateY","scaleX","scaleY","translateX","translateY","module","exports"],"mappings":"+HAOA,sC,sIAMA,GAAIA,YAAa,CACfC,qBAAsB,+BAAW,CAC/B,MAAO,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CAA4B,CAA5B,CAA+B,CAA/B,CAAkC,CAAlC,CAAqC,CAArC,CAAwC,CAAxC,CAA2C,CAA3C,CAA8C,CAA9C,CAAP,CACD,CAHc,CAKfC,WAAY,oBAASC,CAAT,CAAY,CACtB,MAAO,CACLA,EAAE,CAAF,CADK,CAELA,EAAE,CAAF,CAFK,CAGLA,EAAE,CAAF,CAHK,CAILA,EAAE,CAAF,CAJK,CAKLA,EAAE,CAAF,CALK,CAMLA,EAAE,CAAF,CANK,CAOLA,EAAE,CAAF,CAPK,CAQLA,EAAE,CAAF,CARK,CASLA,EAAE,CAAF,CATK,CAULA,EAAE,CAAF,CAVK,CAWLA,EAAE,EAAF,CAXK,CAYLA,EAAE,EAAF,CAZK,CAaLA,EAAE,EAAF,CAbK,CAcLA,EAAE,EAAF,CAdK,CAeLA,EAAE,EAAF,CAfK,CAgBLA,EAAE,EAAF,CAhBK,CAAP,CAkBD,CAxBc,CA0BfC,mBAAoB,4BAASC,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,GAA9B,CAAmCC,IAAnC,CAAyCC,GAAzC,CAA8C,CAChE,GAAIC,GAAI,GAAKL,MAAQD,IAAb,CAAR,CACA,GAAIO,GAAI,GAAKJ,IAAMD,MAAX,CAAR,CACA,GAAIM,GAAI,CAAC,CAAD,EAAMH,IAAMD,IAAZ,CAAR,CAEA,GAAIK,IAAK,EAAER,MAAQD,IAAV,GAAmBC,MAAQD,IAA3B,CAAT,CACA,GAAIU,IAAK,EAAEP,IAAMD,MAAR,GAAmBC,IAAMD,MAAzB,CAAT,CACA,GAAIS,IAAK,EAAEN,IAAMD,IAAR,GAAiBC,IAAMD,IAAvB,CAAT,CAEA,MAAO,CAACE,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgBC,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CAA4B,CAA5B,CAA+BC,CAA/B,CAAkC,CAAlC,CAAqCC,EAArC,CAAyCC,EAAzC,CAA6CC,EAA7C,CAAiD,CAAjD,CAAP,CACD,CApCc,CAsCfC,cAAe,uBAASZ,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,GAA9B,CAAmCC,IAAnC,CAAyCC,GAAzC,CAA8C,CAC3D,GAAIQ,SAAU,GAAKZ,MAAQD,IAAb,CAAd,CACA,GAAIc,UAAW,GAAKX,IAAMD,MAAX,CAAf,CACA,GAAIa,SAAU,GAAKX,KAAOC,GAAZ,CAAd,CACA,GAAIW,GAAI,GAAKZ,KAAOS,OAAZ,CAAR,CACA,GAAII,GAAI,GAAKb,KAAOU,QAAZ,CAAR,CACA,GAAII,GAAI,CAACjB,MAAQD,IAAT,EAAiBa,OAAzB,CACA,GAAIM,GAAI,CAAChB,IAAMD,MAAP,EAAiBY,QAAzB,CACA,GAAIM,GAAI,CAACf,IAAMD,IAAP,EAAeW,OAAvB,CACA,GAAIM,GAAI,GAAKhB,IAAMD,IAAN,CAAaW,OAAlB,CAAR,CACA,MAAO,CAACC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgBC,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyBC,CAAzB,CAA4BC,CAA5B,CAA+BC,CAA/B,CAAkC,CAAC,CAAnC,CAAsC,CAAtC,CAAyC,CAAzC,CAA4CC,CAA5C,CAA+C,CAA/C,CAAP,CACD,CAjDc,CAyDfC,kBAAmB,2BAASC,YAAT,CAAuBC,MAAvB,CAA+BpB,IAA/B,CAAqCC,GAArC,CAA0C,CAC3D,GAAIoB,GAAI,EAAIC,KAAKC,GAAL,CAASJ,aAAe,CAAxB,CAAZ,CACA,GAAIR,SAAU,GAAKX,KAAOC,GAAZ,CAAd,CACA,GAAIe,GAAI,CAACf,IAAMD,IAAP,EAAeW,OAAvB,CACA,GAAIM,GAAI,GAAKhB,IAAMD,IAAN,CAAaW,OAAlB,CAAR,CACA,MAAO,CAACU,EAAID,MAAL,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyBC,CAAzB,CAA4B,CAA5B,CAA+B,CAA/B,CAAkC,CAAlC,CAAqC,CAArC,CAAwCL,CAAxC,CAA2C,CAAC,CAA5C,CAA+C,CAA/C,CAAkD,CAAlD,CAAqDC,CAArD,CAAwD,CAAxD,CAAP,CACD,CA/Dc,CAiEfO,kBAAmB,2BAASZ,CAAT,CAAYC,CAAZ,CAAe,CAChC,GAAIY,KAAMlC,WAAWC,oBAAX,EAAV,CACAD,WAAWmC,uBAAX,CAAmCD,GAAnC,CAAwCb,CAAxC,CAA2CC,CAA3C,EACA,MAAOY,IAAP,CACD,CArEc,CAuEfC,wBAAyB,iCAASC,aAAT,CAAwBf,CAAxB,CAA2BC,CAA3B,CAA8B,CACrDc,cAAc,EAAd,EAAoBf,CAApB,CACAe,cAAc,EAAd,EAAoBd,CAApB,CACD,CA1Ec,CA4Efe,wBAAyB,iCAASD,aAAT,CAAwBf,CAAxB,CAA2BC,CAA3B,CAA8BgB,CAA9B,CAAiC,CACxDF,cAAc,EAAd,EAAoBf,CAApB,CACAe,cAAc,EAAd,EAAoBd,CAApB,CACAc,cAAc,EAAd,EAAoBE,CAApB,CACD,CAhFc,CAkFfC,YAAa,qBAASC,MAAT,CAAiB,CAC5B,GAAIN,KAAMlC,WAAWC,oBAAX,EAAV,CACAD,WAAWyC,iBAAX,CAA6BP,GAA7B,CAAkCM,MAAlC,EACA,MAAON,IAAP,CACD,CAtFc,CAwFfO,kBAAmB,2BAASL,aAAT,CAAwBI,MAAxB,CAAgC,CACjDJ,cAAc,CAAd,EAAmBI,MAAnB,CACAJ,cAAc,CAAd,EAAmBI,MAAnB,CACD,CA3Fc,CA6FfE,oBAAqB,6BAASN,aAAT,CAAwBf,CAAxB,CAA2BC,CAA3B,CAA8BgB,CAA9B,CAAiC,CACpDF,cAAc,CAAd,EAAmBf,CAAnB,CACAe,cAAc,CAAd,EAAmBd,CAAnB,CACAc,cAAc,EAAd,EAAoBE,CAApB,CACD,CAjGc,CAmGfK,wBAAyB,iCAASP,aAAT,CAAwBQ,CAAxB,CAA2B,CAClDR,cAAc,EAAd,EAAoB,CAAC,CAAD,CAAKQ,CAAzB,CACD,CArGc,CAuGfC,kBAvGe,6BAuGIT,aAvGJ,CAuGmBI,MAvGnB,CAuG2B,CACxCJ,cAAc,CAAd,EAAmBI,MAAnB,CACD,CAzGc,CA2GfM,kBA3Ge,6BA2GIV,aA3GJ,CA2GmBI,MA3GnB,CA2G2B,CACxCJ,cAAc,CAAd,EAAmBI,MAAnB,CACD,CA7Gc,CA+GfO,kBA/Ge,6BA+GIX,aA/GJ,CA+GmBI,MA/GnB,CA+G2B,CACxCJ,cAAc,EAAd,EAAoBI,MAApB,CACD,CAjHc,CAmHfQ,oBAAqB,6BAASZ,aAAT,CAAwBa,OAAxB,CAAiC,CACpDb,cAAc,CAAd,EAAmBL,KAAKmB,GAAL,CAASD,OAAT,CAAnB,CACAb,cAAc,CAAd,EAAmBL,KAAKoB,GAAL,CAASF,OAAT,CAAnB,CACAb,cAAc,CAAd,EAAmB,CAACL,KAAKoB,GAAL,CAASF,OAAT,CAApB,CACAb,cAAc,EAAd,EAAoBL,KAAKmB,GAAL,CAASD,OAAT,CAApB,CACD,CAxHc,CA0HfG,oBAAqB,6BAAShB,aAAT,CAAwBiB,MAAxB,CAAgC,CACnDjB,cAAc,CAAd,EAAmBL,KAAKmB,GAAL,CAASG,MAAT,CAAnB,CACAjB,cAAc,CAAd,EAAmB,CAACL,KAAKoB,GAAL,CAASE,MAAT,CAApB,CACAjB,cAAc,CAAd,EAAmBL,KAAKoB,GAAL,CAASE,MAAT,CAAnB,CACAjB,cAAc,EAAd,EAAoBL,KAAKmB,GAAL,CAASG,MAAT,CAApB,CACD,CA/Hc,CAkIfC,oBAAqB,6BAASlB,aAAT,CAAwBa,OAAxB,CAAiC,CACpDb,cAAc,CAAd,EAAmBL,KAAKmB,GAAL,CAASD,OAAT,CAAnB,CACAb,cAAc,CAAd,EAAmBL,KAAKoB,GAAL,CAASF,OAAT,CAAnB,CACAb,cAAc,CAAd,EAAmB,CAACL,KAAKoB,GAAL,CAASF,OAAT,CAApB,CACAb,cAAc,CAAd,EAAmBL,KAAKmB,GAAL,CAASD,OAAT,CAAnB,CACD,CAvIc,CAyIfM,cAAe,uBAASN,OAAT,CAAkB,CAC/B,GAAIf,KAAMlC,WAAWC,oBAAX,EAAV,CACAD,WAAWsD,mBAAX,CAA+BpB,GAA/B,CAAoCe,OAApC,EACA,MAAOf,IAAP,CACD,CA7Ic,CA+IfsB,kBAAmB,2BAASpB,aAAT,CAAwBa,OAAxB,CAAiC,CAClDb,cAAc,CAAd,EAAmBL,KAAKC,GAAL,CAASiB,OAAT,CAAnB,CACD,CAjJc,CAmJfQ,kBAAmB,2BAASrB,aAAT,CAAwBa,OAAxB,CAAiC,CAClDb,cAAc,CAAd,EAAmBL,KAAKC,GAAL,CAASiB,OAAT,CAAnB,CACD,CArJc,CAuJfS,aAAc,sBAASC,GAAT,CAAchD,CAAd,CAAiBC,CAAjB,CAAoB,CAChC,GAAIgD,KAAMjD,EAAE,CAAF,CAAV,CACEkD,IAAMlD,EAAE,CAAF,CADR,CAEEmD,IAAMnD,EAAE,CAAF,CAFR,CAGEoD,IAAMpD,EAAE,CAAF,CAHR,CAIEqD,IAAMrD,EAAE,CAAF,CAJR,CAKEsD,IAAMtD,EAAE,CAAF,CALR,CAMEuD,IAAMvD,EAAE,CAAF,CANR,CAOEwD,IAAMxD,EAAE,CAAF,CAPR,CAQEyD,IAAMzD,EAAE,CAAF,CARR,CASE0D,IAAM1D,EAAE,CAAF,CATR,CAUE2D,IAAM3D,EAAE,EAAF,CAVR,CAWE4D,IAAM5D,EAAE,EAAF,CAXR,CAYE6D,IAAM7D,EAAE,EAAF,CAZR,CAaE8D,IAAM9D,EAAE,EAAF,CAbR,CAcE+D,IAAM/D,EAAE,EAAF,CAdR,CAeEgE,IAAMhE,EAAE,EAAF,CAfR,CAiBA,GAAIiE,IAAKhE,EAAE,CAAF,CAAT,CACEiE,GAAKjE,EAAE,CAAF,CADP,CAEEkE,GAAKlE,EAAE,CAAF,CAFP,CAGEmE,GAAKnE,EAAE,CAAF,CAHP,CAIA+C,IAAI,CAAJ,EAASiB,GAAKhB,GAAL,CAAWiB,GAAKb,GAAhB,CAAsBc,GAAKV,GAA3B,CAAiCW,GAAKP,GAA/C,CACAb,IAAI,CAAJ,EAASiB,GAAKf,GAAL,CAAWgB,GAAKZ,GAAhB,CAAsBa,GAAKT,GAA3B,CAAiCU,GAAKN,GAA/C,CACAd,IAAI,CAAJ,EAASiB,GAAKd,GAAL,CAAWe,GAAKX,GAAhB,CAAsBY,GAAKR,GAA3B,CAAiCS,GAAKL,GAA/C,CACAf,IAAI,CAAJ,EAASiB,GAAKb,GAAL,CAAWc,GAAKV,GAAhB,CAAsBW,GAAKP,GAA3B,CAAiCQ,GAAKJ,GAA/C,CAEAC,GAAKhE,EAAE,CAAF,CAAL,CACAiE,GAAKjE,EAAE,CAAF,CAAL,CACAkE,GAAKlE,EAAE,CAAF,CAAL,CACAmE,GAAKnE,EAAE,CAAF,CAAL,CACA+C,IAAI,CAAJ,EAASiB,GAAKhB,GAAL,CAAWiB,GAAKb,GAAhB,CAAsBc,GAAKV,GAA3B,CAAiCW,GAAKP,GAA/C,CACAb,IAAI,CAAJ,EAASiB,GAAKf,GAAL,CAAWgB,GAAKZ,GAAhB,CAAsBa,GAAKT,GAA3B,CAAiCU,GAAKN,GAA/C,CACAd,IAAI,CAAJ,EAASiB,GAAKd,GAAL,CAAWe,GAAKX,GAAhB,CAAsBY,GAAKR,GAA3B,CAAiCS,GAAKL,GAA/C,CACAf,IAAI,CAAJ,EAASiB,GAAKb,GAAL,CAAWc,GAAKV,GAAhB,CAAsBW,GAAKP,GAA3B,CAAiCQ,GAAKJ,GAA/C,CAEAC,GAAKhE,EAAE,CAAF,CAAL,CACAiE,GAAKjE,EAAE,CAAF,CAAL,CACAkE,GAAKlE,EAAE,EAAF,CAAL,CACAmE,GAAKnE,EAAE,EAAF,CAAL,CACA+C,IAAI,CAAJ,EAASiB,GAAKhB,GAAL,CAAWiB,GAAKb,GAAhB,CAAsBc,GAAKV,GAA3B,CAAiCW,GAAKP,GAA/C,CACAb,IAAI,CAAJ,EAASiB,GAAKf,GAAL,CAAWgB,GAAKZ,GAAhB,CAAsBa,GAAKT,GAA3B,CAAiCU,GAAKN,GAA/C,CACAd,IAAI,EAAJ,EAAUiB,GAAKd,GAAL,CAAWe,GAAKX,GAAhB,CAAsBY,GAAKR,GAA3B,CAAiCS,GAAKL,GAAhD,CACAf,IAAI,EAAJ,EAAUiB,GAAKb,GAAL,CAAWc,GAAKV,GAAhB,CAAsBW,GAAKP,GAA3B,CAAiCQ,GAAKJ,GAAhD,CAEAC,GAAKhE,EAAE,EAAF,CAAL,CACAiE,GAAKjE,EAAE,EAAF,CAAL,CACAkE,GAAKlE,EAAE,EAAF,CAAL,CACAmE,GAAKnE,EAAE,EAAF,CAAL,CACA+C,IAAI,EAAJ,EAAUiB,GAAKhB,GAAL,CAAWiB,GAAKb,GAAhB,CAAsBc,GAAKV,GAA3B,CAAiCW,GAAKP,GAAhD,CACAb,IAAI,EAAJ,EAAUiB,GAAKf,GAAL,CAAWgB,GAAKZ,GAAhB,CAAsBa,GAAKT,GAA3B,CAAiCU,GAAKN,GAAhD,CACAd,IAAI,EAAJ,EAAUiB,GAAKd,GAAL,CAAWe,GAAKX,GAAhB,CAAsBY,GAAKR,GAA3B,CAAiCS,GAAKL,GAAhD,CACAf,IAAI,EAAJ,EAAUiB,GAAKb,GAAL,CAAWc,GAAKV,GAAhB,CAAsBW,GAAKP,GAA3B,CAAiCQ,GAAKJ,GAAhD,CACD,CA5Mc,CA8MfK,WA9Me,sBA8MHC,MA9MG,CA8M4B,yCAkBrCA,MAlBqC,KAEvCC,GAFuC,YAGvCC,GAHuC,YAIvCC,GAJuC,YAKvCC,GALuC,YAMvCC,GANuC,YAOvCC,GAPuC,YAQvCC,GARuC,YASvCC,GATuC,YAUvCC,GAVuC,YAWvCC,GAXuC,YAYvCC,GAZuC,aAavCC,GAbuC,aAcvCC,GAduC,aAevCC,GAfuC,aAgBvCC,GAhBuC,aAiBvCC,GAjBuC,aAmBzC,MACEZ,KAAMG,GAAN,CAAYG,GAAZ,CAAkBG,GAAlB,CACAV,IAAMK,GAAN,CAAYE,GAAZ,CAAkBG,GADlB,CAEAT,IAAME,GAAN,CAAYK,GAAZ,CAAkBE,GAFlB,CAGAX,IAAMM,GAAN,CAAYG,GAAZ,CAAkBE,GAHlB,CAIAV,IAAMG,GAAN,CAAYM,GAAZ,CAAkBC,GAJlB,CAKAX,IAAMK,GAAN,CAAYK,GAAZ,CAAkBC,GALlB,CAMAT,IAAMG,GAAN,CAAYE,GAAZ,CAAkBK,GANlB,CAOAX,IAAMK,GAAN,CAAYC,GAAZ,CAAkBK,GAPlB,CAQAV,IAAMC,GAAN,CAAYM,GAAZ,CAAkBG,GARlB,CASAb,IAAMO,GAAN,CAAYG,GAAZ,CAAkBG,GATlB,CAUAX,IAAME,GAAN,CAAYO,GAAZ,CAAkBE,GAVlB,CAWAb,IAAMM,GAAN,CAAYK,GAAZ,CAAkBE,GAXlB,CAYAV,IAAME,GAAN,CAAYG,GAAZ,CAAkBM,GAZlB,CAaAb,IAAMM,GAAN,CAAYC,GAAZ,CAAkBM,GAblB,CAcAX,IAAMC,GAAN,CAAYK,GAAZ,CAAkBK,GAdlB,CAeAd,IAAMO,GAAN,CAAYE,GAAZ,CAAkBK,GAflB,CAgBAb,IAAMG,GAAN,CAAYO,GAAZ,CAAkBG,GAhBlB,CAiBAd,IAAMK,GAAN,CAAYM,GAAZ,CAAkBG,GAjBlB,CAkBAZ,IAAMG,GAAN,CAAYG,GAAZ,CAAkBO,GAlBlB,CAmBAd,IAAMK,GAAN,CAAYE,GAAZ,CAAkBO,GAnBlB,CAoBAb,IAAME,GAAN,CAAYK,GAAZ,CAAkBM,GApBlB,CAqBAf,IAAMM,GAAN,CAAYG,GAAZ,CAAkBM,GArBlB,CAsBAd,IAAMG,GAAN,CAAYM,GAAZ,CAAkBK,GAtBlB,CAuBAf,IAAMK,GAAN,CAAYK,GAAZ,CAAkBK,GAxBpB,CA0BD,CA3Pc,CAoQfC,OApQe,kBAoQPjB,MApQO,CAoQ+B,CAC5C,GAAIkB,KAAMnG,WAAWgF,WAAX,CAAuBC,MAAvB,CAAV,CACA,GAAI,CAACkB,GAAL,CAAU,CACR,MAAOlB,OAAP,CACD,CAJ2C,yCAsBxCA,MAtBwC,KAM1CC,GAN0C,aAO1CC,GAP0C,aAQ1CC,GAR0C,aAS1CC,GAT0C,aAU1CC,GAV0C,aAW1CC,GAX0C,aAY1CC,GAZ0C,aAa1CC,GAb0C,aAc1CC,GAd0C,aAe1CC,GAf0C,aAgB1CC,GAhB0C,cAiB1CC,GAjB0C,cAkB1CC,GAlB0C,cAmB1CC,GAnB0C,cAoB1CC,GApB0C,cAqB1CC,GArB0C,cAuB5C,MAAO,CACL,CAACT,IAAMK,GAAN,CAAYE,GAAZ,CACCN,IAAMG,GAAN,CAAYG,GADb,CAECN,IAAME,GAAN,CAAYK,GAFb,CAGCT,IAAMM,GAAN,CAAYG,GAHb,CAICR,IAAMG,GAAN,CAAYM,GAJb,CAKCV,IAAMK,GAAN,CAAYK,GALd,EAMEE,GAPG,CAQL,CAACd,IAAMO,GAAN,CAAYG,GAAZ,CACCX,IAAMS,GAAN,CAAYE,GADb,CAECV,IAAMM,GAAN,CAAYK,GAFb,CAGCb,IAAMU,GAAN,CAAYG,GAHb,CAICZ,IAAMO,GAAN,CAAYM,GAJb,CAKCd,IAAMS,GAAN,CAAYK,GALd,EAMEE,GAdG,CAeL,CAACf,IAAMK,GAAN,CAAYM,GAAZ,CACCV,IAAMG,GAAN,CAAYO,GADb,CAECV,IAAME,GAAN,CAAYS,GAFb,CAGCb,IAAMM,GAAN,CAAYO,GAHb,CAICZ,IAAMG,GAAN,CAAYU,GAJb,CAKCd,IAAMK,GAAN,CAAYS,GALd,EAMEE,GArBG,CAsBL,CAACd,IAAMG,GAAN,CAAYG,GAAZ,CACCP,IAAMK,GAAN,CAAYE,GADb,CAECN,IAAME,GAAN,CAAYK,GAFb,CAGCT,IAAMM,GAAN,CAAYG,GAHb,CAICR,IAAMG,GAAN,CAAYM,GAJb,CAKCV,IAAMK,GAAN,CAAYK,GALd,EAMEM,GA5BG,CA6BL,CAACV,IAAMG,GAAN,CAAYE,GAAZ,CACCN,IAAMK,GAAN,CAAYC,GADb,CAECL,IAAMC,GAAN,CAAYM,GAFb,CAGCV,IAAMO,GAAN,CAAYG,GAHb,CAICR,IAAME,GAAN,CAAYO,GAJb,CAKCX,IAAMM,GAAN,CAAYK,GALd,EAMEE,GAnCG,CAoCL,CAACf,IAAMS,GAAN,CAAYC,GAAZ,CACCT,IAAMO,GAAN,CAAYE,GADb,CAECT,IAAMK,GAAN,CAAYM,GAFb,CAGCd,IAAMW,GAAN,CAAYG,GAHb,CAICZ,IAAMM,GAAN,CAAYO,GAJb,CAKCf,IAAMU,GAAN,CAAYK,GALd,EAMEE,GA1CG,CA2CL,CAACd,IAAMG,GAAN,CAAYM,GAAZ,CACCV,IAAMK,GAAN,CAAYK,GADb,CAECT,IAAMC,GAAN,CAAYU,GAFb,CAGCd,IAAMO,GAAN,CAAYO,GAHb,CAICZ,IAAME,GAAN,CAAYW,GAJb,CAKCf,IAAMM,GAAN,CAAYS,GALd,EAMEE,GAjDG,CAkDL,CAACf,IAAMK,GAAN,CAAYC,GAAZ,CACCL,IAAMG,GAAN,CAAYE,GADb,CAECL,IAAMC,GAAN,CAAYM,GAFb,CAGCV,IAAMO,GAAN,CAAYG,GAHb,CAICR,IAAME,GAAN,CAAYO,GAJb,CAKCX,IAAMM,GAAN,CAAYK,GALd,EAMEM,GAxDG,CAyDL,CAACZ,IAAMM,GAAN,CAAYC,GAAZ,CACCL,IAAME,GAAN,CAAYG,GADb,CAECL,IAAMC,GAAN,CAAYK,GAFb,CAGCT,IAAMO,GAAN,CAAYE,GAHb,CAICR,IAAMG,GAAN,CAAYO,GAJb,CAKCX,IAAMK,GAAN,CAAYM,GALd,EAMEE,GA/DG,CAgEL,CAACd,IAAMM,GAAN,CAAYG,GAAZ,CACCX,IAAMU,GAAN,CAAYC,GADb,CAECT,IAAMK,GAAN,CAAYK,GAFb,CAGCb,IAAMW,GAAN,CAAYE,GAHb,CAICZ,IAAMO,GAAN,CAAYO,GAJb,CAKCf,IAAMS,GAAN,CAAYM,GALd,EAMEE,GAtEG,CAuEL,CAAChB,IAAMM,GAAN,CAAYK,GAAZ,CACCT,IAAME,GAAN,CAAYO,GADb,CAECT,IAAMC,GAAN,CAAYS,GAFb,CAGCb,IAAMO,GAAN,CAAYM,GAHb,CAICZ,IAAMG,GAAN,CAAYW,GAJb,CAKCf,IAAMK,GAAN,CAAYU,GALd,EAMEE,GA7EG,CA8EL,CAACd,IAAME,GAAN,CAAYG,GAAZ,CACCP,IAAMM,GAAN,CAAYC,GADb,CAECL,IAAMC,GAAN,CAAYK,GAFb,CAGCT,IAAMO,GAAN,CAAYE,GAHb,CAICR,IAAMG,GAAN,CAAYO,GAJb,CAKCX,IAAMK,GAAN,CAAYM,GALd,EAMEM,GApFG,CAqFL,CAACX,IAAMG,GAAN,CAAYG,GAAZ,CACCP,IAAMK,GAAN,CAAYE,GADb,CAECN,IAAME,GAAN,CAAYK,GAFb,CAGCT,IAAMM,GAAN,CAAYG,GAHb,CAICR,IAAMG,GAAN,CAAYM,GAJb,CAKCV,IAAMK,GAAN,CAAYK,GALd,EAMEG,GA3FG,CA4FL,CAAChB,IAAMS,GAAN,CAAYE,GAAZ,CACCV,IAAMO,GAAN,CAAYG,GADb,CAECV,IAAMM,GAAN,CAAYK,GAFb,CAGCb,IAAMU,GAAN,CAAYG,GAHb,CAICZ,IAAMO,GAAN,CAAYM,GAJb,CAKCd,IAAMS,GAAN,CAAYK,GALd,EAMEG,GAlGG,CAmGL,CAACf,IAAMG,GAAN,CAAYO,GAAZ,CACCX,IAAMK,GAAN,CAAYM,GADb,CAECV,IAAME,GAAN,CAAYS,GAFb,CAGCb,IAAMM,GAAN,CAAYO,GAHb,CAICZ,IAAMG,GAAN,CAAYU,GAJb,CAKCd,IAAMK,GAAN,CAAYS,GALd,EAMEG,GAzGG,CA0GL,CAAChB,IAAMK,GAAN,CAAYE,GAAZ,CACCN,IAAMG,GAAN,CAAYG,GADb,CAECN,IAAME,GAAN,CAAYK,GAFb,CAGCT,IAAMM,GAAN,CAAYG,GAHb,CAICR,IAAMG,GAAN,CAAYM,GAJb,CAKCV,IAAMK,GAAN,CAAYK,GALd,EAMEO,GAhHG,CAAP,CAkHD,CA7Yc,CAkZfC,SAlZe,oBAkZLjG,CAlZK,CAkZ4B,CACzC,MAAO,CACLA,EAAE,CAAF,CADK,CAELA,EAAE,CAAF,CAFK,CAGLA,EAAE,CAAF,CAHK,CAILA,EAAE,EAAF,CAJK,CAKLA,EAAE,CAAF,CALK,CAMLA,EAAE,CAAF,CANK,CAOLA,EAAE,CAAF,CAPK,CAQLA,EAAE,EAAF,CARK,CASLA,EAAE,CAAF,CATK,CAULA,EAAE,CAAF,CAVK,CAWLA,EAAE,EAAF,CAXK,CAYLA,EAAE,EAAF,CAZK,CAaLA,EAAE,CAAF,CAbK,CAcLA,EAAE,CAAF,CAdK,CAeLA,EAAE,EAAF,CAfK,CAgBLA,EAAE,EAAF,CAhBK,CAAP,CAkBD,CArac,CA0afkG,sBA1ae,iCA0aQC,CA1aR,CA0a0BnG,CA1a1B,CA0a2D,oCACjDmG,CADiD,IACnEC,EADmE,OAC/DC,EAD+D,OAC3DC,EAD2D,OACvDC,EADuD,OAExE,MAAO,CACLH,GAAKpG,EAAE,CAAF,CAAL,CAAYqG,GAAKrG,EAAE,CAAF,CAAjB,CAAwBsG,GAAKtG,EAAE,CAAF,CAA7B,CAAoCuG,GAAKvG,EAAE,EAAF,CADpC,CAELoG,GAAKpG,EAAE,CAAF,CAAL,CAAYqG,GAAKrG,EAAE,CAAF,CAAjB,CAAwBsG,GAAKtG,EAAE,CAAF,CAA7B,CAAoCuG,GAAKvG,EAAE,EAAF,CAFpC,CAGLoG,GAAKpG,EAAE,CAAF,CAAL,CAAYqG,GAAKrG,EAAE,CAAF,CAAjB,CAAwBsG,GAAKtG,EAAE,EAAF,CAA7B,CAAqCuG,GAAKvG,EAAE,EAAF,CAHrC,CAILoG,GAAKpG,EAAE,CAAF,CAAL,CAAYqG,GAAKrG,EAAE,CAAF,CAAjB,CAAwBsG,GAAKtG,EAAE,EAAF,CAA7B,CAAqCuG,GAAKvG,EAAE,EAAF,CAJrC,CAAP,CAMD,CAlbc,CAubfwG,QAvbe,mBAubNhG,CAvbM,CAuboB,CACjC,MAAOoB,MAAK6E,IAAL,CAAUjG,EAAE,CAAF,EAAOA,EAAE,CAAF,CAAP,CAAcA,EAAE,CAAF,EAAOA,EAAE,CAAF,CAArB,CAA4BA,EAAE,CAAF,EAAOA,EAAE,CAAF,CAA7C,CAAP,CACD,CAzbc,CA8bfkG,WA9be,sBA8bHC,MA9bG,CA8boBH,QA9bpB,CA8bqD,CAClE,GAAII,IAAK,GAAKJ,UAAY3G,WAAW2G,QAAX,CAAoBG,MAApB,CAAjB,CAAT,CACA,MAAO,CAACA,OAAO,CAAP,EAAYC,EAAb,CAAiBD,OAAO,CAAP,EAAYC,EAA7B,CAAiCD,OAAO,CAAP,EAAYC,EAA7C,CAAP,CACD,CAjcc,CAucfC,KAvce,gBAucTrG,CAvcS,CAucNC,CAvcM,CAucH,CACV,MAAOD,GAAE,CAAF,EAAOC,EAAE,CAAF,CAAP,CAAcD,EAAE,CAAF,EAAOC,EAAE,CAAF,CAArB,CAA4BD,EAAE,CAAF,EAAOC,EAAE,CAAF,CAA1C,CACD,CAzcc,CA+cfqG,SA/ce,oBAgdbtG,CAhda,CAidbC,CAjda,CAkdbsG,MAlda,CAmdbC,MAnda,CAodE,CACf,MAAO,CACLD,OAASvG,EAAE,CAAF,CAAT,CAAgBwG,OAASvG,EAAE,CAAF,CADpB,CAELsG,OAASvG,EAAE,CAAF,CAAT,CAAgBwG,OAASvG,EAAE,CAAF,CAFpB,CAGLsG,OAASvG,EAAE,CAAF,CAAT,CAAgBwG,OAASvG,EAAE,CAAF,CAHpB,CAAP,CAKD,CA1dc,CAgefwG,OAhee,kBAgePzG,CAheO,CAgeWC,CAheX,CAge4C,CACzD,MAAO,CACLD,EAAE,CAAF,EAAOC,EAAE,CAAF,CAAP,CAAcD,EAAE,CAAF,EAAOC,EAAE,CAAF,CADhB,CAELD,EAAE,CAAF,EAAOC,EAAE,CAAF,CAAP,CAAcD,EAAE,CAAF,EAAOC,EAAE,CAAF,CAFhB,CAGLD,EAAE,CAAF,EAAOC,EAAE,CAAF,CAAP,CAAcD,EAAE,CAAF,EAAOC,EAAE,CAAF,CAHhB,CAAP,CAKD,CAtec,CAwffyG,sBAxfe,iCAwfQC,CAxfR,CAwf0BrC,MAxf1B,CAwfkCsC,GAxflC,CAwfsD,oCAC5CD,CAD4C,IAC9DE,EAD8D,OAC1DC,EAD0D,OACtDC,EADsD,OAClDC,EADkD,OAEnE,GAAIC,KAAMD,GAAKA,EAAf,CACA,GAAIE,KAAML,GAAKA,EAAf,CACA,GAAIM,KAAML,GAAKA,EAAf,CACA,GAAIM,KAAML,GAAKA,EAAf,CACA,GAAIM,MAAOR,GAAKC,EAAL,CAAUC,GAAKC,EAA1B,CACA,GAAIM,MAAOL,IAAMC,GAAN,CAAYC,GAAZ,CAAkBC,GAA7B,CACA,GAAIG,MAAO,IAAMnG,KAAKoG,EAAtB,CAEA,GAAIH,KAAO,QAAUC,IAArB,CAA2B,CACzB,MAAO,CAAC,CAAD,CAAI,EAAIlG,KAAKqG,KAAL,CAAWZ,EAAX,CAAeG,EAAf,CAAJ,CAAyBO,IAA7B,CAAmC,EAAnC,CAAP,CACD,CACD,GAAIF,KAAO,CAAC,OAAD,CAAWC,IAAtB,CAA4B,CAC1B,MAAO,CAAC,CAAD,CAAI,CAAC,CAAD,CAAKlG,KAAKqG,KAAL,CAAWZ,EAAX,CAAeG,EAAf,CAAL,CAA0BO,IAA9B,CAAoC,CAAC,EAArC,CAAP,CACD,CAED,MAAO,CACLlI,WAAWqI,cAAX,CACEtG,KAAKqG,KAAL,CAAW,EAAIZ,EAAJ,CAASG,EAAT,CAAc,EAAIF,EAAJ,CAASC,EAAlC,CAAsC,EAAI,EAAIG,GAAR,CAAc,EAAIE,GAAxD,EAA+DG,IADjE,CADK,CAILlI,WAAWqI,cAAX,CACEtG,KAAKqG,KAAL,CAAW,EAAIX,EAAJ,CAASE,EAAT,CAAc,EAAIH,EAAJ,CAASE,EAAlC,CAAsC,EAAI,EAAII,GAAR,CAAc,EAAIC,GAAxD,EAA+DG,IADjE,CAJK,CAOLlI,WAAWqI,cAAX,CAA0BtG,KAAKuG,IAAL,CAAU,EAAId,EAAJ,CAASC,EAAT,CAAc,EAAIC,EAAJ,CAASC,EAAjC,EAAuCO,IAAjE,CAPK,CAAP,CASD,CAlhBc,CAwhBfG,cAxhBe,yBAwhBAE,CAxhBA,CAwhBmB,CAChC,GAAIC,KAAMD,EAAEE,QAAF,GAAaC,KAAb,CAAmB,GAAnB,CAAV,CACA,MAAO3G,MAAK4G,KAAL,CAAWH,IAAI,CAAJ,EAAS,GAAT,EAAgBA,IAAI,CAAJ,EAAS,CAACA,IAAI,CAAJ,CAAD,CAAU,CAAnB,CAAuB,CAAvC,CAAX,EAAwD,KAA/D,CACD,CA3hBc,CAwiBfI,eAxiBe,0BAwiBCC,eAxiBD,CAwiB0C,CACvD,wBACEA,gBAAgBC,MAAhB,GAA2B,EAD7B,CAEE,oEAFF,CAGED,eAHF,EAOA,GAAIE,aAAc,EAAlB,CACA,GAAIC,YAAa,EAAjB,CACA,GAAIC,OAAQ,EAAZ,CACA,GAAIC,MAAO,EAAX,CACA,GAAIC,aAAc,EAAlB,CAIA,GAAI,CAACN,gBAAgB,EAAhB,CAAL,CAA0B,CACxB,OACD,CACD,GAAI5D,QAAS,EAAb,CACA,GAAImE,mBAAoB,EAAxB,CACA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAI,CAApB,CAAuBA,GAAvB,CAA4B,CAC1BpE,OAAOqE,IAAP,CAAY,EAAZ,EACA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAI,CAApB,CAAuBA,GAAvB,CAA4B,CAC1B,GAAIC,OAAQX,gBAAgBQ,EAAI,CAAJ,CAAQE,CAAxB,EAA6BV,gBAAgB,EAAhB,CAAzC,CACA5D,OAAOoE,CAAP,EAAUC,IAAV,CAAeE,KAAf,EACAJ,kBAAkBE,IAAlB,CAAuBC,IAAM,CAAN,CAAU,CAAV,CAAcC,KAArC,EACD,CACF,CACDJ,kBAAkB,EAAlB,EAAwB,CAAxB,CAGA,GAAI,CAACpJ,WAAWgF,WAAX,CAAuBoE,iBAAvB,CAAL,CAAgD,CAC9C,OACD,CAGD,GAAInE,OAAO,CAAP,EAAU,CAAV,IAAiB,CAAjB,EAAsBA,OAAO,CAAP,EAAU,CAAV,IAAiB,CAAvC,EAA4CA,OAAO,CAAP,EAAU,CAAV,IAAiB,CAAjE,CAAoE,CAGlE,GAAIwE,eAAgB,CAClBxE,OAAO,CAAP,EAAU,CAAV,CADkB,CAElBA,OAAO,CAAP,EAAU,CAAV,CAFkB,CAGlBA,OAAO,CAAP,EAAU,CAAV,CAHkB,CAIlBA,OAAO,CAAP,EAAU,CAAV,CAJkB,CAApB,CASA,GAAIyE,0BAA2B1J,WAAWkG,OAAX,CAAmBkD,iBAAnB,CAA/B,CACA,GAAIO,oCAAqC3J,WAAWoG,SAAX,CACvCsD,wBADuC,CAAzC,CAGA,GAAIX,aAAc/I,WAAWqG,sBAAX,CAChBoD,aADgB,CAEhBE,kCAFgB,CAAlB,CAID,CApBD,IAoBO,CAELZ,YAAY,CAAZ,EAAiBA,YAAY,CAAZ,EAAiBA,YAAY,CAAZ,EAAiB,CAAnD,CACAA,YAAY,CAAZ,EAAiB,CAAjB,CACD,CAGD,IAAK,GAAIM,GAAI,CAAb,CAAgBA,EAAI,CAApB,CAAuBA,GAAvB,CAA4B,CAC1BF,YAAYE,CAAZ,EAAiBpE,OAAO,CAAP,EAAUoE,CAAV,CAAjB,CACD,CAID,GAAI9B,KAAM,EAAV,CACA,IAAK8B,EAAI,CAAT,CAAYA,EAAI,CAAhB,CAAmBA,GAAnB,CAAwB,CACtB9B,IAAI8B,CAAJ,EAAS,CAACpE,OAAOoE,CAAP,EAAU,CAAV,CAAD,CAAepE,OAAOoE,CAAP,EAAU,CAAV,CAAf,CAA6BpE,OAAOoE,CAAP,EAAU,CAAV,CAA7B,CAAT,CACD,CAGDJ,MAAM,CAAN,EAAWjJ,WAAW2G,QAAX,CAAoBY,IAAI,CAAJ,CAApB,CAAX,CACAA,IAAI,CAAJ,EAASvH,WAAW6G,WAAX,CAAuBU,IAAI,CAAJ,CAAvB,CAA+B0B,MAAM,CAAN,CAA/B,CAAT,CAGAC,KAAK,CAAL,EAAUlJ,WAAWgH,KAAX,CAAiBO,IAAI,CAAJ,CAAjB,CAAyBA,IAAI,CAAJ,CAAzB,CAAV,CACAA,IAAI,CAAJ,EAASvH,WAAWiH,SAAX,CAAqBM,IAAI,CAAJ,CAArB,CAA6BA,IAAI,CAAJ,CAA7B,CAAqC,GAArC,CAA0C,CAAC2B,KAAK,CAAL,CAA3C,CAAT,CAGAA,KAAK,CAAL,EAAUlJ,WAAWgH,KAAX,CAAiBO,IAAI,CAAJ,CAAjB,CAAyBA,IAAI,CAAJ,CAAzB,CAAV,CACAA,IAAI,CAAJ,EAASvH,WAAWiH,SAAX,CAAqBM,IAAI,CAAJ,CAArB,CAA6BA,IAAI,CAAJ,CAA7B,CAAqC,GAArC,CAA0C,CAAC2B,KAAK,CAAL,CAA3C,CAAT,CAGAD,MAAM,CAAN,EAAWjJ,WAAW2G,QAAX,CAAoBY,IAAI,CAAJ,CAApB,CAAX,CACAA,IAAI,CAAJ,EAASvH,WAAW6G,WAAX,CAAuBU,IAAI,CAAJ,CAAvB,CAA+B0B,MAAM,CAAN,CAA/B,CAAT,CACAC,KAAK,CAAL,GAAWD,MAAM,CAAN,CAAX,CAGAC,KAAK,CAAL,EAAUlJ,WAAWgH,KAAX,CAAiBO,IAAI,CAAJ,CAAjB,CAAyBA,IAAI,CAAJ,CAAzB,CAAV,CACAA,IAAI,CAAJ,EAASvH,WAAWiH,SAAX,CAAqBM,IAAI,CAAJ,CAArB,CAA6BA,IAAI,CAAJ,CAA7B,CAAqC,GAArC,CAA0C,CAAC2B,KAAK,CAAL,CAA3C,CAAT,CACAA,KAAK,CAAL,EAAUlJ,WAAWgH,KAAX,CAAiBO,IAAI,CAAJ,CAAjB,CAAyBA,IAAI,CAAJ,CAAzB,CAAV,CACAA,IAAI,CAAJ,EAASvH,WAAWiH,SAAX,CAAqBM,IAAI,CAAJ,CAArB,CAA6BA,IAAI,CAAJ,CAA7B,CAAqC,GAArC,CAA0C,CAAC2B,KAAK,CAAL,CAA3C,CAAT,CAGAD,MAAM,CAAN,EAAWjJ,WAAW2G,QAAX,CAAoBY,IAAI,CAAJ,CAApB,CAAX,CACAA,IAAI,CAAJ,EAASvH,WAAW6G,WAAX,CAAuBU,IAAI,CAAJ,CAAvB,CAA+B0B,MAAM,CAAN,CAA/B,CAAT,CACAC,KAAK,CAAL,GAAWD,MAAM,CAAN,CAAX,CACAC,KAAK,CAAL,GAAWD,MAAM,CAAN,CAAX,CAKA,GAAIW,OAAQ5J,WAAWoH,OAAX,CAAmBG,IAAI,CAAJ,CAAnB,CAA2BA,IAAI,CAAJ,CAA3B,CAAZ,CACA,GAAIvH,WAAWgH,KAAX,CAAiBO,IAAI,CAAJ,CAAjB,CAAyBqC,KAAzB,EAAkC,CAAtC,CAAyC,CACvC,IAAKP,EAAI,CAAT,CAAYA,EAAI,CAAhB,CAAmBA,GAAnB,CAAwB,CACtBJ,MAAMI,CAAN,GAAY,CAAC,CAAb,CACA9B,IAAI8B,CAAJ,EAAO,CAAP,GAAa,CAAC,CAAd,CACA9B,IAAI8B,CAAJ,EAAO,CAAP,GAAa,CAAC,CAAd,CACA9B,IAAI8B,CAAJ,EAAO,CAAP,GAAa,CAAC,CAAd,CACD,CACF,CAGDL,WAAW,CAAX,EACE,IAAMjH,KAAK6E,IAAL,CAAU7E,KAAK8H,GAAL,CAAS,EAAItC,IAAI,CAAJ,EAAO,CAAP,CAAJ,CAAgBA,IAAI,CAAJ,EAAO,CAAP,CAAhB,CAA4BA,IAAI,CAAJ,EAAO,CAAP,CAArC,CAAgD,CAAhD,CAAV,CADR,CAEAyB,WAAW,CAAX,EACE,IAAMjH,KAAK6E,IAAL,CAAU7E,KAAK8H,GAAL,CAAS,EAAItC,IAAI,CAAJ,EAAO,CAAP,CAAJ,CAAgBA,IAAI,CAAJ,EAAO,CAAP,CAAhB,CAA4BA,IAAI,CAAJ,EAAO,CAAP,CAArC,CAAgD,CAAhD,CAAV,CADR,CAEAyB,WAAW,CAAX,EACE,IAAMjH,KAAK6E,IAAL,CAAU7E,KAAK8H,GAAL,CAAS,EAAItC,IAAI,CAAJ,EAAO,CAAP,CAAJ,CAAgBA,IAAI,CAAJ,EAAO,CAAP,CAAhB,CAA4BA,IAAI,CAAJ,EAAO,CAAP,CAArC,CAAgD,CAAhD,CAAV,CADR,CAEAyB,WAAW,CAAX,EACE,IAAMjH,KAAK6E,IAAL,CAAU7E,KAAK8H,GAAL,CAAS,EAAItC,IAAI,CAAJ,EAAO,CAAP,CAAJ,CAAgBA,IAAI,CAAJ,EAAO,CAAP,CAAhB,CAA4BA,IAAI,CAAJ,EAAO,CAAP,CAArC,CAAgD,CAAhD,CAAV,CADR,CAGA,GAAIA,IAAI,CAAJ,EAAO,CAAP,EAAYA,IAAI,CAAJ,EAAO,CAAP,CAAhB,CAA2B,CACzByB,WAAW,CAAX,EAAgB,CAACA,WAAW,CAAX,CAAjB,CACD,CACD,GAAIzB,IAAI,CAAJ,EAAO,CAAP,EAAYA,IAAI,CAAJ,EAAO,CAAP,CAAhB,CAA2B,CACzByB,WAAW,CAAX,EAAgB,CAACA,WAAW,CAAX,CAAjB,CACD,CACD,GAAIzB,IAAI,CAAJ,EAAO,CAAP,EAAYA,IAAI,CAAJ,EAAO,CAAP,CAAhB,CAA2B,CACzByB,WAAW,CAAX,EAAgB,CAACA,WAAW,CAAX,CAAjB,CACD,CAGD,GAAIc,gBAAJ,CACA,GACEd,WAAW,CAAX,EAAgB,KAAhB,EACAA,WAAW,CAAX,GAAiB,CADjB,EAEAA,WAAW,CAAX,EAAgB,KAFhB,EAGAA,WAAW,CAAX,GAAiB,CAJnB,CAKE,CAEAc,gBAAkB,CAChB,CADgB,CAEhB,CAFgB,CAGhB9J,WAAWqI,cAAX,CACEtG,KAAKqG,KAAL,CAAWb,IAAI,CAAJ,EAAO,CAAP,CAAX,CAAsBA,IAAI,CAAJ,EAAO,CAAP,CAAtB,EAAmC,GAAnC,CAAyCxF,KAAKoG,EADhD,CAHgB,CAAlB,CAOD,CAdD,IAcO,CACL2B,gBAAkB9J,WAAWqH,sBAAX,CAChB2B,UADgB,CAEhB/D,MAFgB,CAGhBsC,GAHgB,CAAlB,CAKD,CAGD,MAAO,CACLuC,+BADK,CAELf,uBAFK,CAGLC,qBAHK,CAILC,WAJK,CAKLC,SALK,CAMLC,uBANK,CAQLY,OAAQD,gBAAgB,CAAhB,CARH,CASLE,QAASF,gBAAgB,CAAhB,CATJ,CAULG,QAASH,gBAAgB,CAAhB,CAVJ,CAWLI,OAAQjB,MAAM,CAAN,CAXH,CAYLkB,OAAQlB,MAAM,CAAN,CAZH,CAaLmB,WAAYjB,YAAY,CAAZ,CAbP,CAcLkB,WAAYlB,YAAY,CAAZ,CAdP,CAAP,CAgBD,CA1tBc,CAAjB,CA6tBAmB,OAAOC,OAAP,CAAiBvK,UAAjB","file":"MatrixMath.dom.js","sourcesContent":["/**\n * @providesModule MatrixMath\n * @noflow\n */\n\n// TODO: Need to replace this at some point\n\nimport invariant from \"Invariant\";\n\n/**\n * Memory conservative (mutative) matrix math utilities. Uses \"command\"\n * matrices, which are reusable.\n */\nvar MatrixMath = {\n  createIdentityMatrix: function() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  },\n\n  createCopy: function(m) {\n    return [\n      m[0],\n      m[1],\n      m[2],\n      m[3],\n      m[4],\n      m[5],\n      m[6],\n      m[7],\n      m[8],\n      m[9],\n      m[10],\n      m[11],\n      m[12],\n      m[13],\n      m[14],\n      m[15]\n    ];\n  },\n\n  createOrthographic: function(left, right, bottom, top, near, far) {\n    var a = 2 / (right - left);\n    var b = 2 / (top - bottom);\n    var c = -2 / (far - near);\n\n    var tx = -(right + left) / (right - left);\n    var ty = -(top + bottom) / (top - bottom);\n    var tz = -(far + near) / (far - near);\n\n    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];\n  },\n\n  createFrustum: function(left, right, bottom, top, near, far) {\n    var r_width = 1 / (right - left);\n    var r_height = 1 / (top - bottom);\n    var r_depth = 1 / (near - far);\n    var x = 2 * (near * r_width);\n    var y = 2 * (near * r_height);\n    var A = (right + left) * r_width;\n    var B = (top + bottom) * r_height;\n    var C = (far + near) * r_depth;\n    var D = 2 * (far * near * r_depth);\n    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];\n  },\n\n  /**\n   * This create a perspective projection towards negative z\n   * Clipping the z range of [-near, -far]\n   *\n   * @param fovInRadians - field of view in randians\n   */\n  createPerspective: function(fovInRadians, aspect, near, far) {\n    var h = 1 / Math.tan(fovInRadians / 2);\n    var r_depth = 1 / (near - far);\n    var C = (far + near) * r_depth;\n    var D = 2 * (far * near * r_depth);\n    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];\n  },\n\n  createTranslate2d: function(x, y) {\n    var mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseTranslate2dCommand(mat, x, y);\n    return mat;\n  },\n\n  reuseTranslate2dCommand: function(matrixCommand, x, y) {\n    matrixCommand[12] = x;\n    matrixCommand[13] = y;\n  },\n\n  reuseTranslate3dCommand: function(matrixCommand, x, y, z) {\n    matrixCommand[12] = x;\n    matrixCommand[13] = y;\n    matrixCommand[14] = z;\n  },\n\n  createScale: function(factor) {\n    var mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseScaleCommand(mat, factor);\n    return mat;\n  },\n\n  reuseScaleCommand: function(matrixCommand, factor) {\n    matrixCommand[0] = factor;\n    matrixCommand[5] = factor;\n  },\n\n  reuseScale3dCommand: function(matrixCommand, x, y, z) {\n    matrixCommand[0] = x;\n    matrixCommand[5] = y;\n    matrixCommand[10] = z;\n  },\n\n  reusePerspectiveCommand: function(matrixCommand, p) {\n    matrixCommand[11] = -1 / p;\n  },\n\n  reuseScaleXCommand(matrixCommand, factor) {\n    matrixCommand[0] = factor;\n  },\n\n  reuseScaleYCommand(matrixCommand, factor) {\n    matrixCommand[5] = factor;\n  },\n\n  reuseScaleZCommand(matrixCommand, factor) {\n    matrixCommand[10] = factor;\n  },\n\n  reuseRotateXCommand: function(matrixCommand, radians) {\n    matrixCommand[5] = Math.cos(radians);\n    matrixCommand[6] = Math.sin(radians);\n    matrixCommand[9] = -Math.sin(radians);\n    matrixCommand[10] = Math.cos(radians);\n  },\n\n  reuseRotateYCommand: function(matrixCommand, amount) {\n    matrixCommand[0] = Math.cos(amount);\n    matrixCommand[2] = -Math.sin(amount);\n    matrixCommand[8] = Math.sin(amount);\n    matrixCommand[10] = Math.cos(amount);\n  },\n\n  // http://www.w3.org/TR/css3-transforms/#recomposing-to-a-2d-matrix\n  reuseRotateZCommand: function(matrixCommand, radians) {\n    matrixCommand[0] = Math.cos(radians);\n    matrixCommand[1] = Math.sin(radians);\n    matrixCommand[4] = -Math.sin(radians);\n    matrixCommand[5] = Math.cos(radians);\n  },\n\n  createRotateZ: function(radians) {\n    var mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseRotateZCommand(mat, radians);\n    return mat;\n  },\n\n  reuseSkewXCommand: function(matrixCommand, radians) {\n    matrixCommand[4] = Math.tan(radians);\n  },\n\n  reuseSkewYCommand: function(matrixCommand, radians) {\n    matrixCommand[1] = Math.tan(radians);\n  },\n\n  multiplyInto: function(out, a, b) {\n    var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3],\n      a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7],\n      a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11],\n      a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n    var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  },\n\n  determinant(matrix: Array<number>): number {\n    var [\n      m00,\n      m01,\n      m02,\n      m03,\n      m10,\n      m11,\n      m12,\n      m13,\n      m20,\n      m21,\n      m22,\n      m23,\n      m30,\n      m31,\n      m32,\n      m33\n    ] = matrix;\n    return (\n      m03 * m12 * m21 * m30 -\n      m02 * m13 * m21 * m30 -\n      m03 * m11 * m22 * m30 +\n      m01 * m13 * m22 * m30 +\n      m02 * m11 * m23 * m30 -\n      m01 * m12 * m23 * m30 -\n      m03 * m12 * m20 * m31 +\n      m02 * m13 * m20 * m31 +\n      m03 * m10 * m22 * m31 -\n      m00 * m13 * m22 * m31 -\n      m02 * m10 * m23 * m31 +\n      m00 * m12 * m23 * m31 +\n      m03 * m11 * m20 * m32 -\n      m01 * m13 * m20 * m32 -\n      m03 * m10 * m21 * m32 +\n      m00 * m13 * m21 * m32 +\n      m01 * m10 * m23 * m32 -\n      m00 * m11 * m23 * m32 -\n      m02 * m11 * m20 * m33 +\n      m01 * m12 * m20 * m33 +\n      m02 * m10 * m21 * m33 -\n      m00 * m12 * m21 * m33 -\n      m01 * m10 * m22 * m33 +\n      m00 * m11 * m22 * m33\n    );\n  },\n\n  /**\n   * Inverse of a matrix. Multiplying by the inverse is used in matrix math\n   * instead of division.\n   *\n   * Formula from:\n   * http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n   */\n  inverse(matrix: Array<number>): Array<number> {\n    var det = MatrixMath.determinant(matrix);\n    if (!det) {\n      return matrix;\n    }\n    var [\n      m00,\n      m01,\n      m02,\n      m03,\n      m10,\n      m11,\n      m12,\n      m13,\n      m20,\n      m21,\n      m22,\n      m23,\n      m30,\n      m31,\n      m32,\n      m33\n    ] = matrix;\n    return [\n      (m12 * m23 * m31 -\n        m13 * m22 * m31 +\n        m13 * m21 * m32 -\n        m11 * m23 * m32 -\n        m12 * m21 * m33 +\n        m11 * m22 * m33) /\n        det,\n      (m03 * m22 * m31 -\n        m02 * m23 * m31 -\n        m03 * m21 * m32 +\n        m01 * m23 * m32 +\n        m02 * m21 * m33 -\n        m01 * m22 * m33) /\n        det,\n      (m02 * m13 * m31 -\n        m03 * m12 * m31 +\n        m03 * m11 * m32 -\n        m01 * m13 * m32 -\n        m02 * m11 * m33 +\n        m01 * m12 * m33) /\n        det,\n      (m03 * m12 * m21 -\n        m02 * m13 * m21 -\n        m03 * m11 * m22 +\n        m01 * m13 * m22 +\n        m02 * m11 * m23 -\n        m01 * m12 * m23) /\n        det,\n      (m13 * m22 * m30 -\n        m12 * m23 * m30 -\n        m13 * m20 * m32 +\n        m10 * m23 * m32 +\n        m12 * m20 * m33 -\n        m10 * m22 * m33) /\n        det,\n      (m02 * m23 * m30 -\n        m03 * m22 * m30 +\n        m03 * m20 * m32 -\n        m00 * m23 * m32 -\n        m02 * m20 * m33 +\n        m00 * m22 * m33) /\n        det,\n      (m03 * m12 * m30 -\n        m02 * m13 * m30 -\n        m03 * m10 * m32 +\n        m00 * m13 * m32 +\n        m02 * m10 * m33 -\n        m00 * m12 * m33) /\n        det,\n      (m02 * m13 * m20 -\n        m03 * m12 * m20 +\n        m03 * m10 * m22 -\n        m00 * m13 * m22 -\n        m02 * m10 * m23 +\n        m00 * m12 * m23) /\n        det,\n      (m11 * m23 * m30 -\n        m13 * m21 * m30 +\n        m13 * m20 * m31 -\n        m10 * m23 * m31 -\n        m11 * m20 * m33 +\n        m10 * m21 * m33) /\n        det,\n      (m03 * m21 * m30 -\n        m01 * m23 * m30 -\n        m03 * m20 * m31 +\n        m00 * m23 * m31 +\n        m01 * m20 * m33 -\n        m00 * m21 * m33) /\n        det,\n      (m01 * m13 * m30 -\n        m03 * m11 * m30 +\n        m03 * m10 * m31 -\n        m00 * m13 * m31 -\n        m01 * m10 * m33 +\n        m00 * m11 * m33) /\n        det,\n      (m03 * m11 * m20 -\n        m01 * m13 * m20 -\n        m03 * m10 * m21 +\n        m00 * m13 * m21 +\n        m01 * m10 * m23 -\n        m00 * m11 * m23) /\n        det,\n      (m12 * m21 * m30 -\n        m11 * m22 * m30 -\n        m12 * m20 * m31 +\n        m10 * m22 * m31 +\n        m11 * m20 * m32 -\n        m10 * m21 * m32) /\n        det,\n      (m01 * m22 * m30 -\n        m02 * m21 * m30 +\n        m02 * m20 * m31 -\n        m00 * m22 * m31 -\n        m01 * m20 * m32 +\n        m00 * m21 * m32) /\n        det,\n      (m02 * m11 * m30 -\n        m01 * m12 * m30 -\n        m02 * m10 * m31 +\n        m00 * m12 * m31 +\n        m01 * m10 * m32 -\n        m00 * m11 * m32) /\n        det,\n      (m01 * m12 * m20 -\n        m02 * m11 * m20 +\n        m02 * m10 * m21 -\n        m00 * m12 * m21 -\n        m01 * m10 * m22 +\n        m00 * m11 * m22) /\n        det\n    ];\n  },\n\n  /**\n   * Turns columns into rows and rows into columns.\n   */\n  transpose(m: Array<number>): Array<number> {\n    return [\n      m[0],\n      m[4],\n      m[8],\n      m[12],\n      m[1],\n      m[5],\n      m[9],\n      m[13],\n      m[2],\n      m[6],\n      m[10],\n      m[14],\n      m[3],\n      m[7],\n      m[11],\n      m[15]\n    ];\n  },\n\n  /**\n   * Based on: http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c\n   */\n  multiplyVectorByMatrix(v: Array<number>, m: Array<number>): Array<number> {\n    var [vx, vy, vz, vw] = v;\n    return [\n      vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],\n      vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],\n      vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],\n      vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]\n    ];\n  },\n\n  /**\n   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Length(a: Array<number>): number {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n  },\n\n  /**\n   * Based on: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Normalize(vector: Array<number>, v3Length: number): Array<number> {\n    var im = 1 / (v3Length || MatrixMath.v3Length(vector));\n    return [vector[0] * im, vector[1] * im, vector[2] * im];\n  },\n\n  /**\n   * The dot product of a and b, two 3-element vectors.\n   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  },\n\n  /**\n   * From:\n   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp\n   */\n  v3Combine(\n    a: Array<number>,\n    b: Array<number>,\n    aScale: number,\n    bScale: number\n  ): Array<number> {\n    return [\n      aScale * a[0] + bScale * b[0],\n      aScale * a[1] + bScale * b[1],\n      aScale * a[2] + bScale * b[2]\n    ];\n  },\n\n  /**\n   * From:\n   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp\n   */\n  v3Cross(a: Array<number>, b: Array<number>): Array<number> {\n    return [\n      a[1] * b[2] - a[2] * b[1],\n      a[2] * b[0] - a[0] * b[2],\n      a[0] * b[1] - a[1] * b[0]\n    ];\n  },\n\n  /**\n   * Based on:\n   * http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/\n   * and:\n   * http://quat.zachbennett.com/\n   *\n   * Note that this rounds degrees to the thousandth of a degree, due to\n   * floating point errors in the creation of the quaternion.\n   *\n   * Also note that this expects the qw value to be last, not first.\n   *\n   * Also, when researching this, remember that:\n   * yaw   === heading            === z-axis\n   * pitch === elevation/attitude === y-axis\n   * roll  === bank               === x-axis\n   */\n  quaternionToDegreesXYZ(q: Array<number>, matrix, row): Array<number> {\n    var [qx, qy, qz, qw] = q;\n    var qw2 = qw * qw;\n    var qx2 = qx * qx;\n    var qy2 = qy * qy;\n    var qz2 = qz * qz;\n    var test = qx * qy + qz * qw;\n    var unit = qw2 + qx2 + qy2 + qz2;\n    var conv = 180 / Math.PI;\n\n    if (test > 0.49999 * unit) {\n      return [0, 2 * Math.atan2(qx, qw) * conv, 90];\n    }\n    if (test < -0.49999 * unit) {\n      return [0, -2 * Math.atan2(qx, qw) * conv, -90];\n    }\n\n    return [\n      MatrixMath.roundTo3Places(\n        Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv\n      ),\n      MatrixMath.roundTo3Places(\n        Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv\n      ),\n      MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv)\n    ];\n  },\n\n  /**\n   * Based on:\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n   */\n  roundTo3Places(n: number): number {\n    var arr = n.toString().split(\"e\");\n    return Math.round(arr[0] + \"e\" + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;\n  },\n\n  /**\n   * Decompose a matrix into separate transform values, for use on platforms\n   * where applying a precomposed matrix is not possible, and transforms are\n   * applied in an inflexible ordering (e.g. Android).\n   *\n   * Implementation based on\n   * http://www.w3.org/TR/css3-transforms/#decomposing-a-2d-matrix\n   * http://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\n   * which was based on\n   * http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c\n   */\n  decomposeMatrix(transformMatrix: Array<number>): ?Object {\n    invariant(\n      transformMatrix.length === 16,\n      \"Matrix decomposition needs a list of 3d matrix values, received %s\",\n      transformMatrix\n    );\n\n    // output values\n    var perspective = [];\n    var quaternion = [];\n    var scale = [];\n    var skew = [];\n    var translation = [];\n\n    // create normalized, 2d array matrix\n    // and normalized 1d array perspectiveMatrix with redefined 4th column\n    if (!transformMatrix[15]) {\n      return;\n    }\n    var matrix = [];\n    var perspectiveMatrix = [];\n    for (var i = 0; i < 4; i++) {\n      matrix.push([]);\n      for (var j = 0; j < 4; j++) {\n        var value = transformMatrix[i * 4 + j] / transformMatrix[15];\n        matrix[i].push(value);\n        perspectiveMatrix.push(j === 3 ? 0 : value);\n      }\n    }\n    perspectiveMatrix[15] = 1;\n\n    // test for singularity of upper 3x3 part of the perspective matrix\n    if (!MatrixMath.determinant(perspectiveMatrix)) {\n      return;\n    }\n\n    // isolate perspective\n    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {\n      // rightHandSide is the right hand side of the equation.\n      // rightHandSide is a vector, or point in 3d space relative to the origin.\n      var rightHandSide = [\n        matrix[0][3],\n        matrix[1][3],\n        matrix[2][3],\n        matrix[3][3]\n      ];\n\n      // Solve the equation by inverting perspectiveMatrix and multiplying\n      // rightHandSide by the inverse.\n      var inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);\n      var transposedInversePerspectiveMatrix = MatrixMath.transpose(\n        inversePerspectiveMatrix\n      );\n      var perspective = MatrixMath.multiplyVectorByMatrix(\n        rightHandSide,\n        transposedInversePerspectiveMatrix\n      );\n    } else {\n      // no perspective\n      perspective[0] = perspective[1] = perspective[2] = 0;\n      perspective[3] = 1;\n    }\n\n    // translation is simple\n    for (var i = 0; i < 3; i++) {\n      translation[i] = matrix[3][i];\n    }\n\n    // Now get scale and shear.\n    // 'row' is a 3 element array of 3 component vectors\n    var row = [];\n    for (i = 0; i < 3; i++) {\n      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];\n    }\n\n    // Compute X scale factor and normalize first row.\n    scale[0] = MatrixMath.v3Length(row[0]);\n    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = MatrixMath.v3Dot(row[0], row[1]);\n    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = MatrixMath.v3Dot(row[0], row[1]);\n    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);\n\n    // Now, compute Y scale and normalize 2nd row.\n    scale[1] = MatrixMath.v3Length(row[1]);\n    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);\n    skew[0] /= scale[1];\n\n    // Compute XZ and YZ shears, orthogonalize 3rd row\n    skew[1] = MatrixMath.v3Dot(row[0], row[2]);\n    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);\n    skew[2] = MatrixMath.v3Dot(row[1], row[2]);\n    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);\n\n    // Next, get Z scale and normalize 3rd row.\n    scale[2] = MatrixMath.v3Length(row[2]);\n    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);\n    skew[1] /= scale[2];\n    skew[2] /= scale[2];\n\n    // At this point, the matrix (in rows) is orthonormal.\n    // Check for a coordinate system flip.  If the determinant\n    // is -1, then negate the matrix and the scaling factors.\n    var pdum3 = MatrixMath.v3Cross(row[1], row[2]);\n    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {\n      for (i = 0; i < 3; i++) {\n        scale[i] *= -1;\n        row[i][0] *= -1;\n        row[i][1] *= -1;\n        row[i][2] *= -1;\n      }\n    }\n\n    // Now, get the rotations out\n    quaternion[0] =\n      0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));\n    quaternion[1] =\n      0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));\n    quaternion[2] =\n      0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));\n    quaternion[3] =\n      0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));\n\n    if (row[2][1] > row[1][2]) {\n      quaternion[0] = -quaternion[0];\n    }\n    if (row[0][2] > row[2][0]) {\n      quaternion[1] = -quaternion[1];\n    }\n    if (row[1][0] > row[0][1]) {\n      quaternion[2] = -quaternion[2];\n    }\n\n    // correct for occasional, weird Euler synonyms for 2d rotation\n    var rotationDegrees;\n    if (\n      quaternion[0] < 0.001 &&\n      quaternion[0] >= 0 &&\n      quaternion[1] < 0.001 &&\n      quaternion[1] >= 0\n    ) {\n      // this is a 2d rotation on the z-axis\n      rotationDegrees = [\n        0,\n        0,\n        MatrixMath.roundTo3Places(\n          Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI\n        )\n      ];\n    } else {\n      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(\n        quaternion,\n        matrix,\n        row\n      );\n    }\n\n    // expose both base data and convenience names\n    return {\n      rotationDegrees,\n      perspective,\n      quaternion,\n      scale,\n      skew,\n      translation,\n\n      rotate: rotationDegrees[2],\n      rotateX: rotationDegrees[0],\n      rotateY: rotationDegrees[1],\n      scaleX: scale[0],\n      scaleY: scale[1],\n      translateX: translation[0],\n      translateY: translation[1]\n    };\n  }\n};\n\nmodule.exports = MatrixMath;\n"]}