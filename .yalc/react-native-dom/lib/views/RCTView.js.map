{"version":3,"sources":["../../ReactDom/views/RCTView.js"],"names":["RCTView","bridge","value","onLayout","layout","x","left","y","top","width","height"],"mappings":"2wBAIA,yC,8CAEA,6D,+DACA,uD,iJAGMA,Q,OADL,4BAAc,UAAd,C,uEAKC,iBAAYC,MAAZ,CAA+B,mKAE7B,MAAKA,MAAL,CAAcA,MAAd,CAF6B,aAG9B,C,kEAEkB,CACjB,4GACD,C,kBAESC,K,CAAc,CACtB,gGAAcA,KAAd,OAEA,GAAI,KAAKC,QAAT,CAAmB,CACjB,KAAKA,QAAL,CAAc,CACZC,OAAQ,CACNC,EAAGH,MAAMI,IADH,CAENC,EAAGL,MAAMM,GAFH,CAGNC,MAAOP,MAAMO,KAHP,CAINC,OAAQR,MAAMQ,MAJR,CADI,CAAd,EAQD,CACF,C,iEAQYV,O","file":"RCTView.js","sourcesContent":["/**\n * @providesModule RCTView\n * @flow\n */\nimport UIView from \"UIView\";\nimport type RCTBridge from \"RCTBridge\";\nimport RCTEventEmitter from \"RCTNativeEventEmitter\";\nimport CustomElement from \"CustomElement\";\n\n@CustomElement(\"rct-view\")\nclass RCTView extends UIView {\n  bridge: RCTBridge;\n  onLayout: ?Function;\n\n  constructor(bridge: RCTBridge) {\n    super();\n    this.bridge = bridge;\n  }\n\n  get frame(): Frame {\n    return super.frame;\n  }\n\n  set frame(value: Frame) {\n    super.frame = value;\n\n    if (this.onLayout) {\n      this.onLayout({\n        layout: {\n          x: value.left,\n          y: value.top,\n          width: value.width,\n          height: value.height\n        }\n      });\n    }\n  }\n\n  // TODO: Renable when I have a plan for focus styling\n  // set accessible(value: boolean) {\n  //   this.tabIndex = 0;\n  // }\n}\n\nexport default RCTView;\n"]}