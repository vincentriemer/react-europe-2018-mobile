Object.defineProperty(exports,"__esModule",{value:true});var _slicedToArray2=require("babel-runtime/helpers/slicedToArray");var _slicedToArray3=_interopRequireDefault(_slicedToArray2);var _extends2=require("babel-runtime/helpers/extends");var _extends3=_interopRequireDefault(_extends2);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _set2=require("babel-runtime/helpers/set");var _set3=_interopRequireDefault(_set2);var _get2=require("babel-runtime/helpers/get");var _get3=_interopRequireDefault(_get2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _dec,_class;var _RCTView2=require("./../RCTView");var _RCTView3=_interopRequireDefault(_RCTView2);var _RCTImageSource=require("./RCTImageSource");var _RCTImageSource2=_interopRequireDefault(_RCTImageSource);var _CustomElement=require("./../../utils/CustomElement");var _CustomElement2=_interopRequireDefault(_CustomElement);var _ColorArrayFromHexARGB=require("./../../utils/ColorArrayFromHexARGB");var _ColorArrayFromHexARGB2=_interopRequireDefault(_ColorArrayFromHexARGB);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var tintColorSVG=function tintColorSVG(color,id){return"\n    <svg>\n      <defs>\n        <filter id=\"tint-"+id+"\">\n          <feFlood flood-color=\""+color+"\"/>\n          <feComposite in2=\"SourceAlpha\" operator=\"atop\"/>\n        </filter>\n      </defs>\n    </svg>";};var onLoadParamsForSource=function onLoadParamsForSource(source){return{source:{width:source.size.width,height:source.size.height,url:source.request}};};var idCounter=0;var RCTImageView=(_dec=(0,_CustomElement2.default)("rct-image-view"),_dec(_class=function(_RCTView){(0,_inherits3.default)(RCTImageView,_RCTView);function RCTImageView(bridge){(0,_classCallCheck3.default)(this,RCTImageView);var _this=(0,_possibleConstructorReturn3.default)(this,(RCTImageView.__proto__||Object.getPrototypeOf(RCTImageView)).call(this,bridge));_this.onLoadStart=false;_this.onLoad=false;_this.onLoadEnd=false;(0,_extends3.default)(_this.style,{overflow:"hidden"});_this._imageSources=[];_this.childShadowRoot=_this.childContainer.attachShadow({mode:"open"});_this.imageElement=document.createElement("img");(0,_extends3.default)(_this.imageElement.style,{pointerEvents:"none"});_this.childShadowRoot.appendChild(_this.imageElement);_this.childShadowRoot.appendChild(document.createElement("slot"));_this.svgFilter=document.createElement("div");_this.svgFilter.style.height="0";_this.childShadowRoot.appendChild(_this.svgFilter);_this.filterId=idCounter;idCounter++;_this.resizeMode="stretch";return _this;}(0,_createClass3.default)(RCTImageView,[{key:"updateFilter",value:function updateFilter(){var filterStrings=[];if(this._tintColor){filterStrings.push("url(#tint-"+this.filterId+")");}if(this._blurRadius){filterStrings.push("blur("+this._blurRadius+"px)");}this.imageElement.style.webkitFilter=filterStrings.join(" ");this.imageElement.style.filter=filterStrings.join(" ");}},{key:"hasMultipleSources",value:function hasMultipleSources(){return this._imageSources.length>1;}},{key:"imageSourceForSize",value:function imageSourceForSize(size){if(!this.hasMultipleSources()){return this._imageSources[0];}if(size.width===0&&size.height===0){return null;}var scale=this.imageScale;var targetImagePixels=size.width*size.height*scale*scale;var bestSource=null;var bestFit=Infinity;for(var _iterator=this._imageSources,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var source=_ref;var imgSize=source.size;var imagePixels=imgSize.width*imgSize.height*source.scale*source.scale;var fit=Math.abs(1-imagePixels/targetImagePixels);if(fit<bestFit){bestFit=fit;bestSource=source;}}return bestSource;}},{key:"reloadImage",value:function reloadImage(){var _this2=this;var source=this.imageSourceForSize(this.frameSize);if(source&&this.frameSize.width>0&&this.frameSize.height>0){if(this.onLoadStart){this.bridge.enqueueJSCall("RCTEventEmitter","receiveEvent",[this.reactTag,"topLoadStart",null]);}this.bridge.imageLoader.loadImageWithURLRequest(source.request).then(function(image){_this2.imageElement.src=image.src;if(_this2.onLoad){var sourceLoaded=source.imageSourceWithSizeAndScale({width:image.width,height:image.height},source.scale);_this2.bridge.enqueueJSCall("RCTEventEmitter","receiveEvent",[_this2.reactTag,"topLoad",onLoadParamsForSource(sourceLoaded)]);}}).catch(function(err){_this2.bridge.enqueueJSCall("RCTEventEmitter","receiveEvent",[_this2.reactTag,"topError",{error:err}]);}).then(function(){if(_this2.onLoadEnd){_this2.bridge.enqueueJSCall("RCTEventEmitter","receiveEvent",[_this2.reactTag,"topLoadEnd",null]);}});}}},{key:"imageSources",set:function set(value){this._imageSources=value;this.reloadImage();}},{key:"resizeMode",set:function set(value){var outputValue="";switch(value){case"contain":case"cover":outputValue=value;break;case"center":outputValue="scale-down";break;case"stretch":outputValue="fill";break;case"none":outputValue="none";break;}(0,_extends3.default)(this.imageElement.style,{objectFit:outputValue});}},{key:"blurRadius",set:function set(value){this._blurRadius=value;this.updateFilter();}},{key:"tintColor",set:function set(value){if(typeof value==="number"){var _ColorArrayFromHexARG=(0,_ColorArrayFromHexARGB2.default)(value),_ColorArrayFromHexARG2=(0,_slicedToArray3.default)(_ColorArrayFromHexARG,4),a=_ColorArrayFromHexARG2[0],r=_ColorArrayFromHexARG2[1],g=_ColorArrayFromHexARG2[2],b=_ColorArrayFromHexARG2[3];var stringValue="rgba("+r+","+g+","+b+","+a+")";this._tintColor=stringValue;}else{this._tintColor=value;}this.svgFilter.style.color=this._tintColor||"";this.svgFilter.innerHTML=this._tintColor?tintColorSVG(this._tintColor,this.filterId):"";this.updateFilter();}},{key:"imageScale",get:function get(){return this.bridge.deviceInfo.getDevicePixelRatio();}},{key:"frame",get:function get(){return(0,_get3.default)(RCTImageView.prototype.__proto__||Object.getPrototypeOf(RCTImageView.prototype),"frame",this);},set:function set(value){(0,_set3.default)(RCTImageView.prototype.__proto__||Object.getPrototypeOf(RCTImageView.prototype),"frame",value,this);var width=value.width,height=value.height;(0,_extends3.default)(this.imageElement.style,{width:"100%",height:"100%"});this.reloadImage();}},{key:"frameSize",get:function get(){var _frame=this.frame,width=_frame.width,height=_frame.height;return{width:width,height:height};}}]);return RCTImageView;}(_RCTView3.default))||_class);exports.default=RCTImageView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL1JlYWN0RG9tL3ZpZXdzL0ltYWdlL1JDVEltYWdlVmlldy5qcyJdLCJuYW1lcyI6WyJ0aW50Q29sb3JTVkciLCJjb2xvciIsImlkIiwib25Mb2FkUGFyYW1zRm9yU291cmNlIiwic291cmNlIiwid2lkdGgiLCJzaXplIiwiaGVpZ2h0IiwidXJsIiwicmVxdWVzdCIsImlkQ291bnRlciIsIlJDVEltYWdlVmlldyIsImJyaWRnZSIsIm9uTG9hZFN0YXJ0Iiwib25Mb2FkIiwib25Mb2FkRW5kIiwic3R5bGUiLCJvdmVyZmxvdyIsIl9pbWFnZVNvdXJjZXMiLCJjaGlsZFNoYWRvd1Jvb3QiLCJjaGlsZENvbnRhaW5lciIsImF0dGFjaFNoYWRvdyIsIm1vZGUiLCJpbWFnZUVsZW1lbnQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJwb2ludGVyRXZlbnRzIiwiYXBwZW5kQ2hpbGQiLCJzdmdGaWx0ZXIiLCJmaWx0ZXJJZCIsInJlc2l6ZU1vZGUiLCJmaWx0ZXJTdHJpbmdzIiwiX3RpbnRDb2xvciIsInB1c2giLCJfYmx1clJhZGl1cyIsIndlYmtpdEZpbHRlciIsImpvaW4iLCJmaWx0ZXIiLCJsZW5ndGgiLCJoYXNNdWx0aXBsZVNvdXJjZXMiLCJzY2FsZSIsImltYWdlU2NhbGUiLCJ0YXJnZXRJbWFnZVBpeGVscyIsImJlc3RTb3VyY2UiLCJiZXN0Rml0IiwiSW5maW5pdHkiLCJpbWdTaXplIiwiaW1hZ2VQaXhlbHMiLCJmaXQiLCJNYXRoIiwiYWJzIiwiaW1hZ2VTb3VyY2VGb3JTaXplIiwiZnJhbWVTaXplIiwiZW5xdWV1ZUpTQ2FsbCIsInJlYWN0VGFnIiwiaW1hZ2VMb2FkZXIiLCJsb2FkSW1hZ2VXaXRoVVJMUmVxdWVzdCIsInRoZW4iLCJpbWFnZSIsInNyYyIsInNvdXJjZUxvYWRlZCIsImltYWdlU291cmNlV2l0aFNpemVBbmRTY2FsZSIsImNhdGNoIiwiZXJyIiwiZXJyb3IiLCJ2YWx1ZSIsInJlbG9hZEltYWdlIiwib3V0cHV0VmFsdWUiLCJvYmplY3RGaXQiLCJ1cGRhdGVGaWx0ZXIiLCJhIiwiciIsImciLCJiIiwic3RyaW5nVmFsdWUiLCJpbm5lckhUTUwiLCJkZXZpY2VJbmZvIiwiZ2V0RGV2aWNlUGl4ZWxSYXRpbyIsImZyYW1lIl0sIm1hcHBpbmdzIjoiaS9CQU9BLHNDLGdEQUNBLGdELDZEQUNBLDBELDJEQUNBLDBFLDhKQUVBLEdBQU1BLGNBQWUsUUFBZkEsYUFBZSxDQUFDQyxLQUFELENBQWdCQyxFQUFoQixDQUErQixDQUNsRCw4REFHeUJBLEVBSHpCLDBDQUlnQ0QsS0FKaEMsc0hBU0QsQ0FWRCxDQVlBLEdBQU1FLHVCQUF3QixRQUF4QkEsc0JBQXdCLENBQUNDLE1BQUQsUUFBNkIsQ0FDekRBLE9BQVEsQ0FDTkMsTUFBT0QsT0FBT0UsSUFBUCxDQUFZRCxLQURiLENBRU5FLE9BQVFILE9BQU9FLElBQVAsQ0FBWUMsTUFGZCxDQUdOQyxJQUFLSixPQUFPSyxPQUhOLENBRGlELENBQTdCLEVBQTlCLENBUUEsR0FBSUMsV0FBWSxDQUFoQixDLEdBR01DLGEsT0FETCw0QkFBYyxnQkFBZCxDLDhFQWdCQyxzQkFBWUMsTUFBWixDQUErQixnTEFDdkJBLE1BRHVCLFNBVC9CQyxXQVMrQixDQVRSLEtBU1EsT0FSL0JDLE1BUStCLENBUmIsS0FRYSxPQVAvQkMsU0FPK0IsQ0FQVixLQU9VLENBRzdCLHNCQUFjLE1BQUtDLEtBQW5CLENBQTBCLENBQ3hCQyxTQUFVLFFBRGMsQ0FBMUIsRUFJQSxNQUFLQyxhQUFMLENBQXFCLEVBQXJCLENBRUEsTUFBS0MsZUFBTCxDQUF1QixNQUFLQyxjQUFMLENBQW9CQyxZQUFwQixDQUFpQyxDQUFFQyxLQUFNLE1BQVIsQ0FBakMsQ0FBdkIsQ0FDQSxNQUFLQyxZQUFMLENBQW9CQyxTQUFTQyxhQUFULENBQXVCLEtBQXZCLENBQXBCLENBQ0Esc0JBQWMsTUFBS0YsWUFBTCxDQUFrQlAsS0FBaEMsQ0FBdUMsQ0FDckNVLGNBQWUsTUFEc0IsQ0FBdkMsRUFHQSxNQUFLUCxlQUFMLENBQXFC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dEIsc0JBQWMsS0FBS2dCLFlBQUwsQ0FBa0JQLEtBQWhDLENBQXVDLENBQ3JDWCxNQUFPLE1BRDhCLENBRXJDRSxPQUFRLE1BRjZCLENBQXZDLEVBS0EsS0FBSzJELFdBQUwsR0FDRCxDLHFDQXFDcUIsWUFDTSxLQUFLWSxLQURYLENBQ1p6RSxLQURZLFFBQ1pBLEtBRFksQ0FDTEUsTUFESyxRQUNMQSxNQURLLENBRXBCLE1BQU8sQ0FBRUYsV0FBRixDQUFTRSxhQUFULENBQVAsQ0FDRCxDLHVFQXVEWUksWSIsImZpbGUiOiJSQ1RJbWFnZVZpZXcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwcm92aWRlc01vZHVsZSBSQ1RJbWFnZVZpZXdcbiAqIEBmbG93XG4gKi9cblxuaW1wb3J0IHR5cGUgUkNUQnJpZGdlIGZyb20gXCJSQ1RCcmlkZ2VcIjtcblxuaW1wb3J0IFJDVFZpZXcgZnJvbSBcIlJDVFZpZXdcIjtcbmltcG9ydCBSQ1RJbWFnZVNvdXJjZSBmcm9tIFwiUkNUSW1hZ2VTb3VyY2VcIjtcbmltcG9ydCBDdXN0b21FbGVtZW50IGZyb20gXCJDdXN0b21FbGVtZW50XCI7XG5pbXBvcnQgQ29sb3JBcnJheUZyb21IZXhBUkdCIGZyb20gXCJDb2xvckFycmF5RnJvbUhleEFSR0JcIjtcblxuY29uc3QgdGludENvbG9yU1ZHID0gKGNvbG9yOiBzdHJpbmcsIGlkOiBudW1iZXIpID0+IHtcbiAgcmV0dXJuIGBcbiAgICA8c3ZnPlxuICAgICAgPGRlZnM+XG4gICAgICAgIDxmaWx0ZXIgaWQ9XCJ0aW50LSR7aWR9XCI+XG4gICAgICAgICAgPGZlRmxvb2QgZmxvb2QtY29sb3I9XCIke2NvbG9yfVwiLz5cbiAgICAgICAgICA8ZmVDb21wb3NpdGUgaW4yPVwiU291cmNlQWxwaGFcIiBvcGVyYXRvcj1cImF0b3BcIi8+XG4gICAgICAgIDwvZmlsdGVyPlxuICAgICAgPC9kZWZzPlxuICAgIDwvc3ZnPmA7XG59O1xuXG5jb25zdCBvbkxvYWRQYXJhbXNGb3JTb3VyY2UgPSAoc291cmNlOiBSQ1RJbWFnZVNvdXJjZSkgPT4gKHtcbiAgc291cmNlOiB7XG4gICAgd2lkdGg6IHNvdXJjZS5zaXplLndpZHRoLFxuICAgIGhlaWdodDogc291cmNlLnNpemUuaGVpZ2h0LFxuICAgIHVybDogc291cmNlLnJlcXVlc3RcbiAgfVxufSk7XG5cbmxldCBpZENvdW50ZXIgPSAwO1xuXG5AQ3VzdG9tRWxlbWVudChcInJjdC1pbWFnZS12aWV3XCIpXG5jbGFzcyBSQ1RJbWFnZVZpZXcgZXh0ZW5kcyBSQ1RWaWV3IHtcbiAgX2ltYWdlU291cmNlczogUkNUSW1hZ2VTb3VyY2VbXTtcbiAgaW1hZ2VFbGVtZW50OiBIVE1MSW1hZ2VFbGVtZW50O1xuICBpbWFnZUNvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQ7XG4gIGNoaWxkU2hhZG93Um9vdDogU2hhZG93Um9vdDtcblxuICBvbkxvYWRTdGFydDogYm9vbGVhbiA9IGZhbHNlO1xuICBvbkxvYWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgb25Mb2FkRW5kOiBib29sZWFuID0gZmFsc2U7XG5cbiAgZmlsdGVySWQ6IG51bWJlcjtcbiAgc3ZnRmlsdGVyOiBIVE1MRWxlbWVudDtcbiAgX2JsdXJSYWRpdXM6ID9udW1iZXI7XG4gIF90aW50Q29sb3I6ID9zdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoYnJpZGdlOiBSQ1RCcmlkZ2UpIHtcbiAgICBzdXBlcihicmlkZ2UpO1xuXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLnN0eWxlLCB7XG4gICAgICBvdmVyZmxvdzogXCJoaWRkZW5cIlxuICAgIH0pO1xuXG4gICAgdGhpcy5faW1hZ2VTb3VyY2VzID0gW107XG5cbiAgICB0aGlzLmNoaWxkU2hhZG93Um9vdCA9IHRoaXMuY2hpbGRDb250YWluZXIuYXR0YWNoU2hhZG93KHsgbW9kZTogXCJvcGVuXCIgfSk7XG4gICAgdGhpcy5pbWFnZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5pbWFnZUVsZW1lbnQuc3R5bGUsIHtcbiAgICAgIHBvaW50ZXJFdmVudHM6IFwibm9uZVwiXG4gICAgfSk7XG4gICAgdGhpcy5jaGlsZFNoYWRvd1Jvb3QuYXBwZW5kQ2hpbGQodGhpcy5pbWFnZUVsZW1lbnQpO1xuICAgIHRoaXMuY2hpbGRTaGFkb3dSb290LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzbG90XCIpKTtcblxuICAgIHRoaXMuc3ZnRmlsdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0aGlzLnN2Z0ZpbHRlci5zdHlsZS5oZWlnaHQgPSBcIjBcIjtcbiAgICB0aGlzLmNoaWxkU2hhZG93Um9vdC5hcHBlbmRDaGlsZCh0aGlzLnN2Z0ZpbHRlcik7XG4gICAgdGhpcy5maWx0ZXJJZCA9IGlkQ291bnRlcjtcbiAgICBpZENvdW50ZXIrKztcblxuICAgIHRoaXMucmVzaXplTW9kZSA9IFwic3RyZXRjaFwiO1xuICB9XG5cbiAgdXBkYXRlRmlsdGVyKCkge1xuICAgIGNvbnN0IGZpbHRlclN0cmluZ3M6IHN0cmluZ1tdID0gW107XG4gICAgaWYgKHRoaXMuX3RpbnRDb2xvcikge1xuICAgICAgZmlsdGVyU3RyaW5ncy5wdXNoKGB1cmwoI3RpbnQtJHt0aGlzLmZpbHRlcklkfSlgKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuX2JsdXJSYWRpdXMpIHtcbiAgICAgIGZpbHRlclN0cmluZ3MucHVzaChgYmx1cigke3RoaXMuX2JsdXJSYWRpdXN9cHgpYCk7XG4gICAgfVxuICAgIC8vICRGbG93Rml4TWVcbiAgICB0aGlzLmltYWdlRWxlbWVudC5zdHlsZS53ZWJraXRGaWx0ZXIgPSBmaWx0ZXJTdHJpbmdzLmpvaW4oXCIgXCIpO1xuICAgIHRoaXMuaW1hZ2VFbGVtZW50LnN0eWxlLmZpbHRlciA9IGZpbHRlclN0cmluZ3Muam9pbihcIiBcIik7XG4gIH1cblxuICBzZXQgaW1hZ2VTb3VyY2VzKHZhbHVlOiBSQ1RJbWFnZVNvdXJjZVtdKSB7XG4gICAgdGhpcy5faW1hZ2VTb3VyY2VzID0gdmFsdWU7XG4gICAgdGhpcy5yZWxvYWRJbWFnZSgpO1xuICB9XG5cbiAgc2V0IHJlc2l6ZU1vZGUodmFsdWU6IHN0cmluZykge1xuICAgIGxldCBvdXRwdXRWYWx1ZTogc3RyaW5nID0gXCJcIjtcbiAgICBzd2l0Y2ggKHZhbHVlKSB7XG4gICAgICBjYXNlIFwiY29udGFpblwiOlxuICAgICAgY2FzZSBcImNvdmVyXCI6XG4gICAgICAgIG91dHB1dFZhbHVlID0gdmFsdWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImNlbnRlclwiOlxuICAgICAgICBvdXRwdXRWYWx1ZSA9IFwic2NhbGUtZG93blwiO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJzdHJldGNoXCI6XG4gICAgICAgIG91dHB1dFZhbHVlID0gXCJmaWxsXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIm5vbmVcIjpcbiAgICAgICAgb3V0cHV0VmFsdWUgPSBgbm9uZWA7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBPYmplY3QuYXNzaWduKHRoaXMuaW1hZ2VFbGVtZW50LnN0eWxlLCB7XG4gICAgICBvYmplY3RGaXQ6IG91dHB1dFZhbHVlXG4gICAgfSk7XG4gIH1cblxuICBzZXQgYmx1clJhZGl1cyh2YWx1ZTogP251bWJlcikge1xuICAgIHRoaXMuX2JsdXJSYWRpdXMgPSB2YWx1ZTtcbiAgICB0aGlzLnVwZGF0ZUZpbHRlcigpO1xuICB9XG5cbiAgc2V0IHRpbnRDb2xvcih2YWx1ZTogP251bWJlcikge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIGNvbnN0IFthLCByLCBnLCBiXSA9IENvbG9yQXJyYXlGcm9tSGV4QVJHQih2YWx1ZSk7XG4gICAgICBjb25zdCBzdHJpbmdWYWx1ZSA9IGByZ2JhKCR7cn0sJHtnfSwke2J9LCR7YX0pYDtcbiAgICAgIHRoaXMuX3RpbnRDb2xvciA9IHN0cmluZ1ZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl90aW50Q29sb3IgPSB2YWx1ZTtcbiAgICB9XG4gICAgdGhpcy5zdmdGaWx0ZXIuc3R5bGUuY29sb3IgPSB0aGlzLl90aW50Q29sb3IgfHwgXCJcIjtcbiAgICB0aGlzLnN2Z0ZpbHRlci5pbm5lckhUTUwgPSB0aGlzLl90aW50Q29sb3JcbiAgICAgID8gdGludENvbG9yU1ZHKHRoaXMuX3RpbnRDb2xvciwgdGhpcy5maWx0ZXJJZClcbiAgICAgIDogXCJcIjtcbiAgICB0aGlzLnVwZGF0ZUZpbHRlcigpO1xuICB9XG5cbiAgZ2V0IGltYWdlU2NhbGUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5icmlkZ2UuZGV2aWNlSW5mby5nZXREZXZpY2VQaXhlbFJhdGlvKCk7XG4gIH1cblxuICBnZXQgZnJhbWUoKTogRnJhbWUge1xuICAgIHJldHVybiBzdXBlci5mcmFtZTtcbiAgfVxuXG4gIHNldCBmcmFtZSh2YWx1ZTogRnJhbWUpIHtcbiAgICBzdXBlci5mcmFtZSA9IHZhbHVlO1xuXG4gICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSB2YWx1ZTtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMuaW1hZ2VFbGVtZW50LnN0eWxlLCB7XG4gICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICBoZWlnaHQ6IFwiMTAwJVwiXG4gICAgfSk7XG5cbiAgICB0aGlzLnJlbG9hZEltYWdlKCk7XG4gIH1cblxuICBoYXNNdWx0aXBsZVNvdXJjZXMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2ltYWdlU291cmNlcy5sZW5ndGggPiAxO1xuICB9XG5cbiAgaW1hZ2VTb3VyY2VGb3JTaXplKHNpemU6IFNpemUpOiA/UkNUSW1hZ2VTb3VyY2Uge1xuICAgIGlmICghdGhpcy5oYXNNdWx0aXBsZVNvdXJjZXMoKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ltYWdlU291cmNlc1swXTtcbiAgICB9XG5cbiAgICAvLyBuZWVkIHRvIHdhaXQgZm9yIGxheW91dCBwYXNzIGJlZm9yZSBkZWNpZGluZ1xuICAgIGlmIChzaXplLndpZHRoID09PSAwICYmIHNpemUuaGVpZ2h0ID09PSAwKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCBzY2FsZSA9IHRoaXMuaW1hZ2VTY2FsZTtcbiAgICBjb25zdCB0YXJnZXRJbWFnZVBpeGVscyA9IHNpemUud2lkdGggKiBzaXplLmhlaWdodCAqIHNjYWxlICogc2NhbGU7XG5cbiAgICBsZXQgYmVzdFNvdXJjZTogP1JDVEltYWdlU291cmNlID0gbnVsbDtcbiAgICBsZXQgYmVzdEZpdDogbnVtYmVyID0gSW5maW5pdHk7XG5cbiAgICBmb3IgKGxldCBzb3VyY2Ugb2YgdGhpcy5faW1hZ2VTb3VyY2VzKSB7XG4gICAgICBjb25zdCBpbWdTaXplID0gc291cmNlLnNpemU7XG4gICAgICBjb25zdCBpbWFnZVBpeGVscyA9XG4gICAgICAgIGltZ1NpemUud2lkdGggKiBpbWdTaXplLmhlaWdodCAqIHNvdXJjZS5zY2FsZSAqIHNvdXJjZS5zY2FsZTtcbiAgICAgIGNvbnN0IGZpdCA9IE1hdGguYWJzKDEgLSBpbWFnZVBpeGVscyAvIHRhcmdldEltYWdlUGl4ZWxzKTtcblxuICAgICAgaWYgKGZpdCA8IGJlc3RGaXQpIHtcbiAgICAgICAgYmVzdEZpdCA9IGZpdDtcbiAgICAgICAgYmVzdFNvdXJjZSA9IHNvdXJjZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYmVzdFNvdXJjZTtcbiAgfVxuXG4gIGdldCBmcmFtZVNpemUoKTogU2l6ZSB7XG4gICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSB0aGlzLmZyYW1lO1xuICAgIHJldHVybiB7IHdpZHRoLCBoZWlnaHQgfTtcbiAgfVxuXG4gIHJlbG9hZEltYWdlKCkge1xuICAgIGNvbnN0IHNvdXJjZSA9IHRoaXMuaW1hZ2VTb3VyY2VGb3JTaXplKHRoaXMuZnJhbWVTaXplKTtcbiAgICBpZiAoc291cmNlICYmIHRoaXMuZnJhbWVTaXplLndpZHRoID4gMCAmJiB0aGlzLmZyYW1lU2l6ZS5oZWlnaHQgPiAwKSB7XG4gICAgICBpZiAodGhpcy5vbkxvYWRTdGFydCkge1xuICAgICAgICB0aGlzLmJyaWRnZS5lbnF1ZXVlSlNDYWxsKFwiUkNURXZlbnRFbWl0dGVyXCIsIFwicmVjZWl2ZUV2ZW50XCIsIFtcbiAgICAgICAgICB0aGlzLnJlYWN0VGFnLFxuICAgICAgICAgIFwidG9wTG9hZFN0YXJ0XCIsXG4gICAgICAgICAgbnVsbFxuICAgICAgICBdKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5icmlkZ2UuaW1hZ2VMb2FkZXJcbiAgICAgICAgLmxvYWRJbWFnZVdpdGhVUkxSZXF1ZXN0KHNvdXJjZS5yZXF1ZXN0KVxuICAgICAgICAudGhlbigoaW1hZ2U6IEltYWdlKSA9PiB7XG4gICAgICAgICAgdGhpcy5pbWFnZUVsZW1lbnQuc3JjID0gaW1hZ2Uuc3JjO1xuXG4gICAgICAgICAgaWYgKHRoaXMub25Mb2FkKSB7XG4gICAgICAgICAgICBjb25zdCBzb3VyY2VMb2FkZWQgPSBzb3VyY2UuaW1hZ2VTb3VyY2VXaXRoU2l6ZUFuZFNjYWxlKFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IGltYWdlLndpZHRoLFxuICAgICAgICAgICAgICAgIGhlaWdodDogaW1hZ2UuaGVpZ2h0XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHNvdXJjZS5zY2FsZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHRoaXMuYnJpZGdlLmVucXVldWVKU0NhbGwoXCJSQ1RFdmVudEVtaXR0ZXJcIiwgXCJyZWNlaXZlRXZlbnRcIiwgW1xuICAgICAgICAgICAgICB0aGlzLnJlYWN0VGFnLFxuICAgICAgICAgICAgICBcInRvcExvYWRcIixcbiAgICAgICAgICAgICAgb25Mb2FkUGFyYW1zRm9yU291cmNlKHNvdXJjZUxvYWRlZClcbiAgICAgICAgICAgIF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICB0aGlzLmJyaWRnZS5lbnF1ZXVlSlNDYWxsKFwiUkNURXZlbnRFbWl0dGVyXCIsIFwicmVjZWl2ZUV2ZW50XCIsIFtcbiAgICAgICAgICAgIHRoaXMucmVhY3RUYWcsXG4gICAgICAgICAgICBcInRvcEVycm9yXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGVycm9yOiBlcnJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdKTtcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLm9uTG9hZEVuZCkge1xuICAgICAgICAgICAgdGhpcy5icmlkZ2UuZW5xdWV1ZUpTQ2FsbChcIlJDVEV2ZW50RW1pdHRlclwiLCBcInJlY2VpdmVFdmVudFwiLCBbXG4gICAgICAgICAgICAgIHRoaXMucmVhY3RUYWcsXG4gICAgICAgICAgICAgIFwidG9wTG9hZEVuZFwiLFxuICAgICAgICAgICAgICBudWxsXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSQ1RJbWFnZVZpZXc7XG4iXX0=