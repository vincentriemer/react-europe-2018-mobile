{"version":3,"sources":["../../ReactDom/views/RCTActivityIndicatorView.js"],"names":["INDICATOR_SVG","RCTActivityIndicatorView","bridge","animationContainer","constructAnimationContainer","childContainer","appendChild","animation","constructAnimation","color","animating","hidesWhenStopped","container","document","createElement","style","position","top","left","right","bottom","willChange","animate","transform","duration","iterations","Infinity","easing","_hidesWhenStopped","_animating","innerHTML","play","pause","value","a","r","g","b","stringValue","updateView"],"mappings":"m0BAIA,mC,gDAEA,uD,2DACA,uE,8JAGA,GAAMA,4XAAN,C,GAQMC,yB,OADL,4BAAc,6BAAd,C,0FAQC,kCAAYC,MAAZ,CAA+B,oNACvBA,MADuB,GAG7B,MAAKC,kBAAL,CAA0B,MAAKC,2BAAL,EAA1B,CACA,MAAKC,cAAL,CAAoBC,WAApB,CAAgC,MAAKH,kBAArC,EAEA,MAAKI,SAAL,CAAiB,MAAKC,kBAAL,EAAjB,CACA,MAAKC,KAAL,CAAa,mBAAb,CACA,MAAKC,SAAL,CAAiB,IAAjB,CACA,MAAKC,gBAAL,CAAwB,IAAxB,CAT6B,aAU9B,C,mIAE6B,CAC5B,GAAMC,WAAYC,SAASC,aAAT,CAAuB,KAAvB,CAAlB,CACA,sBAAcF,UAAUG,KAAxB,CAA+B,CAC7BC,SAAU,UADmB,CAE7BC,IAAK,GAFwB,CAG7BC,KAAM,GAHuB,CAI7BC,MAAO,GAJsB,CAK7BC,OAAQ,GALqB,CAM7BC,WAAY,WANiB,CAA/B,EAQA,MAAOT,UAAP,CACD,C,+DAEoB,CAEnB,MAAO,MAAKT,kBAAL,CAAwBmB,OAAxB,CACL,CAAC,CAAEC,UAAW,cAAb,CAAD,CAAgC,CAAEA,UAAW,gBAAb,CAAhC,CADK,CAEL,CACEC,SAAU,GADZ,CAEEC,WAAYC,QAFd,CAGEC,OAAQ,QAHV,CAFK,CAAP,CAQD,C,+CAEY,CACX,GAAK,CAAC,KAAKC,iBAAN,EAA2B,CAAC,KAAKC,UAAlC,EAAiD,KAAKA,UAA1D,CAAsE,CACpE,KAAK1B,kBAAL,CAAwB2B,SAAxB,CAAoC9B,aAApC,CACD,CAFD,IAEO,CACL,KAAKG,kBAAL,CAAwB2B,SAAxB,CAAoC,EAApC,CACD,CAED,GAAI,KAAKD,UAAT,CAAqB,CACnB,KAAKtB,SAAL,CAAewB,IAAf,GACD,CAFD,IAEO,CACL,KAAKxB,SAAL,CAAeyB,KAAf,GACD,CACF,C,gCAESC,K,CAAwB,CAChC,GAAI,MAAOA,MAAP,GAAiB,QAArB,CAA+B,2BACR,oCAAsBA,KAAtB,CADQ,6EACtBC,CADsB,2BACnBC,CADmB,2BAChBC,CADgB,2BACbC,CADa,2BAE7B,GAAMC,qBAAsBH,CAAtB,KAA2BC,CAA3B,KAAgCC,CAAhC,KAAqCH,CAArC,IAAN,CACA,KAAKnB,KAAL,CAAWN,KAAX,CAAmB6B,WAAnB,CACD,CAJD,IAIO,CACL,KAAKvB,KAAL,CAAWN,KAAX,CAAmBwB,KAAnB,CACD,CACF,C,oCAEaA,K,CAAgB,CAC5B,KAAKJ,UAAL,CAAkBI,KAAlB,CACA,KAAKM,UAAL,GACD,C,2CAEoBN,K,CAAgB,CACnC,KAAKL,iBAAL,CAAyBK,KAAzB,CACA,KAAKM,UAAL,GACD,C,mFAGYtC,wB","file":"RCTActivityIndicatorView.js","sourcesContent":["/**\n * @providesModule RCTActivityIndicatorView\n * @flow\n */\nimport RCTView from \"RCTView\";\nimport type RCTBridge from \"RCTBridge\";\nimport CustomElement from \"CustomElement\";\nimport ColorArrayFromHexARGB from \"ColorArrayFromHexARGB\";\n\n// adapted from https://github.com/necolas/react-native-web/blob/master/src/components/ActivityIndicator/index.js\nconst INDICATOR_SVG = `\n<svg height=\"100%\" viewBox=\"0 0 32 32\" width=\"100%\">\n  <circle cx=\"16\" cy=\"16\" fill=\"none\" r=\"14\" stroke-width=\"4\" style=\"stroke: currentColor; opacity: 0.2;\"></circle>\n  <circle cx=\"16\" cy=\"16\" fill=\"none\" r=\"14\" stroke-width=\"4\" style=\"stroke: currentColor; stroke-dasharray: 80px; stroke-dashoffset: 60px;\"></circle>\n</svg>\n`;\n\n@CustomElement(\"rct-activity-indicator-view\")\nclass RCTActivityIndicatorView extends RCTView {\n  // $FlowFixMe - WAAPI not included in FlowType Defs\n  animation: Animation;\n  animationContainer: HTMLElement;\n  _animating: boolean;\n  _hidesWhenStopped: boolean;\n\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n\n    this.animationContainer = this.constructAnimationContainer();\n    this.childContainer.appendChild(this.animationContainer);\n\n    this.animation = this.constructAnimation();\n    this.color = \"rgb(25, 118, 210)\";\n    this.animating = true;\n    this.hidesWhenStopped = true;\n  }\n\n  constructAnimationContainer() {\n    const container = document.createElement(\"div\");\n    Object.assign(container.style, {\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n      willChange: \"transform\"\n    });\n    return container;\n  }\n\n  constructAnimation() {\n    // $FlowFixMe - WAAPI\n    return this.animationContainer.animate(\n      [{ transform: \"rotate(0deg)\" }, { transform: \"rotate(360deg)\" }],\n      {\n        duration: 750,\n        iterations: Infinity,\n        easing: \"linear\"\n      }\n    );\n  }\n\n  updateView() {\n    if ((!this._hidesWhenStopped && !this._animating) || this._animating) {\n      this.animationContainer.innerHTML = INDICATOR_SVG;\n    } else {\n      this.animationContainer.innerHTML = \"\";\n    }\n\n    if (this._animating) {\n      this.animation.play();\n    } else {\n      this.animation.pause();\n    }\n  }\n\n  set color(value: number | string) {\n    if (typeof value === \"number\") {\n      const [a, r, g, b] = ColorArrayFromHexARGB(value);\n      const stringValue = `rgba(${r},${g},${b},${a})`;\n      this.style.color = stringValue;\n    } else {\n      this.style.color = value;\n    }\n  }\n\n  set animating(value: boolean) {\n    this._animating = value;\n    this.updateView();\n  }\n\n  set hidesWhenStopped(value: boolean) {\n    this._hidesWhenStopped = value;\n    this.updateView();\n  }\n}\n\nexport default RCTActivityIndicatorView;\n"]}