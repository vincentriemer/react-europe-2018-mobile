{"version":3,"sources":["../../ReactDom/views/RCTScrollViewManager.js"],"names":["module","exports","RCTViewManager","RCT_EXPORT_VIEW_PROP","RCT_EXPORT_MIRRORED_PROP","RCTScrollViewManager","bridge","view","value","overflow","scrollEventThrottle","reactTag","callbackId","cb","callbackFromId","uiManager","addUIBlock","_","viewRegistry","get","contentView","reactSubviews","width","height","offsetX","offsetY","animated","scrollBehavior","scrollLeft","scrollTop","scrollWidth","scrollHeight","horizontal","scrollEnabled"],"mappings":"ipBAKA,gD,mDAKA,+C,mDACA,8C,2DAGA,iD,qyBAEAA,OAAOC,OAAP,CAAkB,waACVC,cADU,eAGRC,oBAHQ,CAG2CD,cAH3C,CAGRC,oBAHQ,CAGcC,wBAHd,CAG2CF,cAH3C,CAGcE,wBAHd,CAMVC,oBANU,OAKf,iCAAkB,sBAAlB,CALe,OAWbF,qBAAqB,UAArB,CAAiC,QAAjC,CAXa,OAgBbA,qBAAqB,UAArB,CAAiC,qBAAjC,CAhBa,OAmBbA,qBAAqB,mBAArB,CAA0C,qBAA1C,CAnBa,OAsBbA,qBAAqB,iBAArB,CAAwC,qBAAxC,CAtBa,OAyBbA,qBAAqB,uBAArB,CAA8C,qBAA9C,CAzBa,OA4BbA,qBAAqB,qBAArB,CAA4C,qBAA5C,CA5Ba,OA+BbA,qBAAqB,qBAArB,CAA4C,QAA5C,CA/Ba,OAoCb,kEApCa,QA6Db,kEA7Da,QAmFb,kEAnFa,QAoGb,kEApGa,QAyGbA,qBAAqB,YAArB,CAAmC,SAAnC,CAzGa,QA8GbA,qBAAqB,eAArB,CAAsC,SAAtC,CA9Ga,ibAOC,CACb,MAAO,6BAAkB,KAAKG,MAAvB,CAAP,CACD,CATa,gDAYFC,IAZE,CAYmBC,KAZnB,CAYkC,CAC9CD,KAAKE,QAAL,CAAgBD,KAAhB,CACD,CAda,iDAiBA,CAAE,CAjBF,mEAoBS,CAAE,CApBX,+DAuBO,CAAE,CAvBT,2EA0Ba,CAAE,CA1Bf,uEA6BW,CAAE,CA7Bb,sEAgCSD,IAhCT,CAgC8BC,KAhC9B,CAgC6C,CACzDD,KAAKG,mBAAL,CAA2BF,KAA3B,CACD,CAlCa,sDAqCCG,QArCD,CAqCmBC,UArCnB,CAqCuC,CACnD,GAAMC,IAAK,KAAKP,MAAL,CAAYQ,cAAZ,CAA2BF,UAA3B,CAAX,CACA,KAAKN,MAAL,CAAYS,SAAZ,CAAsBC,UAAtB,CACE,SAACC,CAAD,CAAIC,YAAJ,CAA0C,CACxC,GAAMX,MAAOW,aAAaC,GAAb,CAAiBR,QAAjB,CAAb,CACA,wBACEJ,MAAQA,uCADV,uCAEwCI,QAFxC,EAKA,GAAMS,aAAcb,KAAKc,aAAL,CAAmB,CAAnB,CAApB,CACA,wBACED,aAAeA,0DADjB,6EAE8ET,QAF9E,EAKAE,GAAG,CACDS,MAAOF,YAAYE,KADlB,CAEDC,OAAQH,YAAYG,MAFnB,CAAH,EAID,CAlBH,EAoBD,CA3Da,0CA+DZZ,QA/DY,CAgEZa,OAhEY,CAiEZC,OAjEY,CAkEZC,QAlEY,CAmEZ,CACA,KAAKpB,MAAL,CAAYS,SAAZ,CAAsBC,UAAtB,CACE,SAACC,CAAD,CAAIC,YAAJ,CAA0C,CACxC,GAAMX,MAAOW,aAAaC,GAAb,CAAiBR,QAAjB,CAAb,CACA,wBACEJ,MAAQA,uCADV,uCAEwCI,QAFxC,EAKAJ,KAAKoB,cAAL,CAAsBD,SAAW,QAAX,CAAsB,MAA5C,CACAnB,KAAKqB,UAAL,CAAkBJ,OAAlB,CACAjB,KAAKsB,SAAL,CAAiBJ,OAAjB,CACD,CAXH,EAaD,CAjFa,gDAoFFd,QApFE,CAoFgBe,QApFhB,CAoFmC,CAC/C,KAAKpB,MAAL,CAAYS,SAAZ,CAAsBC,UAAtB,CACE,SAACC,CAAD,CAAIC,YAAJ,CAA0C,CACxC,GAAMX,MAAOW,aAAaC,GAAb,CAAiBR,QAAjB,CAAb,CACA,wBACEJ,MAAQA,uCADV,uCAEwCI,QAFxC,EAKAJ,KAAKoB,cAAL,CAAsBD,SAAW,QAAX,CAAsB,MAA5C,CACAnB,KAAKqB,UAAL,CAAkBrB,KAAKuB,WAAvB,CACAvB,KAAKsB,SAAL,CAAiBtB,KAAKwB,YAAtB,CACD,CAXH,EAaD,CAlGa,oEAqGQpB,QArGR,CAqG0B,CAEvC,CAvGa,oDA0GAJ,IA1GA,CA0GqBC,KA1GrB,CA0GsC,CAClDD,KAAKyB,UAAL,CAAkBxB,KAAlB,CACD,CA5Ga,0DA+GGD,IA/GH,CA+GwBC,KA/GxB,CA+GyC,CACrDD,KAAK0B,aAAL,CAAqBzB,KAArB,CACD,CAjHa,kCAMmBN,cANnB,kmEAoHTG,oBApHS,4DAAD,EAAjB","file":"RCTScrollViewManager.js","sourcesContent":["/**\n * @providesModule RCTScrollViewManager\n * @flow\n */\n\nimport RCTBridge, {\n  RCT_EXPORT_MODULE,\n  RCT_EXPORT_METHOD,\n  RCTFunctionTypeNormal\n} from \"RCTBridge\";\nimport invariant from \"Invariant\";\nimport RCTScrollView, { RCTScrollContentView } from \"RCTScrollView\";\nimport type UIView from \"UIView\";\n\nimport _RCTViewManager from \"RCTViewManager\";\n\nmodule.exports = (async () => {\n  const RCTViewManager = await _RCTViewManager;\n\n  const { RCT_EXPORT_VIEW_PROP, RCT_EXPORT_MIRRORED_PROP } = RCTViewManager;\n\n  @RCT_EXPORT_MODULE(\"RCTScrollViewManager\")\n  class RCTScrollViewManager extends RCTViewManager {\n    view(): UIView {\n      return new RCTScrollView(this.bridge);\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"overflow\", \"string\")\n    setOverflow(view: RCTScrollView, value: string) {\n      view.overflow = value;\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"onScroll\", \"RCTDirectEventBlock\")\n    setOnScroll() {}\n\n    @RCT_EXPORT_VIEW_PROP(\"onScrollBeginDrag\", \"RCTDirectEventBlock\")\n    setOnScrollBeginDrag() {}\n\n    @RCT_EXPORT_VIEW_PROP(\"onScrollEndDrag\", \"RCTDirectEventBlock\")\n    setOnScrollEndDrag() {}\n\n    @RCT_EXPORT_VIEW_PROP(\"onMomentumScrollBegin\", \"RCTDirectEventBlock\")\n    setOnMomentumScrollBegin() {}\n\n    @RCT_EXPORT_VIEW_PROP(\"onMomentumScrollEnd\", \"RCTDirectEventBlock\")\n    setOnMomentumScrollEnd() {}\n\n    @RCT_EXPORT_VIEW_PROP(\"scrollEventThrottle\", \"number\")\n    setScrollEventThrottle(view: RCTScrollView, value: number) {\n      view.scrollEventThrottle = value;\n    }\n\n    @RCT_EXPORT_METHOD(RCTFunctionTypeNormal)\n    getContentSize(reactTag: number, callbackId: number) {\n      const cb = this.bridge.callbackFromId(callbackId);\n      this.bridge.uiManager.addUIBlock(\n        (_, viewRegistry: Map<number, UIView>) => {\n          const view = viewRegistry.get(reactTag);\n          invariant(\n            view && view instanceof RCTScrollView,\n            `Cannot find RCTScrollView with tag ${reactTag}`\n          );\n\n          const contentView = view.reactSubviews[0];\n          invariant(\n            contentView && contentView instanceof RCTScrollContentView,\n            `Cannot find coresponding RCTScrollContentView for RCTScrollView with tag ${reactTag}`\n          );\n\n          cb({\n            width: contentView.width,\n            height: contentView.height\n          });\n        }\n      );\n    }\n\n    @RCT_EXPORT_METHOD(RCTFunctionTypeNormal)\n    scrollTo(\n      reactTag: number,\n      offsetX: number,\n      offsetY: number,\n      animated: boolean\n    ) {\n      this.bridge.uiManager.addUIBlock(\n        (_, viewRegistry: Map<number, UIView>) => {\n          const view = viewRegistry.get(reactTag);\n          invariant(\n            view && view instanceof RCTScrollView,\n            `Cannot find RCTScrollView with tag ${reactTag}`\n          );\n\n          view.scrollBehavior = animated ? \"smooth\" : \"auto\";\n          view.scrollLeft = offsetX;\n          view.scrollTop = offsetY;\n        }\n      );\n    }\n\n    @RCT_EXPORT_METHOD(RCTFunctionTypeNormal)\n    scrollToEnd(reactTag: number, animated: boolean) {\n      this.bridge.uiManager.addUIBlock(\n        (_, viewRegistry: Map<number, UIView>) => {\n          const view = viewRegistry.get(reactTag);\n          invariant(\n            view && view instanceof RCTScrollView,\n            `Cannot find RCTScrollView with tag ${reactTag}`\n          );\n\n          view.scrollBehavior = animated ? \"smooth\" : \"auto\";\n          view.scrollLeft = view.scrollWidth;\n          view.scrollTop = view.scrollHeight;\n        }\n      );\n    }\n\n    @RCT_EXPORT_METHOD(RCTFunctionTypeNormal)\n    flashScrollIndicators(reactTag: number) {\n      // no-op\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"horizontal\", \"boolean\")\n    setHorizontal(view: RCTScrollView, value: ?boolean) {\n      view.horizontal = value;\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"scrollEnabled\", \"boolean\")\n    setScrollEnabled(view: RCTScrollView, value: ?boolean) {\n      view.scrollEnabled = value;\n    }\n  }\n\n  return RCTScrollViewManager;\n})();\n"]}