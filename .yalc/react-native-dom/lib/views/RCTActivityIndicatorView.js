Object.defineProperty(exports,"__esModule",{value:true});var _slicedToArray2=require("babel-runtime/helpers/slicedToArray");var _slicedToArray3=_interopRequireDefault(_slicedToArray2);var _extends2=require("babel-runtime/helpers/extends");var _extends3=_interopRequireDefault(_extends2);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _dec,_class;var _RCTView2=require("./RCTView");var _RCTView3=_interopRequireDefault(_RCTView2);var _CustomElement=require("./../utils/CustomElement");var _CustomElement2=_interopRequireDefault(_CustomElement);var _ColorArrayFromHexARGB=require("./../utils/ColorArrayFromHexARGB");var _ColorArrayFromHexARGB2=_interopRequireDefault(_ColorArrayFromHexARGB);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var INDICATOR_SVG="\n<svg height=\"100%\" viewBox=\"0 0 32 32\" width=\"100%\">\n  <circle cx=\"16\" cy=\"16\" fill=\"none\" r=\"14\" stroke-width=\"4\" style=\"stroke: currentColor; opacity: 0.2;\"></circle>\n  <circle cx=\"16\" cy=\"16\" fill=\"none\" r=\"14\" stroke-width=\"4\" style=\"stroke: currentColor; stroke-dasharray: 80px; stroke-dashoffset: 60px;\"></circle>\n</svg>\n";var RCTActivityIndicatorView=(_dec=(0,_CustomElement2.default)("rct-activity-indicator-view"),_dec(_class=function(_RCTView){(0,_inherits3.default)(RCTActivityIndicatorView,_RCTView);function RCTActivityIndicatorView(bridge){(0,_classCallCheck3.default)(this,RCTActivityIndicatorView);var _this=(0,_possibleConstructorReturn3.default)(this,(RCTActivityIndicatorView.__proto__||Object.getPrototypeOf(RCTActivityIndicatorView)).call(this,bridge));_this.animationContainer=_this.constructAnimationContainer();_this.childContainer.appendChild(_this.animationContainer);_this.animation=_this.constructAnimation();_this.color="rgb(25, 118, 210)";_this.animating=true;_this.hidesWhenStopped=true;return _this;}(0,_createClass3.default)(RCTActivityIndicatorView,[{key:"constructAnimationContainer",value:function constructAnimationContainer(){var container=document.createElement("div");(0,_extends3.default)(container.style,{position:"absolute",top:"0",left:"0",right:"0",bottom:"0",willChange:"transform"});return container;}},{key:"constructAnimation",value:function constructAnimation(){return this.animationContainer.animate([{transform:"rotate(0deg)"},{transform:"rotate(360deg)"}],{duration:750,iterations:Infinity,easing:"linear"});}},{key:"updateView",value:function updateView(){if(!this._hidesWhenStopped&&!this._animating||this._animating){this.animationContainer.innerHTML=INDICATOR_SVG;}else{this.animationContainer.innerHTML="";}if(this._animating){this.animation.play();}else{this.animation.pause();}}},{key:"color",set:function set(value){if(typeof value==="number"){var _ColorArrayFromHexARG=(0,_ColorArrayFromHexARGB2.default)(value),_ColorArrayFromHexARG2=(0,_slicedToArray3.default)(_ColorArrayFromHexARG,4),a=_ColorArrayFromHexARG2[0],r=_ColorArrayFromHexARG2[1],g=_ColorArrayFromHexARG2[2],b=_ColorArrayFromHexARG2[3];var stringValue="rgba("+r+","+g+","+b+","+a+")";this.style.color=stringValue;}else{this.style.color=value;}}},{key:"animating",set:function set(value){this._animating=value;this.updateView();}},{key:"hidesWhenStopped",set:function set(value){this._hidesWhenStopped=value;this.updateView();}}]);return RCTActivityIndicatorView;}(_RCTView3.default))||_class);exports.default=RCTActivityIndicatorView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL1JlYWN0RG9tL3ZpZXdzL1JDVEFjdGl2aXR5SW5kaWNhdG9yVmlldy5qcyJdLCJuYW1lcyI6WyJJTkRJQ0FUT1JfU1ZHIiwiUkNUQWN0aXZpdHlJbmRpY2F0b3JWaWV3IiwiYnJpZGdlIiwiYW5pbWF0aW9uQ29udGFpbmVyIiwiY29uc3RydWN0QW5pbWF0aW9uQ29udGFpbmVyIiwiY2hpbGRDb250YWluZXIiLCJhcHBlbmRDaGlsZCIsImFuaW1hdGlvbiIsImNvbnN0cnVjdEFuaW1hdGlvbiIsImNvbG9yIiwiYW5pbWF0aW5nIiwiaGlkZXNXaGVuU3RvcHBlZCIsImNvbnRhaW5lciIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwicG9zaXRpb24iLCJ0b3AiLCJsZWZ0IiwicmlnaHQiLCJib3R0b20iLCJ3aWxsQ2hhbmdlIiwiYW5pbWF0ZSIsInRyYW5zZm9ybSIsImR1cmF0aW9uIiwiaXRlcmF0aW9ucyIsIkluZmluaXR5IiwiZWFzaW5nIiwiX2hpZGVzV2hlblN0b3BwZWQiLCJfYW5pbWF0aW5nIiwiaW5uZXJIVE1MIiwicGxheSIsInBhdXNlIiwidmFsdWUiLCJhIiwiciIsImciLCJiIiwic3RyaW5nVmFsdWUiLCJ1cGRhdGVWaWV3Il0sIm1hcHBpbmdzIjoibTBCQUlBLG1DLGdEQUVBLHVELDJEQUNBLHVFLDhKQUdBLEdBQU1BLDRYQUFOLEMsR0FRTUMseUIsT0FETCw0QkFBYyw2QkFBZCxDLDBGQVFDLGtDQUFZQyxNQUFaLENBQStCLG9OQUN2QkEsTUFEdUIsR0FHN0IsTUFBS0Msa0JBQUwsQ0FBMEIsTUFBS0MsMkJBQUwsRUFBMUIsQ0FDQSxNQUFLQyxjQUFMLENBQW9CQyxXQUFwQixDQUFnQyxNQUFLSCxrQkFBckMsRUFFQSxNQUFLSSxTQUFMLENBQWlCLE1BQUtDLGtCQUFMLEVBQWpCLENBQ0EsTUFBS0MsS0FBTCxDQUFhLG1CQUFiLENBQ0EsTUFBS0MsU0FBTCxDQUFpQixJQUFqQixDQUNBLE1BQUtDLGdCQUFMLENBQXdCLElBQXhCLENBVDZCLGFBVTlCLEMsbUlBRTZCLENBQzVCLEdBQU1DLFdBQVlDLFNBQVNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBbEIsQ0FDQSxzQkFBY0YsVUFBVUcsS0FBeEIsQ0FBK0IsQ0FDN0JDLFNBQVUsVUFEbUIsQ0FFN0JDLElBQUssR0FGd0IsQ0FHN0JDLEtBQU0sR0FIdUIsQ0FJN0JDLE1BQU8sR0FKc0IsQ0FLN0JDLE9BQVEsR0FMcUIsQ0FNN0JDLFdBQVksV0FOaUIsQ0FBL0IsRUFRQSxNQUFPVCxVQUFQLENBQ0QsQywrREFFb0IsQ0FFbkIsTUFBTyxNQUFLVCxrQkFBTCxDQUF3Qm1CLE9BQXhCLENBQ0wsQ0FBQyxDQUFFQyxVQUFXLGNBQWIsQ0FBRCxDQUFnQyxDQUFFQSxVQUFXLGdCQUFiLENBQWhDLENBREssQ0FFTCxDQUNFQyxTQUFVLEdBRFosQ0FFRUMsV0FBWUMsUUFGZCxDQUdFQyxPQUFRLFFBSFYsQ0FGSyxDQUFQLENBUUQsQywrQ0FFWSxDQUNYLEdBQUssQ0FBQyxLQUFLQyxpQkFBTixFQUEyQixDQUFDLEtBQUtDLFVBQWxDLEVBQWlELEtBQUtBLFVBQTFELENBQXNFLENBQ3BFLEtBQUsxQixrQkFBTCxDQUF3QjJCLFNBQXhCLENBQW9DOUIsYUFBcEMsQ0FDRCxDQUZELElBRU8sQ0FDTCxLQUFLRyxrQkFBTCxDQUF3QjJCLFNBQXhCLENBQW9DLEVBQXBDLENBQ0QsQ0FFRCxHQUFJLEtBQUtELFVBQVQsQ0FBcUIsQ0FDbkIsS0FBS3RCLFNBQUwsQ0FBZXdCLElBQWYsR0FDRCxDQUZELElBRU8sQ0FDTCxLQUFLeEIsU0FBTCxDQUFleUIsS0FBZixHQUNELENBQ0YsQyxnQ0FFU0MsSyxDQUF3QixDQUNoQyxHQUFJLE1BQU9BLE1BQVAsR0FBaUIsUUFBckIsQ0FBK0IsMkJBQ1Isb0NBQXNCQSxLQUF0QixDQURRLDZFQUN0QkMsQ0FEc0IsMkJBQ25CQyxDQURtQiwyQkFDaEJDLENBRGdCLDJCQUNiQyxDQURhLDJCQUU3QixHQUFNQyxxQkFBc0JILENBQXRCLEtBQTJCQyxDQUEzQixLQUFnQ0MsQ0FBaEMsS0FBcUNILENBQXJDLElBQU4sQ0FDQSxLQUFLbkIsS0FBTCxDQUFXTixLQUFYLENBQW1CNkIsV0FBbkIsQ0FDRCxDQUpELElBSU8sQ0FDTCxLQUFLdkIsS0FBTCxDQUFXTixLQUFYLENBQW1Cd0IsS0FBbkIsQ0FDRCxDQUNGLEMsb0NBRWFBLEssQ0FBZ0IsQ0FDNUIsS0FBS0osVUFBTCxDQUFrQkksS0FBbEIsQ0FDQSxLQUFLTSxVQUFMLEdBQ0QsQywyQ0FFb0JOLEssQ0FBZ0IsQ0FDbkMsS0FBS0wsaUJBQUwsQ0FBeUJLLEtBQXpCLENBQ0EsS0FBS00sVUFBTCxHQUNELEMsbUZBR1l0Qyx3QiIsImZpbGUiOiJSQ1RBY3Rpdml0eUluZGljYXRvclZpZXcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwcm92aWRlc01vZHVsZSBSQ1RBY3Rpdml0eUluZGljYXRvclZpZXdcbiAqIEBmbG93XG4gKi9cbmltcG9ydCBSQ1RWaWV3IGZyb20gXCJSQ1RWaWV3XCI7XG5pbXBvcnQgdHlwZSBSQ1RCcmlkZ2UgZnJvbSBcIlJDVEJyaWRnZVwiO1xuaW1wb3J0IEN1c3RvbUVsZW1lbnQgZnJvbSBcIkN1c3RvbUVsZW1lbnRcIjtcbmltcG9ydCBDb2xvckFycmF5RnJvbUhleEFSR0IgZnJvbSBcIkNvbG9yQXJyYXlGcm9tSGV4QVJHQlwiO1xuXG4vLyBhZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL25lY29sYXMvcmVhY3QtbmF0aXZlLXdlYi9ibG9iL21hc3Rlci9zcmMvY29tcG9uZW50cy9BY3Rpdml0eUluZGljYXRvci9pbmRleC5qc1xuY29uc3QgSU5ESUNBVE9SX1NWRyA9IGBcbjxzdmcgaGVpZ2h0PVwiMTAwJVwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiB3aWR0aD1cIjEwMCVcIj5cbiAgPGNpcmNsZSBjeD1cIjE2XCIgY3k9XCIxNlwiIGZpbGw9XCJub25lXCIgcj1cIjE0XCIgc3Ryb2tlLXdpZHRoPVwiNFwiIHN0eWxlPVwic3Ryb2tlOiBjdXJyZW50Q29sb3I7IG9wYWNpdHk6IDAuMjtcIj48L2NpcmNsZT5cbiAgPGNpcmNsZSBjeD1cIjE2XCIgY3k9XCIxNlwiIGZpbGw9XCJub25lXCIgcj1cIjE0XCIgc3Ryb2tlLXdpZHRoPVwiNFwiIHN0eWxlPVwic3Ryb2tlOiBjdXJyZW50Q29sb3I7IHN0cm9rZS1kYXNoYXJyYXk6IDgwcHg7IHN0cm9rZS1kYXNob2Zmc2V0OiA2MHB4O1wiPjwvY2lyY2xlPlxuPC9zdmc+XG5gO1xuXG5AQ3VzdG9tRWxlbWVudChcInJjdC1hY3Rpdml0eS1pbmRpY2F0b3Itdmlld1wiKVxuY2xhc3MgUkNUQWN0aXZpdHlJbmRpY2F0b3JWaWV3IGV4dGVuZHMgUkNUVmlldyB7XG4gIC8vICRGbG93Rml4TWUgLSBXQUFQSSBub3QgaW5jbHVkZWQgaW4gRmxvd1R5cGUgRGVmc1xuICBhbmltYXRpb246IEFuaW1hdGlvbjtcbiAgYW5pbWF0aW9uQ29udGFpbmVyOiBIVE1MRWxlbWVudDtcbiAgX2FuaW1hdGluZzogYm9vbGVhbjtcbiAgX2hpZGVzV2hlblN0b3BwZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoYnJpZGdlOiBSQ1RCcmlkZ2UpIHtcbiAgICBzdXBlcihicmlkZ2UpO1xuXG4gICAgdGhpcy5hbmltYXRpb25Db250YWluZXIgPSB0aGlzLmNvbnN0cnVjdEFuaW1hdGlvbkNvbnRhaW5lcigpO1xuICAgIHRoaXMuY2hpbGRDb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5hbmltYXRpb25Db250YWluZXIpO1xuXG4gICAgdGhpcy5hbmltYXRpb24gPSB0aGlzLmNvbnN0cnVjdEFuaW1hdGlvbigpO1xuICAgIHRoaXMuY29sb3IgPSBcInJnYigyNSwgMTE4LCAyMTApXCI7XG4gICAgdGhpcy5hbmltYXRpbmcgPSB0cnVlO1xuICAgIHRoaXMuaGlkZXNXaGVuU3RvcHBlZCA9IHRydWU7XG4gIH1cblxuICBjb25zdHJ1Y3RBbmltYXRpb25Db250YWluZXIoKSB7XG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBPYmplY3QuYXNzaWduKGNvbnRhaW5lci5zdHlsZSwge1xuICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgIHRvcDogXCIwXCIsXG4gICAgICBsZWZ0OiBcIjBcIixcbiAgICAgIHJpZ2h0OiBcIjBcIixcbiAgICAgIGJvdHRvbTogXCIwXCIsXG4gICAgICB3aWxsQ2hhbmdlOiBcInRyYW5zZm9ybVwiXG4gICAgfSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbiAgfVxuXG4gIGNvbnN0cnVjdEFuaW1hdGlvbigpIHtcbiAgICAvLyAkRmxvd0ZpeE1lIC0gV0FBUElcbiAgICByZXR1cm4gdGhpcy5hbmltYXRpb25Db250YWluZXIuYW5pbWF0ZShcbiAgICAgIFt7IHRyYW5zZm9ybTogXCJyb3RhdGUoMGRlZylcIiB9LCB7IHRyYW5zZm9ybTogXCJyb3RhdGUoMzYwZGVnKVwiIH1dLFxuICAgICAge1xuICAgICAgICBkdXJhdGlvbjogNzUwLFxuICAgICAgICBpdGVyYXRpb25zOiBJbmZpbml0eSxcbiAgICAgICAgZWFzaW5nOiBcImxpbmVhclwiXG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gIHVwZGF0ZVZpZXcoKSB7XG4gICAgaWYgKCghdGhpcy5faGlkZXNXaGVuU3RvcHBlZCAmJiAhdGhpcy5fYW5pbWF0aW5nKSB8fCB0aGlzLl9hbmltYXRpbmcpIHtcbiAgICAgIHRoaXMuYW5pbWF0aW9uQ29udGFpbmVyLmlubmVySFRNTCA9IElORElDQVRPUl9TVkc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYW5pbWF0aW9uQ29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2FuaW1hdGluZykge1xuICAgICAgdGhpcy5hbmltYXRpb24ucGxheSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFuaW1hdGlvbi5wYXVzZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldCBjb2xvcih2YWx1ZTogbnVtYmVyIHwgc3RyaW5nKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJudW1iZXJcIikge1xuICAgICAgY29uc3QgW2EsIHIsIGcsIGJdID0gQ29sb3JBcnJheUZyb21IZXhBUkdCKHZhbHVlKTtcbiAgICAgIGNvbnN0IHN0cmluZ1ZhbHVlID0gYHJnYmEoJHtyfSwke2d9LCR7Yn0sJHthfSlgO1xuICAgICAgdGhpcy5zdHlsZS5jb2xvciA9IHN0cmluZ1ZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnN0eWxlLmNvbG9yID0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgc2V0IGFuaW1hdGluZyh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2FuaW1hdGluZyA9IHZhbHVlO1xuICAgIHRoaXMudXBkYXRlVmlldygpO1xuICB9XG5cbiAgc2V0IGhpZGVzV2hlblN0b3BwZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9oaWRlc1doZW5TdG9wcGVkID0gdmFsdWU7XG4gICAgdGhpcy51cGRhdGVWaWV3KCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUkNUQWN0aXZpdHlJbmRpY2F0b3JWaWV3O1xuIl19