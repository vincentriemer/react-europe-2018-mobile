{"version":3,"sources":["../../ReactDom/views/RCTScrollView.js"],"names":["SCROLL_LISTENER_OPTIONS","passiveEvents","passive","SHOULD_CORRECT_SCROLL","navigator","platform","match","RCTScrollEvent","eventName","reactTag","contentOffset","contentInset","contentSize","scrollFrame","zoomScale","coalescingKey","userData","viewTag","scrollViewContentOffset","scrollViewContentInset","scrollViewContentSize","scrollViewFrame","scrollViewZoomScale","newEvent","updatedChildFrames","concat","length","args","body","layoutMeasurement","width","height","RCTScrollContentView","bridge","updateHostStyle","position","display","opacity","contain","willChange","value","superView","reactSuperview","subView","reactSubviews","RCTScrollView","boundsDidChange","handleScroll","e","scrollLeft","scrollTop","x","y","scrollDidChange","top","left","bottom","right","scrollWidth","scrollHeight","shadowView","manager","shadowViewRegistry","get","contentFrame","previousLayout","debouncedOnScrollEnd","isScrolling","handleScrollTick","handleScrollStart","handleScrollEnd","uiManager","hasScrollParent","scrollEventThrottle","cachedChildFrames","_horizontal","_overflow","_scrollEnabled","addWillChange","addEventListener","currentView","reactSuperView","styleUpdate","msOverflowStyle","webkitOverflowScrolling","overflowX","overflowY","touchAction","setAttribute","undefined","removeAttribute","contentView","forEach","subview","idx","newFrame","frame","frameChanged","JSON","stringify","push","index","childFrames","calculateChildFramesData","eventDispatcher","sendEvent","setTimeout","localData","setLocalDataForView","_scrollLastTick","Date","now","eventArgs","scrollEvent","momentumScrollEvent","correctScrollPosition","scrollNudge","endTopPosition","endLeftPosition","shouldEmitScrollEvent","lastTick","eventThrottle","timeSinceLastTick","updateScrollBehavior","scrollBehavior"],"mappings":"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","file":"RCTScrollView.js","sourcesContent":["/**\n * @providesModule RCTScrollView\n * @flow\n */\n\nimport RCTView from \"RCTView\";\nimport UIView from \"UIView\";\nimport type RCTBridge from \"RCTBridge\";\nimport CustomElement from \"CustomElement\";\nimport type { RCTEvent } from \"RCTEventDispatcher\";\nimport detectIt from \"detect-it\";\nimport RCTScrollViewLocalData from \"RCTScrollViewLocalData\";\n\nimport invariant from \"Invariant\";\nimport debounce from \"debounce\";\nimport RCTEventDispatcher, {\n  normalizeInputEventName\n} from \"RCTEventDispatcher\";\n\nconst SCROLL_LISTENER_OPTIONS = detectIt.passiveEvents\n  ? { passive: true }\n  : false;\n\nconst SHOULD_CORRECT_SCROLL = !!navigator.platform.match(/iPhone|iPod|iPad/g);\n\ntype ScrollEventArgs = [\n  number,\n  Position,\n  Inset,\n  Size,\n  Frame,\n  number,\n  number,\n  ?Object\n];\n\n// $FlowFixMe - coalesceWithEvent should be compatible but I think flow has a bug\nclass RCTScrollEvent implements RCTEvent {\n  // interface properties\n  viewTag: number;\n  eventName: string;\n  coalescingKey: number;\n\n  scrollViewContentOffset: Position;\n  scrollViewContentInset: Inset;\n  scrollViewContentSize: Size;\n  scrollViewFrame: Frame;\n  scrollViewZoomScale: number;\n  userData: ?Object;\n\n  constructor(\n    eventName: string,\n    reactTag: number,\n    contentOffset: Position,\n    contentInset: Inset,\n    contentSize: Size,\n    scrollFrame: Frame,\n    zoomScale: number,\n    coalescingKey: number,\n    userData: ?Object\n  ) {\n    this.eventName = eventName;\n    this.viewTag = reactTag;\n    this.scrollViewContentOffset = contentOffset;\n    this.scrollViewContentInset = contentInset;\n    this.scrollViewContentSize = contentSize;\n    this.scrollViewFrame = scrollFrame;\n    this.scrollViewZoomScale = zoomScale;\n    this.userData = userData;\n    this.coalescingKey = coalescingKey;\n  }\n\n  get body() {\n    let body = {\n      contentOffset: {\n        ...this.scrollViewContentOffset\n      },\n      contentInset: {\n        ...this.scrollViewContentInset\n      },\n      contentSize: {\n        ...this.scrollViewContentSize\n      },\n      layoutMeasurement: {\n        width: this.scrollViewFrame.width,\n        height: this.scrollViewFrame.height\n      },\n      zoomScale: this.scrollViewZoomScale\n    };\n\n    const userData = this.userData;\n    if (userData) {\n      body = { ...body, ...userData };\n    }\n\n    return body;\n  }\n\n  canCoalesce(): boolean {\n    return true;\n  }\n\n  coalesceWithEvent(newEvent: RCTScrollEvent): RCTScrollEvent {\n    let updatedChildFrames = [];\n    if (this.userData && this.userData.updatedChildFrames)\n      updatedChildFrames = updatedChildFrames.concat(\n        this.userData.updatedChildFrames\n      );\n    if (newEvent.userData && newEvent.userData.updatedChildFrames)\n      updatedChildFrames = updatedChildFrames.concat(\n        newEvent.userData.updatedChildFrames\n      );\n\n    if (updatedChildFrames.length !== 0) {\n      newEvent.userData = {\n        updatedChildFrames\n      };\n    }\n\n    return newEvent;\n  }\n\n  moduleDotMethod(): string {\n    return \"RCTEventEmitter.receiveEvent\";\n  }\n  arguments(): Array<any> {\n    const args = [\n      this.viewTag,\n      normalizeInputEventName(this.eventName),\n      this.body\n    ];\n    return args;\n  }\n}\n\n@CustomElement(\"rct-scroll-content-view\")\nexport class RCTScrollContentView extends RCTView {\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n    this.updateHostStyle({\n      position: \"relative\",\n      display: \"block\",\n      opacity: \"1\",\n      contain: \"layout style\",\n      // vastly improves scrolling performance (especially on sfarai)\n      willChange: \"transform\"\n    });\n  }\n\n  set frame(value: Frame) {\n    super.frame = value;\n\n    const superView = this.reactSuperview;\n    const subView = this.reactSubviews[0];\n\n    if (\n      subView &&\n      subView instanceof RCTView &&\n      superView &&\n      superView instanceof RCTScrollView\n    ) {\n      superView.boundsDidChange(subView);\n    }\n  }\n\n  get frame(): Frame {\n    return super.frame;\n  }\n}\n\ntype ChildFrame = {\n  index: number,\n  x: number,\n  y: number,\n  width: number,\n  height: number\n};\n\n@CustomElement(\"rct-scroll-view\")\nclass RCTScrollView extends RCTView {\n  bridge: RCTBridge;\n  manager: *;\n\n  isScrolling: boolean;\n  scrollEventThrottle: number;\n  _scrollLastTick: number;\n\n  _horizontal: boolean;\n  _overflow: string;\n  _scrollEnabled: boolean;\n\n  coalescingKey: number;\n  cachedChildFrames: Array<Frame>;\n\n  contentSize: Size = { width: 0, height: 0 };\n\n  constructor(bridge: RCTBridge) {\n    super(bridge);\n\n    this.manager = bridge.uiManager;\n\n    this.updateHostStyle(\"contain\", \"strict\");\n\n    if (!this.hasScrollParent()) {\n      this.updateHostStyle(\"overscrollBehavior\", \"contain\");\n    }\n\n    this.isScrolling = false;\n    this.scrollEventThrottle = 0;\n\n    this.coalescingKey = 0;\n    this.cachedChildFrames = [];\n\n    this._horizontal = false;\n    this._overflow = \"scroll\";\n    this._scrollEnabled = true;\n\n    this.addWillChange(\"transform\");\n\n    this.addEventListener(\"scroll\", this.handleScroll, SCROLL_LISTENER_OPTIONS);\n  }\n\n  hasScrollParent() {\n    let currentView = this;\n    while (currentView.reactSuperview) {\n      if (currentView instanceof RCTScrollView) {\n        return true;\n      }\n      currentView = currentView.reactSuperView;\n    }\n    return false;\n  }\n\n  set scrollEnabled(value: ?boolean) {\n    this._scrollEnabled = !!value;\n    this.updateScrollBehavior();\n  }\n\n  set horizontal(value: ?boolean) {\n    this._horizontal = !!value;\n    this.updateScrollBehavior();\n  }\n\n  set overflow(value: ?string) {\n    if (value != null) {\n      this._overflow = value;\n    } else {\n      this._overflow = \"hidden\";\n    }\n    this.updateScrollBehavior();\n  }\n\n  set scrollBehavior(value: \"auto\" | \"smooth\") {\n    this.updateHostStyle({\n      scrollBehavior: value\n    });\n  }\n\n  updateScrollBehavior() {\n    const styleUpdate = {};\n    if (this._overflow === \"scroll\" && this._scrollEnabled) {\n      styleUpdate.msOverflowStyle = \"-ms-autohiding-scrollbar\";\n      styleUpdate.webkitOverflowScrolling = \"touch\";\n\n      if (this._horizontal) {\n        styleUpdate.overflowX = \"auto\";\n        styleUpdate.overflowY = \"hidden\";\n        styleUpdate.touchAction = \"pan-x\";\n        this.setAttribute(\"touch-action\", \"pan-x\");\n      } else {\n        styleUpdate.overflowX = \"hidden\";\n        styleUpdate.overflowY = \"auto\";\n        styleUpdate.touchAction = \"pan-y\";\n        this.setAttribute(\"touch-action\", \"pan-y\");\n      }\n    } else {\n      styleUpdate.touchAction = undefined;\n      this.removeAttribute(\"touch-action\");\n\n      styleUpdate.msOverflowStyle = \"auto\";\n      styleUpdate.webkitOverflowScrolling = \"\";\n      styleUpdate.willChange = \"\";\n\n      styleUpdate.overflowX = \"hidden\";\n      styleUpdate.overflowY = \"hidden\";\n    }\n\n    this.updateHostStyle(styleUpdate);\n  }\n\n  calculateChildFramesData() {\n    const updatedChildFrames = [];\n\n    const contentView = this.reactSubviews[0];\n    invariant(\n      contentView && contentView instanceof RCTScrollContentView,\n      `RCTScrollView (of ID ${this.reactTag}) has no contentView`\n    );\n\n    contentView.reactSubviews.forEach((subview, idx) => {\n      const newFrame = subview.frame;\n\n      let frameChanged = false;\n      if (this.cachedChildFrames.length <= idx) {\n        frameChanged = true;\n        // this.cachedChildFrames.push(newFrame);\n      } else if (\n        JSON.stringify(newFrame) !== JSON.stringify(this.cachedChildFrames[idx])\n      ) {\n        frameChanged = true;\n        // this.cachedChildFrames[idx] = newFrame;\n      }\n\n      if (frameChanged) {\n        updatedChildFrames.push({\n          index: idx,\n          x: newFrame.left,\n          y: newFrame.top,\n          width: newFrame.width,\n          height: newFrame.height\n        });\n      }\n    });\n\n    return updatedChildFrames;\n  }\n\n  connectedCallback() {\n    if (SHOULD_CORRECT_SCROLL) {\n      if (this._horizontal) {\n        this.scrollLeft = 1;\n      } else {\n        this.scrollTop = 1;\n      }\n    }\n  }\n\n  boundsDidChange(contentView: RCTView) {\n    this.coalescingKey++;\n    const childFrames = this.calculateChildFramesData();\n\n    const contentOffset: Position = {\n      x: this.scrollLeft,\n      y: this.scrollTop\n    };\n\n    const contentInset: Inset = {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n\n    const contentSize = {\n      width: this.scrollWidth,\n      height: this.scrollHeight\n    };\n\n    // const contentFrame = this.manager.measure(this.reactTag);\n    const shadowView = this.manager.shadowViewRegistry.get(this.reactTag);\n    invariant(shadowView, `No ShadowView for tag ${this.reactTag}`);\n    const contentFrame = shadowView.previousLayout;\n    invariant(\n      contentFrame,\n      `ShadowView with tag ${this.reactTag} has not been layed out`\n    );\n\n    this.contentSize = {\n      width: contentFrame.width,\n      height: contentFrame.height\n    };\n\n    const args = [\n      this.reactTag,\n      contentOffset,\n      contentInset,\n      contentSize,\n      contentFrame,\n      1,\n      this.coalescingKey\n    ];\n\n    this.bridge.eventDispatcher.sendEvent(\n      new RCTScrollEvent(\"onScroll\", ...args, {\n        updatedChildFrames: childFrames\n      })\n    );\n  }\n\n  scrollDidChange(x: number, y: number) {\n    setTimeout(() => {\n      const localData = new RCTScrollViewLocalData(x, y);\n      this.bridge.uiManager.setLocalDataForView(localData, this);\n    }, 0);\n  }\n\n  handleScroll = async (e: Event, userData: ?Object) => {\n    this.coalescingKey++;\n\n    const scrollLeft = this.scrollLeft;\n    const scrollTop = this.scrollTop;\n\n    const contentOffset: Position = {\n      x: scrollLeft,\n      y: scrollTop\n    };\n\n    this.scrollDidChange(scrollLeft, scrollTop);\n\n    const contentInset: Inset = {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n\n    const contentSize = {\n      width: this.scrollWidth,\n      height: this.scrollHeight\n    };\n\n    const shadowView = this.manager.shadowViewRegistry.get(this.reactTag);\n    invariant(shadowView, `No ShadowView for tag ${this.reactTag}`);\n    const contentFrame = shadowView.previousLayout;\n    invariant(\n      contentFrame,\n      `ShadowView with tag ${this.reactTag} has not been layed out`\n    );\n\n    const args = [\n      this.reactTag,\n      contentOffset,\n      contentInset,\n      contentSize,\n      contentFrame,\n      1,\n      this.coalescingKey,\n      userData\n    ];\n\n    this.debouncedOnScrollEnd(...args);\n\n    if (this.isScrolling) {\n      this.handleScrollTick(...args);\n    } else {\n      this.handleScrollStart(...args);\n    }\n  };\n\n  debouncedOnScrollEnd = debounce(this.handleScrollEnd, 100);\n\n  handleScrollStart(...eventArgs: ScrollEventArgs) {\n    this.isScrolling = true;\n    this._scrollLastTick = Date.now();\n\n    const scrollEvent = new RCTScrollEvent(\"onScrollBeginDrag\", ...eventArgs);\n    this.bridge.eventDispatcher.sendEvent(scrollEvent);\n  }\n\n  handleScrollEnd(...eventArgs: ScrollEventArgs) {\n    this.isScrolling = false;\n\n    const scrollEvent = new RCTScrollEvent(\"onScrollEndDrag\", ...eventArgs);\n    this.bridge.eventDispatcher.sendEvent(scrollEvent);\n\n    const momentumScrollEvent = new RCTScrollEvent(\n      \"onMomentumScrollEnd\",\n      ...eventArgs\n    );\n    this.bridge.eventDispatcher.sendEvent(momentumScrollEvent);\n\n    this.correctScrollPosition();\n  }\n\n  correctScrollPosition() {\n    const scrollNudge = 1;\n\n    if (SHOULD_CORRECT_SCROLL) {\n      if (!this._horizontal) {\n        const endTopPosition = this.scrollTop + this.contentSize.height;\n        if (this.scrollTop <= 0 && this.scrollTop >= -0.1) {\n          this.scrollTop = scrollNudge;\n        } else if (\n          endTopPosition >= this.scrollHeight &&\n          endTopPosition <= this.scrollHeight + 0.1\n        ) {\n          this.scrollTop = this.scrollTop - scrollNudge;\n        }\n      } else {\n        const endLeftPosition = this.scrollLeft + this.contentSize.width;\n        if (this.scrollLeft <= 0 && this.scrollLeft >= -0.1) {\n          this.scrollLeft = scrollNudge;\n        } else if (\n          endLeftPosition >= this.scrollWidth &&\n          endLeftPosition <= this.scrollWidth + 0.1\n        ) {\n          this.scrollLeft = this.scrollLeft - scrollNudge;\n        }\n      }\n    }\n  }\n\n  handleScrollTick(...eventArgs: ScrollEventArgs) {\n    const shouldEmitScrollEvent = this.shouldEmitScrollEvent(\n      this._scrollLastTick,\n      this.scrollEventThrottle\n    );\n\n    if (shouldEmitScrollEvent) {\n      this._scrollLastTick = Date.now();\n      const scrollEvent = new RCTScrollEvent(\"onScroll\", ...eventArgs);\n      this.bridge.eventDispatcher.sendEvent(scrollEvent);\n    }\n  }\n\n  shouldEmitScrollEvent(lastTick: number, eventThrottle: number): boolean {\n    const timeSinceLastTick = Date.now() - lastTick;\n    return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n  }\n\n  get touchable(): boolean {\n    return super.touchable;\n  }\n\n  set touchable(value: boolean) {\n    // super.touchable = value;\n    this.updateHostStyle(\"cursor\", \"auto\");\n  }\n}\n\nexport default RCTScrollView;\n"]}