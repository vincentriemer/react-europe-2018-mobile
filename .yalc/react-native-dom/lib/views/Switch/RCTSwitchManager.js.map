{"version":3,"sources":["../../../ReactDom/views/Switch/RCTSwitchManager.js"],"names":["module","exports","RCTViewManager","RCT_EXPORT_VIEW_PROP","RCTSwitchManager","bridge","view","value","disabled","onChange","onTintColor","tintColor","thumbTintColor"],"mappings":"ipBAKA,mD,mDAKA,sC,mDAGA,oD,qyBAEAA,OAAOC,OAAP,CAAkB,4VACVC,cADU,eAERC,oBAFQ,CAEiBD,cAFjB,CAERC,oBAFQ,CAKVC,gBALU,OAIf,iCAAkB,kBAAlB,CAJe,OAUbD,qBAAqB,OAArB,CAA8B,SAA9B,CAVa,OAebA,qBAAqB,UAArB,CAAiC,SAAjC,CAfa,OAoBbA,qBAAqB,UAArB,CAAiC,uBAAjC,CApBa,OAyBbA,qBAAqB,aAArB,CAAoC,OAApC,CAzBa,OA8BbA,qBAAqB,WAArB,CAAkC,OAAlC,CA9Ba,OAmCbA,qBAAqB,gBAArB,CAAuC,OAAvC,CAnCa,yZAMC,CACb,MAAO,yBAAc,KAAKE,MAAnB,CAAP,CACD,CARa,0CAWLC,IAXK,CAWYC,KAXZ,CAW4B,CACxCD,KAAKC,KAAL,CAAaA,KAAb,CACD,CAba,4DAgBID,IAhBJ,CAgBqBC,KAhBrB,CAgBqC,CACjDD,KAAKE,QAAL,CAAgBD,KAAhB,CACD,CAlBa,gDAqBFD,IArBE,CAqBeC,KArBf,CAqBgC,CAC5CD,KAAKG,QAAL,CAAgBF,KAAhB,CACD,CAvBa,sDA0BCD,IA1BD,CA0BkBC,KA1BlB,CA0BiC,CAC7CD,KAAKI,WAAL,CAAmBH,KAAnB,CACD,CA5Ba,kDA+BDD,IA/BC,CA+BgBC,KA/BhB,CA+B+B,CAC3CD,KAAKK,SAAL,CAAiBJ,KAAjB,CACD,CAjCa,4DAoCID,IApCJ,CAoCqBC,KApCrB,CAoCoC,CAChDD,KAAKM,cAAL,CAAsBL,KAAtB,CACD,CAtCa,8BAKeL,cALf,q9BAyCTE,gBAzCS,4DAAD,EAAjB","file":"RCTSwitchManager.js","sourcesContent":["/**\n * @providesModule RCTSwitchManager\n * @flow\n */\n\nimport RCTBridge, {\n  RCT_EXPORT_MODULE,\n  RCT_EXPORT_METHOD,\n  RCTFunctionTypeNormal\n} from \"RCTBridge\";\nimport RCTSwitch from \"RCTSwitch\";\nimport type UIView from \"UIView\";\n\nimport _RCTViewManager from \"RCTViewManager\";\n\nmodule.exports = (async () => {\n  const RCTViewManager = await _RCTViewManager;\n  const { RCT_EXPORT_VIEW_PROP } = RCTViewManager;\n\n  @RCT_EXPORT_MODULE(\"RCTSwitchManager\")\n  class RCTSwitchManager extends RCTViewManager {\n    view(): UIView {\n      return new RCTSwitch(this.bridge);\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"value\", \"boolean\")\n    setValue(view: RCTSwitch, value: boolean) {\n      view.value = value;\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"disabled\", \"boolean\")\n    setDisabledSwitch(view: RCTSwitch, value: boolean) {\n      view.disabled = value;\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"onChange\", \"RCTBubblingEventBlock\")\n    setOnChange(view: RCTSwitch, value: Function) {\n      view.onChange = value;\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"onTintColor\", \"color\")\n    setOnTintColor(view: RCTSwitch, value: string) {\n      view.onTintColor = value;\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"tintColor\", \"color\")\n    setTintColor(view: RCTSwitch, value: string) {\n      view.tintColor = value;\n    }\n\n    @RCT_EXPORT_VIEW_PROP(\"thumbTintColor\", \"color\")\n    setThumbTintColor(view: RCTSwitch, value: string) {\n      view.thumbTintColor = value;\n    }\n  }\n\n  return RCTSwitchManager;\n})();\n"]}