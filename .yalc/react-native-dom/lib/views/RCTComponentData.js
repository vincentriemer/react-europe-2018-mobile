Object.defineProperty(exports,"__esModule",{value:true});var _defineProperty2=require("babel-runtime/helpers/defineProperty");var _defineProperty3=_interopRequireDefault(_defineProperty2);var _extends3=require("babel-runtime/helpers/extends");var _extends4=_interopRequireDefault(_extends3);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _Invariant=require("./../utils/Invariant");var _Invariant2=_interopRequireDefault(_Invariant);var _RCTBridge=require("./../bridge/RCTBridge");var _RCTBridge2=_interopRequireDefault(_RCTBridge);var _RCTUIManager=require("./../modules/RCTUIManager");var _RCTUIManager2=_interopRequireDefault(_RCTUIManager);var _UIView=require("./../base/UIView");var _UIView2=_interopRequireDefault(_UIView);var _RCTEventDispatcher=require("./../bridge/RCTEventDispatcher");var _RCTText=require("./Text/RCTText");var _RCTText2=_interopRequireDefault(_RCTText);var _RCTRawText=require("./Text/RCTRawText");var _RCTRawText2=_interopRequireDefault(_RCTRawText);var _RCTTextInput=require("./Text/RCTTextInput");var _RCTTextInput2=_interopRequireDefault(_RCTTextInput);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function moduleNameForClass(cls){var name=cls.__moduleName;if(name!=null){if(name.startsWith("RK")){name="RCT"+name.substring(2);}if(name.endsWith("Manager")){name=name.substring(0,name.length-"Manager".length);}return name;}return"";}var RCTComponentData=function(){function RCTComponentData(managerClass,bridge){(0,_classCallCheck3.default)(this,RCTComponentData);this.bridge=bridge;this.managerClass=managerClass;this.viewPropBlocks={};this.shadowPropBlocks={};this.name=moduleNameForClass(managerClass);}(0,_createClass3.default)(RCTComponentData,[{key:"generatePropConfig",value:function generatePropConfig(rawPropConfig){return rawPropConfig.reduce(function(propConfig,raw){return(0,_extends4.default)({},propConfig,(0,_defineProperty3.default)({},raw.name,{type:raw.type,setter:raw.setter?raw.setter:function(view,value){view[raw.name]=value;}}));},{});}},{key:"createView",value:function createView(tag){var view=this.manager.view();view.reactTag=tag;return view;}},{key:"createShadowView",value:function createShadowView(tag){var shadowView=this.manager.shadowView();shadowView.reactTag=tag;return shadowView;}},{key:"setPropsForView",value:function setPropsForView(props,view){var _this=this;if(props){Object.keys(props).forEach(function(propName){if(_this.propConfig.hasOwnProperty(propName)){var propConfig=_this.propConfig[propName];var propValue=props[propName];var _setter=propConfig.setter;_setter(view,propValue);}});}}},{key:"setPropsForShadowView",value:function setPropsForShadowView(props,shadowView){var _this2=this;if(props){Object.keys(props).forEach(function(propName){if(_this2.shadowPropConfig.hasOwnProperty(propName)){var propConfig=_this2.shadowPropConfig[propName];var propValue=props[propName];var _setter2=propConfig.setter;_setter2(shadowView,propValue);}});}}},{key:"manager",get:function get(){if(this._manager==null){this._manager=this.bridge.moduleForClass(this.managerClass);}(0,_Invariant2.default)(this._manager,"RCTComponentData's view manager must be set");return this._manager;}},{key:"viewConfig",get:function get(){var count=0;var propTypes={};var bubblingEvents=[];var directEvents=[];if(this.manager.customBubblingEventTypes){var events=this.manager.customBubblingEventTypes();for(var _iterator=events,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var event=_ref;bubblingEvents.push((0,_RCTEventDispatcher.normalizeInputEventName)(event));}}this.manager.__props.forEach(function(_ref2){var name=_ref2.name,type=_ref2.type,exported=_ref2.exported;if(exported){if(type==="RCTBubblingEventBlock"){bubblingEvents.push((0,_RCTEventDispatcher.normalizeInputEventName)(name));propTypes[name]="BOOL";}else if(type==="RCTDirectEventBlock"){directEvents.push((0,_RCTEventDispatcher.normalizeInputEventName)(name));propTypes[name]="BOOL";}else{propTypes[name]=type;}}});return{propTypes:propTypes,bubblingEvents:bubblingEvents,directEvents:directEvents,baseModuleName:null};}},{key:"propConfig",get:function get(){if(this._propConfig==null){this._propConfig=this.generatePropConfig(this.manager.__props);}return this._propConfig;}},{key:"shadowPropConfig",get:function get(){if(this._shadowPropConfig==null){this._shadowPropConfig=this.generatePropConfig(this.manager.__shadowProps);}return this._shadowPropConfig;}}]);return RCTComponentData;}();exports.default=RCTComponentData;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,