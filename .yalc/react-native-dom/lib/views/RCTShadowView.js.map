{"version":3,"sources":["../../ReactDom/views/RCTShadowView.js"],"names":["YG","LAYOUT_PROPS","module","exports","propAlias","convertToYogaValue","setEnumProp","bindEnumProps","bindUnitProps","bindNumberProps","bindEdgeProps","instance","propDefs","bindingFunc","forEach","propName","call","EDGES","map","edge","concat","Object","defineProperty","configurable","get","yogaNode","set","value","NaN","Yoga","Constants","unit","enumMap","enumValue","__DEV__","console","warn","input","units","point","auto","parseFloat","endsWith","percent","target","targetProp","sourceProp","require","RCTShadowView","reactSubviews","Node","previousLayout","undefined","measurement","globalX","globalY","currentView","layout","left","top","hasOwnProperty","scrollOffset","reactSuperview","previousPosition","hasNewLayout","layoutChanges","newLayout","getComputedLayout","currentPosition","previousMeasurement","nextMeasurement","width","height","JSON","stringify","push","reactTag","subView","getLayoutChanges","subview","index","splice","insertChild","filter","s","removeChild","purge","free","changedProps","frame","x","y","shadowView","prevLayout","frameContainsPoint","relativePoint","origin","reactTagAtPoint","isDirty","_backgroundColor","prototype","direction","flexDirection","justify","align","position","wrap","overflow","display"],"mappings":"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","file":"RCTShadowView.js","sourcesContent":["/**\n * @providesModule RCTShadowView\n * @flow\n */\n\nimport * as YG from \"yoga-dom\";\nimport invariant from \"Invariant\";\n\nimport type { RCTComponent } from \"RCTComponent\";\n\nconst LAYOUT_PROPS = [\"top\", \"left\", \"width\", \"height\"];\n\nexport type LayoutChange = {\n  reactTag: number,\n  layout: Frame,\n  previousMeasurement: ?Frame,\n  nextMeasurement: Frame\n};\n\nmodule.exports = (async () => {\n  const Yoga: YG.Module = (await require(\"yoga-dom\"): any);\n\n  function propAlias(\n    target: typeof RCTShadowView.prototype,\n    targetProp: string,\n    sourceProp: string\n  ) {\n    Object.defineProperty(target, targetProp, {\n      configurable: true,\n      get() {\n        return this[sourceProp];\n      },\n      set(value: any) {\n        this[sourceProp] = value;\n      }\n    });\n  }\n\n  function convertToYogaValue(\n    input: ?(number | string),\n    units: $PropertyType<YG.Constants, \"unit\">\n  ): YG.Value {\n    if (typeof input === \"number\") {\n      return { value: input, unit: units.point };\n    } else if (input == null) {\n      // TODO: Figure out why this isn't unsetting the value in Yoga\n      // Found it: https://github.com/facebook/yoga/blob/5e3ffb39a2acb05d4fe93d04f5ae4058c047f6b1/yoga/Yoga.h#L28\n      // return { value: NaN, unit: units.undefined };\n      return { value: 0, unit: units.point };\n    } else {\n      if (input === \"auto\") {\n        return { value: NaN, unit: units.auto };\n      } else {\n        return {\n          value: parseFloat(input),\n          unit: input.endsWith(\"%\") ? units.percent : units.point\n        };\n      }\n    }\n  }\n\n  function setEnumProp<T: YG.PropEnumMap>(\n    yogaNode: YG.Node,\n    propName: string,\n    enumMap: T,\n    value: ?string\n  ) {\n    if (value == null) {\n      yogaNode[propName] = NaN;\n    } else {\n      const enumValue = enumMap[value];\n      if (enumValue != null) {\n        yogaNode[propName] = enumValue;\n      } else if (__DEV__) {\n        console.warn(`No such value '${value}' found for prop '${propName}'`);\n      }\n    }\n  }\n\n  function bindEnumProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: [string, YG.PropEnumMap][]\n  ) {\n    propDefs.forEach(([propName, enumMap]) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get: function() {\n          return this.yogaNode[propName];\n        },\n        set: function(value: string) {\n          setEnumProp(this.yogaNode, propName, enumMap, value);\n        }\n      });\n    });\n  }\n\n  function bindUnitProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[]\n  ) {\n    propDefs.forEach((propName) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get: function() {\n          return this.yogaNode[propName];\n        },\n        set: function(value: string | number) {\n          this.yogaNode[propName] = convertToYogaValue(\n            value,\n            Yoga.Constants.unit\n          );\n        }\n      });\n    });\n  }\n\n  function bindNumberProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[]\n  ) {\n    propDefs.forEach((propName) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get: function() {\n          return this.yogaNode[propName];\n        },\n        set: function(value: ?number) {\n          if (value == null) value = NaN;\n          this.yogaNode[propName] = value;\n        }\n      });\n    });\n  }\n\n  const EDGES = [\n    \"Left\",\n    \"Right\",\n    \"Top\",\n    \"Bottom\",\n    \"Start\",\n    \"End\",\n    \"Horizontal\",\n    \"Vertical\"\n  ];\n\n  function bindEdgeProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[],\n    bindingFunc: (\n      instance: typeof RCTShadowView.prototype,\n      propDefs: string[]\n    ) => void\n  ) {\n    propDefs.forEach((propName) => {\n      bindingFunc.call(\n        null,\n        instance,\n        EDGES.map((edge) => `${propName}${edge}`).concat([propName])\n      );\n    });\n  }\n\n  class RCTShadowView implements RCTComponent {\n    _backgroundColor: string;\n    _transform: Array<number>;\n\n    viewName: string;\n\n    yogaNode: Yoga.Node;\n    previousLayout: ?Frame;\n    isNewView: boolean;\n    isHidden: boolean;\n\n    reactTag: number;\n    reactSubviews: Array<RCTShadowView> = [];\n    reactSuperview: ?RCTShadowView;\n\n    measurement: ?Frame;\n\n    width: number;\n    height: number;\n\n    constructor() {\n      this.yogaNode = new Yoga.Node();\n\n      this.previousLayout = undefined;\n      this.measurement = undefined;\n    }\n\n    set localData(value: any) {}\n\n    get hasNewLayout(): boolean {\n      return this.yogaNode.hasNewLayout;\n    }\n\n    get isDirty(): boolean {\n      return this.yogaNode.isDirty();\n    }\n\n    get backgroundColor(): string {\n      return this._backgroundColor;\n    }\n\n    set backgroundColor(value: string) {\n      this._backgroundColor = value;\n    }\n\n    measureGlobal() {\n      let globalX = 0,\n        globalY = 0;\n\n      let currentView = this;\n      while (currentView) {\n        const layout = currentView.previousLayout;\n        if (layout) {\n          globalX += layout.left;\n          globalY += layout.top;\n\n          if (currentView.hasOwnProperty(\"scrollOffset\")) {\n            globalX -= (currentView: any).scrollOffset.left;\n            globalY -= (currentView: any).scrollOffset.top;\n          }\n\n          currentView = currentView.reactSuperview;\n        } else {\n          currentView = null;\n        }\n      }\n\n      return { globalX, globalY };\n    }\n\n    getLayoutChanges(previousPosition: {\n      top: number,\n      left: number\n    }): Array<LayoutChange> {\n      if (!this.yogaNode.hasNewLayout && !!this.previousLayout) return [];\n      this.yogaNode.hasNewLayout = false;\n\n      let layoutChanges = [];\n\n      const newLayout = this.yogaNode.getComputedLayout();\n\n      const currentPosition = {\n        top: previousPosition.top + newLayout.top,\n        left: previousPosition.left + newLayout.left\n      };\n\n      const previousMeasurement = this.measurement\n        ? { ...this.measurement }\n        : null;\n\n      const nextMeasurement = {\n        ...currentPosition,\n        width: newLayout.width,\n        height: newLayout.height\n      };\n\n      if (JSON.stringify(newLayout) !== JSON.stringify(this.previousLayout)) {\n        layoutChanges.push({\n          reactTag: this.reactTag,\n          layout: newLayout,\n          previousMeasurement,\n          nextMeasurement\n        });\n\n        this.previousLayout = newLayout;\n      }\n\n      this.reactSubviews.forEach((subView) => {\n        layoutChanges = layoutChanges.concat(\n          subView.getLayoutChanges(currentPosition)\n        );\n      });\n\n      this.measurement = { ...nextMeasurement };\n      return layoutChanges;\n    }\n\n    insertReactSubviewAtIndex(subview: RCTShadowView, index: number) {\n      subview.reactSuperview = this;\n      this.reactSubviews.splice(index, 0, subview);\n      this.yogaNode.insertChild(subview.yogaNode, index);\n    }\n\n    removeReactSubview(subview: RCTShadowView) {\n      subview.reactSuperview = undefined;\n      this.reactSubviews = this.reactSubviews.filter((s) => s !== subview);\n      this.yogaNode.removeChild(subview.yogaNode);\n    }\n\n    purge() {\n      this.reactSubviews.forEach((subView) => subView.purge());\n      this.yogaNode.free();\n    }\n\n    // TODO: Implement ===========================================\n    didSetProps(changedProps: Array<string>) {}\n    didUpdateReactSubviews() {}\n\n    frameContainsPoint(frame: Frame, point: { x: number, y: number }) {\n      return (\n        frame.left <= point.x &&\n        point.x <= frame.left + frame.width &&\n        frame.top <= point.y &&\n        point.y <= frame.top + frame.height\n      );\n    }\n\n    reactTagAtPoint(point: { x: number, y: number }): number {\n      for (const shadowView of this.reactSubviews) {\n        const prevLayout = shadowView.previousLayout;\n        if (prevLayout && this.frameContainsPoint(prevLayout, point)) {\n          let relativePoint = { ...point };\n          const origin = { x: prevLayout.left, y: prevLayout.top };\n          relativePoint.x -= origin.x;\n          relativePoint.y -= origin.y;\n          return shadowView.reactTagAtPoint(relativePoint);\n        }\n      }\n      return this.reactTag;\n    }\n  }\n\n  bindEnumProps(RCTShadowView.prototype, [\n    [\"direction\", Yoga.Constants.direction],\n    [\"flexDirection\", Yoga.Constants.flexDirection],\n    [\"justifyContent\", Yoga.Constants.justify],\n    [\"alignContent\", Yoga.Constants.align],\n    [\"alignItems\", Yoga.Constants.align],\n    [\"alignSelf\", Yoga.Constants.align],\n    [\"position\", Yoga.Constants.position],\n    [\"flexWrap\", Yoga.Constants.wrap],\n    [\"overflow\", Yoga.Constants.overflow],\n    [\"display\", Yoga.Constants.display]\n  ]);\n  bindUnitProps(RCTShadowView.prototype, [\n    \"width\",\n    \"height\",\n    \"minWidth\",\n    \"minHeight\",\n    \"maxWidth\",\n    \"maxHeight\",\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"start\",\n    \"end\",\n    \"horizontal\",\n    \"vertical\"\n  ]);\n  bindNumberProps(RCTShadowView.prototype, [\n    \"flex\",\n    \"flexGrow\",\n    \"flexShrink\",\n    \"aspectRatio\"\n  ]);\n  bindEdgeProps(RCTShadowView.prototype, [\"margin\", \"padding\"], bindUnitProps);\n  bindEdgeProps(RCTShadowView.prototype, [\"border\"], bindNumberProps);\n\n  [\n    \"borderTop\",\n    \"borderLeft\",\n    \"borderRight\",\n    \"borderBottom\",\n    \"borderStart\",\n    \"borderEnd\"\n  ].forEach((propName) => {\n    propAlias(RCTShadowView.prototype, propName + \"Width\", propName);\n  });\n\n  return RCTShadowView;\n})();\n"]}