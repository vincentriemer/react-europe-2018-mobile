{"version":3,"sources":["../../ReactDom/views/RCTShadowView.js"],"names":["YG","LAYOUT_PROPS","module","exports","propAlias","convertToYogaValue","setEnumProp","bindEnumProps","bindUnitProps","bindNumberProps","bindEdgeProps","instance","propDefs","bindingFunc","forEach","propName","call","EDGES","map","edge","concat","Object","defineProperty","configurable","get","yogaNode","set","value","NaN","makeDirty","Yoga","Constants","unit","enumMap","enumValue","__DEV__","console","warn","input","units","point","auto","parseFloat","endsWith","percent","target","targetProp","sourceProp","require","RCTShadowView","isDirty","reactSubviews","Node","previousLayout","undefined","measurement","globalX","globalY","currentView","layout","left","top","hasOwnProperty","scrollOffset","reactSuperview","previousPosition","layoutChanges","newLayout","getComputedLayout","currentPosition","previousMeasurement","nextMeasurement","width","height","JSON","stringify","push","reactTag","subView","getLayoutChanges","shouldUpdateChildren","result","view","makeDirtyRecursive","subview","index","splice","insertChild","filter","s","removeChild","purge","free","changedProps","_backgroundColor","prototype","direction","flexDirection","justify","align","position","wrap","overflow","display"],"mappings":"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","file":"RCTShadowView.js","sourcesContent":["/**\n * @providesModule RCTShadowView\n * @flow\n */\n\nimport * as YG from \"yoga-dom\";\nimport invariant from \"Invariant\";\n\nimport type { RCTComponent } from \"RCTComponent\";\n\nconst LAYOUT_PROPS = [\"top\", \"left\", \"width\", \"height\"];\n\nexport type LayoutChange = {\n  reactTag: number,\n  layout: Frame,\n  previousMeasurement: ?Frame,\n  nextMeasurement: Frame\n};\n\nmodule.exports = (async () => {\n  const Yoga: YG.Module = (await require(\"yoga-dom\"): any);\n\n  function propAlias(\n    target: typeof RCTShadowView.prototype,\n    targetProp: string,\n    sourceProp: string\n  ) {\n    Object.defineProperty(target, targetProp, {\n      configurable: true,\n      get() {\n        return this[sourceProp];\n      },\n      set(value: any) {\n        this[sourceProp] = value;\n        return true;\n      }\n    });\n  }\n\n  function convertToYogaValue(\n    input: ?(number | string),\n    units: $PropertyType<YG.Constants, \"unit\">\n  ): YG.Value {\n    if (typeof input === \"number\") {\n      return { value: input, unit: units.point };\n    } else if (input == null) {\n      // TODO: Figure out why this isn't unsetting the value in Yoga\n      // return { value: NaN, unit: units.undefined };\n      return { value: 0, unit: units.point };\n    } else {\n      if (input === \"auto\") {\n        return { value: NaN, unit: units.auto };\n      } else {\n        return {\n          value: parseFloat(input),\n          unit: input.endsWith(\"%\") ? units.percent : units.point\n        };\n      }\n    }\n  }\n\n  function setEnumProp<T: YG.PropEnumMap>(\n    yogaNode: YG.Node,\n    propName: string,\n    enumMap: T,\n    value: ?string\n  ) {\n    if (value == null) {\n      yogaNode[propName] = NaN;\n    } else {\n      const enumValue = enumMap[value];\n      if (enumValue != null) {\n        yogaNode[propName] = enumValue;\n      } else if (__DEV__) {\n        console.warn(`No such value '${value}' found for prop '${propName}'`);\n      }\n    }\n  }\n\n  function bindEnumProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: [string, YG.PropEnumMap][]\n  ) {\n    propDefs.forEach(([propName, enumMap]) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get: function() {\n          return this.yogaNode[propName];\n        },\n        set: function(value: string) {\n          setEnumProp(this.yogaNode, propName, enumMap, value);\n          this.makeDirty();\n          return true;\n        }\n      });\n    });\n  }\n\n  function bindUnitProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[]\n  ) {\n    propDefs.forEach((propName) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get: function() {\n          return this.yogaNode[propName];\n        },\n        set: function(value: string | number) {\n          this.yogaNode[propName] = convertToYogaValue(\n            value,\n            Yoga.Constants.unit\n          );\n          this.makeDirty();\n          return true;\n        }\n      });\n    });\n  }\n\n  function bindNumberProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[]\n  ) {\n    propDefs.forEach((propName) => {\n      Object.defineProperty(instance, propName, {\n        configurable: true,\n        get: function() {\n          return this.yogaNode[propName];\n        },\n        set: function(value: ?number) {\n          if (value == null) value = NaN;\n          this.yogaNode[propName] = value;\n          this.makeDirty();\n          return true;\n        }\n      });\n    });\n  }\n\n  const EDGES = [\n    \"Left\",\n    \"Right\",\n    \"Top\",\n    \"Bottom\",\n    \"Start\",\n    \"End\",\n    \"Horizontal\",\n    \"Vertical\"\n  ];\n\n  function bindEdgeProps(\n    instance: typeof RCTShadowView.prototype,\n    propDefs: string[],\n    bindingFunc: (\n      instance: typeof RCTShadowView.prototype,\n      propDefs: string[]\n    ) => void\n  ) {\n    propDefs.forEach((propName) => {\n      bindingFunc.call(\n        null,\n        instance,\n        EDGES.map((edge) => `${propName}${edge}`).concat([propName])\n      );\n    });\n  }\n\n  class RCTShadowView implements RCTComponent {\n    _backgroundColor: string;\n    _transform: Array<number>;\n\n    viewName: string;\n\n    yogaNode: Yoga.Node;\n    previousLayout: ?Frame;\n    isNewView: boolean;\n    isHidden: boolean;\n    isDirty: boolean = true;\n\n    reactTag: number;\n    reactSubviews: Array<RCTShadowView> = [];\n    reactSuperview: ?RCTShadowView;\n\n    measurement: ?Frame;\n\n    constructor() {\n      this.yogaNode = new Yoga.Node();\n\n      this.previousLayout = undefined;\n      this.measurement = undefined;\n    }\n\n    set localData(value: any) {}\n\n    get backgroundColor(): string {\n      return this._backgroundColor;\n    }\n\n    set backgroundColor(value: string) {\n      this._backgroundColor = value;\n    }\n\n    measureGlobal() {\n      let globalX = 0,\n        globalY = 0;\n\n      let currentView = this;\n      while (currentView) {\n        const layout = currentView.previousLayout;\n        if (layout) {\n          globalX += layout.left;\n          globalY += layout.top;\n\n          if (currentView.hasOwnProperty(\"scrollOffset\")) {\n            globalX -= (currentView: any).scrollOffset.left;\n            globalY -= (currentView: any).scrollOffset.top;\n          }\n\n          currentView = currentView.reactSuperview;\n        } else {\n          currentView = null;\n        }\n      }\n\n      return { globalX, globalY };\n    }\n\n    getLayoutChanges(previousPosition: {\n      top: number,\n      left: number\n    }): Array<LayoutChange> {\n      let layoutChanges = [];\n\n      const newLayout = this.yogaNode.getComputedLayout();\n\n      const currentPosition = {\n        top: previousPosition.top + newLayout.top,\n        left: previousPosition.left + newLayout.left\n      };\n\n      const previousMeasurement = this.measurement\n        ? { ...this.measurement }\n        : null;\n\n      const nextMeasurement = {\n        ...currentPosition,\n        width: newLayout.width,\n        height: newLayout.height\n      };\n\n      if (JSON.stringify(newLayout) !== JSON.stringify(this.previousLayout)) {\n        layoutChanges.push({\n          reactTag: this.reactTag,\n          layout: newLayout,\n          previousMeasurement,\n          nextMeasurement\n        });\n\n        this.previousLayout = newLayout;\n\n        this.reactSubviews.forEach((subView) => {\n          layoutChanges = layoutChanges.concat(\n            subView.getLayoutChanges(currentPosition)\n          );\n        });\n      } else {\n        const shouldUpdateChildren: boolean = (() => {\n          let result = false;\n          this.reactSubviews.forEach((subView) => {\n            if (subView.isDirty) {\n              result = true;\n            }\n          });\n          return result;\n        })();\n\n        if (shouldUpdateChildren) {\n          this.reactSubviews.forEach((subView) => {\n            layoutChanges = layoutChanges.concat(\n              subView.getLayoutChanges(currentPosition)\n            );\n          });\n        }\n      }\n\n      this.measurement = { ...nextMeasurement };\n      this.isDirty = false;\n      return layoutChanges;\n    }\n\n    makeDirty(): void {\n      this.isDirty = true;\n\n      let view = this;\n      while (view.reactSuperview) {\n        view = view.reactSuperview;\n        view.isDirty = true;\n      }\n    }\n\n    makeDirtyRecursive(): void {\n      this.reactSubviews.forEach((subView) => {\n        subView.makeDirtyRecursive();\n      });\n      this.isDirty = true;\n    }\n\n    insertReactSubviewAtIndex(subview: RCTShadowView, index: number) {\n      subview.reactSuperview = this;\n      this.reactSubviews.splice(index, 0, subview);\n      this.yogaNode.insertChild(subview.yogaNode, index);\n      this.makeDirty();\n    }\n\n    removeReactSubview(subview: RCTShadowView) {\n      subview.reactSuperview = undefined;\n      this.reactSubviews = this.reactSubviews.filter((s) => s !== subview);\n      this.yogaNode.removeChild(subview.yogaNode);\n      this.makeDirty();\n    }\n\n    purge() {\n      this.reactSubviews.forEach((subView) => subView.purge());\n      this.yogaNode.free();\n    }\n\n    // TODO: Implement ===========================================\n    didSetProps(changedProps: Array<string>) {}\n    didUpdateReactSubviews() {}\n    reactTagAtPoint(point: { x: number, y: number }): number {\n      return 0;\n    }\n  }\n\n  bindEnumProps(RCTShadowView.prototype, [\n    [\"direction\", Yoga.Constants.direction],\n    [\"flexDirection\", Yoga.Constants.flexDirection],\n    [\"justifyContent\", Yoga.Constants.justify],\n    [\"alignContent\", Yoga.Constants.align],\n    [\"alignItems\", Yoga.Constants.align],\n    [\"alignSelf\", Yoga.Constants.align],\n    [\"position\", Yoga.Constants.position],\n    [\"flexWrap\", Yoga.Constants.wrap],\n    [\"overflow\", Yoga.Constants.overflow],\n    [\"display\", Yoga.Constants.display]\n  ]);\n  bindUnitProps(RCTShadowView.prototype, [\n    \"width\",\n    \"height\",\n    \"minWidth\",\n    \"minHeight\",\n    \"maxWidth\",\n    \"maxHeight\",\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"start\",\n    \"end\",\n    \"horizontal\",\n    \"vertical\"\n  ]);\n  bindNumberProps(RCTShadowView.prototype, [\n    \"flex\",\n    \"flexGrow\",\n    \"flexShrink\",\n    \"aspectRatio\"\n  ]);\n  bindEdgeProps(RCTShadowView.prototype, [\"margin\", \"padding\"], bindUnitProps);\n  bindEdgeProps(RCTShadowView.prototype, [\"border\"], bindNumberProps);\n\n  [\n    \"borderTop\",\n    \"borderLeft\",\n    \"borderRight\",\n    \"borderBottom\",\n    \"borderStart\",\n    \"borderEnd\"\n  ].forEach((propName) => {\n    propAlias(RCTShadowView.prototype, propName + \"Width\", propName);\n  });\n\n  return RCTShadowView;\n})();\n"]}