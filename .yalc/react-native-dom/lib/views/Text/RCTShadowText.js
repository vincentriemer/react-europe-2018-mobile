var _regenerator=require("babel-runtime/regenerator");var _regenerator2=_interopRequireDefault(_regenerator);var _extends2=require("babel-runtime/helpers/extends");var _extends3=_interopRequireDefault(_extends2);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _get2=require("babel-runtime/helpers/get");var _get3=_interopRequireDefault(_get2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _this2=this;var _yogaDom=require("yoga-dom");var YG=_interopRequireWildcard(_yogaDom);var _Guid=require("./../../utils/Guid");var _Guid2=_interopRequireDefault(_Guid);var _Invariant=require("./../../utils/Invariant");var _Invariant2=_interopRequireDefault(_Invariant);var _RCTSharedTextValues=require("./RCTSharedTextValues");var _RCTShadowView3=require("./../RCTShadowView");var _RCTShadowView4=_interopRequireDefault(_RCTShadowView3);var _RCTShadowRawText2=require("./RCTShadowRawText");var _RCTShadowRawText3=_interopRequireDefault(_RCTShadowRawText2);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var TEXT_SHADOW_STYLE_PROPS=["fontFamily","fontSize","fontStyle","fontWeight","lineHeight","letterSpacing"];var TEXT_PX_PROPS=["lineHeight"];var textMeasurementContainer=document.createElement("div");textMeasurementContainer.id="text-measurement";document.body&&document.body.appendChild(textMeasurementContainer);module.exports=function _callee(){var _ref,Constants,RCTShadowView,RCTShadowRawText,RCTShadowText;return _regenerator2.default.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regenerator2.default.awrap(YG.default);case 2:_ref=_context.sent;Constants=_ref.Constants;_context.next=6;return _regenerator2.default.awrap(_RCTShadowView4.default);case 6:RCTShadowView=_context.sent;_context.next=9;return _regenerator2.default.awrap(_RCTShadowRawText3.default);case 9:RCTShadowRawText=_context.sent;RCTShadowText=function(_RCTShadowView2){(0,_inherits3.default)(RCTShadowText,_RCTShadowView2);function RCTShadowText(){(0,_classCallCheck3.default)(this,RCTShadowText);var _this=(0,_possibleConstructorReturn3.default)(this,(RCTShadowText.__proto__||Object.getPrototypeOf(RCTShadowText)).call(this));_this.yogaNode.setMeasureFunc(function(width,widthMeasureMode,height,heightMeasureMode){return _this.measure(width,widthMeasureMode,height,heightMeasureMode);});_this.props={};_this.textChildren=[];_this.textDirty=true;_this.numberOfLines=0;TEXT_SHADOW_STYLE_PROPS.forEach(function(shadowPropName){Object.defineProperty(_this,shadowPropName,{configurable:true,get:function get(){return _this.props[shadowPropName];},set:function set(value){if(value!=null){_this.props[shadowPropName]=TEXT_PX_PROPS.includes(shadowPropName)?value+"px":value;}else{_this.props[shadowPropName]=_RCTSharedTextValues.defaults[shadowPropName];}_this.markTextDirty();return true;}});_this[shadowPropName]=null;});return _this;}(0,_createClass3.default)(RCTShadowText,[{key:"markTextDirty",value:function markTextDirty(){this.yogaNode.markDirty();this.textDirty=true;if(this.reactSuperview instanceof RCTShadowText){this.reactSuperview.markTextDirty();}else if(this.reactSuperview instanceof RCTShadowView){this.reactSuperview.makeDirty();}}},{key:"clearTestDomElement",value:function clearTestDomElement(){var testDomElement=this.testDOMElement;while(testDomElement.firstChild){testDomElement.removeChild(testDomElement.firstChild);}}},{key:"measure",value:function measure(width,widthMeasureMode,height,heightMeasureMode){this.clearTestDomElement();var whiteSpace=this.numberOfLines===1?"nowrap":"pre-wrap";if(widthMeasureMode!==Constants.measureMode.exactly||heightMeasureMode!==Constants.measureMode.exactly){if(widthMeasureMode!==Constants.measureMode.undefined){(0,_extends3.default)(this.testDOMElement.style,{maxWidth:width+"px",maxHeight:"auto",whiteSpace:whiteSpace});}else{(0,_extends3.default)(this.testDOMElement.style,{maxWidth:"auto",maxHeight:height+"px",whiteSpace:whiteSpace});}}else{return{width:width||0,height:height||0};}this.testDOMElement.appendChild(this.getTestTree());var _testDOMElement$getBo=this.testDOMElement.getBoundingClientRect(),measuredWidth=_testDOMElement$getBo.width,measuredHeight=_testDOMElement$getBo.height;return{width:Math.ceil(measuredWidth),height:Math.ceil(measuredHeight)};}},{key:"getTestTree",value:function getTestTree(){if(!this.textDirty){(0,_Invariant2.default)(this._testTree,"ShadowText is not marked as dirty but there is no cached testTree");return this._testTree;}var spanWrapper=document.createElement("span");(0,_extends3.default)(spanWrapper.style,this.props);this.textChildren.forEach(function(child){if(child instanceof RCTShadowRawText&&child.text.length){var textLines=child.text.split(/\r?\n/);for(var i=0;i<textLines.length;i++){var currentLine=textLines[i];spanWrapper.insertAdjacentText("beforeend",currentLine);if(i<textLines.length-1){spanWrapper.insertAdjacentElement("beforeend",document.createElement("br"));}}}else if(child instanceof RCTShadowText){spanWrapper.insertAdjacentElement("beforeend",child.getTestTree());}});this._testTree=spanWrapper;this.textDirty=false;return this._testTree;}},{key:"insertReactSubviewAtIndex",value:function insertReactSubviewAtIndex(subview,index){subview.reactSuperview=this;this.textChildren.splice(index,0,subview);this.markTextDirty();}},{key:"removeReactSubview",value:function removeReactSubview(subview){subview.reactSuperview=undefined;this.textChildren=this.textChildren.filter(function(s){return s!==subview;});this.markTextDirty();}},{key:"purge",value:function purge(){(0,_get3.default)(RCTShadowText.prototype.__proto__||Object.getPrototypeOf(RCTShadowText.prototype),"purge",this).call(this);if(this._testDOMElement){this._testDOMElement.parentNode&&this._testDOMElement.parentNode.removeChild(this._testDOMElement);}}},{key:"numberOfLines",get:function get(){return this._numberOfLines;},set:function set(value){this._numberOfLines=value;this.markTextDirty();}},{key:"testDOMElement",get:function get(){if(this._testDOMElement==null){var domElement=document.createElement("div");domElement.id=(0,_Guid2.default)();(0,_extends3.default)(domElement.style,{position:"absolute",visibility:"hidden",maxHeight:"auto",maxWidth:"auto",whiteSpace:"nowrap",display:"inline-block"});textMeasurementContainer.appendChild(domElement);this._testDOMElement=domElement;}return this._testDOMElement;}}]);return RCTShadowText;}(RCTShadowView);return _context.abrupt("return",RCTShadowText);case 12:case"end":return _context.stop();}}},null,_this2);}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,