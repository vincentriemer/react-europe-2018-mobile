Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _dec,_dec2,_dec3,_dec4,_dec5,_dec6,_class,_desc,_value,_class2;var _Invariant=require("./../utils/Invariant");var _Invariant2=_interopRequireDefault(_Invariant);var _RCTBridge=require("./../bridge/RCTBridge");var _RCTBridge2=_interopRequireDefault(_RCTBridge);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _applyDecoratedDescriptor(target,property,decorators,descriptor,context){var desc={};Object['ke'+'ys'](descriptor).forEach(function(key){desc[key]=descriptor[key];});desc.enumerable=!!desc.enumerable;desc.configurable=!!desc.configurable;if('value'in desc||desc.initializer){desc.writable=true;}desc=decorators.slice().reverse().reduce(function(desc,decorator){return decorator(target,property,desc)||desc;},desc);if(context&&desc.initializer!==void 0){desc.value=desc.initializer?desc.initializer.call(context):void 0;desc.initializer=undefined;}if(desc.initializer===void 0){Object['define'+'Property'](target,property,desc);desc=null;}return desc;}var RCTWebSocketModule=(_dec=(0,_RCTBridge.RCT_EXPORT_MODULE)("RCTWebSocketModule"),_dec2=(0,_RCTBridge.RCT_EXPORT_METHOD)(_RCTBridge.RCTFunctionTypeNormal),_dec3=(0,_RCTBridge.RCT_EXPORT_METHOD)(_RCTBridge.RCTFunctionTypeNormal),_dec4=(0,_RCTBridge.RCT_EXPORT_METHOD)(_RCTBridge.RCTFunctionTypeNormal),_dec5=(0,_RCTBridge.RCT_EXPORT_METHOD)(_RCTBridge.RCTFunctionTypeNormal),_dec6=(0,_RCTBridge.RCT_EXPORT_METHOD)(_RCTBridge.RCTFunctionTypeNormal),_dec(_class=(_class2=function(){function RCTWebSocketModule(bridge){(0,_classCallCheck3.default)(this,RCTWebSocketModule);this.bridge=bridge;this.sockets={};}(0,_createClass3.default)(RCTWebSocketModule,[{key:"connect",value:function connect(url,protocols,options,socketId){var _this=this;var socket=protocols?new WebSocket(url,protocols):new WebSocket(url);socket.binaryType="arraybuffer";this.sockets[String(socketId)]=socket;socket.onclose=function(event){var payload={id:socketId,code:event.code,reason:event.reason};_this.bridge.enqueueJSCall("RCTDeviceEventEmitter","emit",["websocketClosed",payload]);};socket.onerror=function(event){var payload={id:socketId,message:"Native WebSocket error"};_this.bridge.enqueueJSCall("RCTDeviceEventEmitter","emit",["websocketFailed",payload]);};socket.onmessage=function(event){var data=event.data;if(data instanceof ArrayBuffer){var arr=new Uint8Array(data);var str=new Array(arr.byteLength);for(var i=0;i<str.length;i++){str[i]=String.fromCharCode(arr[i]);}data=btoa(str.join(""));}var payload={id:socketId,type:typeof event.data==="string"?"string":"binary",data:data};_this.bridge.enqueueJSCall("RCTDeviceEventEmitter","emit",["websocketMessage",payload]);};socket.onopen=function(event){var payload={id:socketId};_this.bridge.enqueueJSCall("RCTDeviceEventEmitter","emit",["websocketOpen",payload]);};}},{key:"_send",value:function _send(data,socketId){var socket=this.sockets[String(socketId)];if(!socket){throw new Error("Error while sending data to WebSocket: no such socket");}socket.send(data);}},{key:"send",value:function send(data,socketId){this._send(data,socketId);}},{key:"sendBinary",value:function sendBinary(data,socketId){var chars=atob(data);var array=new Uint8Array(chars.length);for(var i=0;i<chars.length;i++){array[i]=chars.charCodeAt(i)&255;}this._send(array.buffer,socketId);}},{key:"ping",value:function ping(socketId){throw new Error("Cannot send a ping. Browser WebSocket APIs are not capable of sending specific opcodes");}},{key:"close",value:function close(codeOrId,reason,socketId){var id=void 0;if(typeof reason!=="undefined"&&typeof socketId!=="undefined"){id=String(socketId);var socket=this.sockets[id];if(!socket){return;}socket.close(codeOrId,reason);}else{id=String(codeOrId);var _socket=this.sockets[id];if(!_socket){return;}_socket.close();}delete this.sockets[id];}}]);return RCTWebSocketModule;}(),(_applyDecoratedDescriptor(_class2.prototype,"connect",[_dec2],Object.getOwnPropertyDescriptor(_class2.prototype,"connect"),_class2.prototype),_applyDecoratedDescriptor(_class2.prototype,"send",[_dec3],Object.getOwnPropertyDescriptor(_class2.prototype,"send"),_class2.prototype),_applyDecoratedDescriptor(_class2.prototype,"sendBinary",[_dec4],Object.getOwnPropertyDescriptor(_class2.prototype,"sendBinary"),_class2.prototype),_applyDecoratedDescriptor(_class2.prototype,"ping",[_dec5],Object.getOwnPropertyDescriptor(_class2.prototype,"ping"),_class2.prototype),_applyDecoratedDescriptor(_class2.prototype,"close",[_dec6],Object.getOwnPropertyDescriptor(_class2.prototype,"close"),_class2.prototype)),_class2))||_class);exports.default=RCTWebSocketModule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,