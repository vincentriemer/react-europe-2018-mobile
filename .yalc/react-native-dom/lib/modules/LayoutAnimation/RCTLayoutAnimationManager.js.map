{"version":3,"sources":["../../../ReactDom/modules/LayoutAnimation/RCTLayoutAnimationManager.js"],"names":["MatrixMath","PropertiesEnum","opacity","scaleXY","TypesEnum","spring","linear","easeInEaseOut","easeIn","easeOut","RCTLayoutAnimationManager","manager","reset","config","callback","pendingConfig","pendingCallback","removedNodes","layoutChanges","undefined","changes","concat","tag","push","create","update","del","delete","duration","keyframes","from","to","map","keyframe","propName","existingKeyframes","prevKeyframe","index","newValue","includes","parentKeyframes","parentKeyframe","parentValue","keyLength","layout","Array","fill","translateX","left","translateY","top","scaleX","scaleY","inverseScaleX","inverseScaleY","origin","x","width","y","height","shadowView","registry","updateKeyConfig","newFrames","view","viewRegistry","get","reactTag","reactSubviews","length","forEach","subView","subReactTag","subShadowView","shadowViewRegistry","previousLayout","hasOwnProperty","transformAnimationConfigFactory","createInverseTransformAnimationKeyframes","animations","cleanup","createKeyConfig","deleteKeyConfig","addedNodes","filter","lc","previousMeasurement","layoutChange","nextMeasurement","frame","reactSuperview","createOpacityKeyframes","delay","addWillChange","KeyframeEffect","removeWillChange","prevTop","prevLeft","prevWidth","prevHeight","nextTop","nextLeft","nextWidth","nextHeight","prevTranslateY","nextTranslateY","createTransformAnimationKeyframes","prevTranslateX","nextTranslateX","parentLayout","originalKeyframes","adjustedKeyframes","transform","childContainerTransform","childContainerAnimationConfigFactory","shouldTransformChildren","prevScaleX","nextScaleX","childContainer","nextScaleY","prevScaleY","style","willChange","Object","keys","parseInt","keyframeConfigs","constructTransformKeyframes","layoutStyle","removeReactSubview","purge","transformMatrix","createTranslate2d","multiplyInto","scaleMatrix","createIdentityMatrix","reuseScale3dCommand","join","constructKeyframes","createTransformAnimations","groupEffect","GroupEffect","animation","document","timeline","play","finished","then","c"],"mappings":"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","file":"RCTLayoutAnimationManager.js","sourcesContent":["/**\n * @providesModule RCTLayoutAnimationManager\n * @flow\n */\nimport type { LayoutChange } from \"RCTShadowView\";\nimport type { KeyframeResult } from \"RCTKeyframeGenerator\";\n\nimport invariant from \"Invariant\";\nimport RCTKeyframeGenerator from \"RCTKeyframeGenerator\";\nimport * as MatrixMath from \"MatrixMath\";\n\nimport typeof _RCTUIManager from \"RCTUIManager\";\ntype RCTUIManager = $Call<$await<_RCTUIManager>>;\n\nconst PropertiesEnum = {\n  opacity: true,\n  scaleXY: true\n};\n\nconst TypesEnum = {\n  spring: true,\n  linear: true,\n  easeInEaseOut: true,\n  easeIn: true,\n  easeOut: true\n};\n\nexport type LayoutAnim = {\n  duration?: number,\n  delay?: number,\n  springDamping?: number,\n  initialVelocity?: number,\n  type?: $Enum<typeof TypesEnum>,\n  property?: $Enum<typeof PropertiesEnum>\n};\n\nexport type LayoutAnimationConfig = {\n  duration: number,\n  create: LayoutAnim,\n  update: LayoutAnim,\n  delete: LayoutAnim\n};\n\ntype KeyframeConfig = {\n  create: ?KeyframeResult,\n  update: ?KeyframeResult,\n  delete: ?KeyframeResult\n};\n\ntype TransformKeyframeConfig = {\n  translateX: number,\n  translateY: number,\n  scaleX: number,\n  scaleY: number\n};\n\ntype ChildContainerKeyframeConfig = {\n  scaleX: number,\n  scaleY: number\n};\n\ntype ChildContainerAnimationConfig = ChildContainerKeyframeConfig[];\n\ntype TransformAnimationConfig = [\n  TransformKeyframeConfig[],\n  { duration: number, layout: Frame, origin: Position }\n];\n\ntype TransformAnimationConfigRegistry = {\n  [reactTag: number]: TransformAnimationConfig\n};\n\nclass RCTLayoutAnimationManager {\n  manager: RCTUIManager;\n\n  pendingConfig: ?LayoutAnimationConfig;\n  pendingCallback: ?Function;\n  removedNodes: number[];\n  layoutChanges: LayoutChange[];\n\n  constructor(manager: RCTUIManager) {\n    this.manager = manager;\n    this.reset();\n  }\n\n  configureNext(config: LayoutAnimationConfig, callback: Function) {\n    this.pendingConfig = config;\n    this.pendingCallback = callback;\n  }\n\n  reset() {\n    this.removedNodes = [];\n    this.layoutChanges = [];\n    this.pendingConfig = undefined;\n    this.pendingCallback = undefined;\n  }\n\n  isPending(): boolean {\n    return this.pendingConfig != null;\n  }\n\n  addLayoutChanges(changes: LayoutChange[]) {\n    this.layoutChanges = this.layoutChanges.concat(changes);\n  }\n\n  queueRemovedNode(tag: number) {\n    this.removedNodes.push(tag);\n  }\n\n  constructKeyframes(config: LayoutAnimationConfig) {\n    const { create, update, delete: del, duration } = config;\n\n    const keyframes = {\n      create: RCTKeyframeGenerator(create, duration),\n      update: RCTKeyframeGenerator(update, duration),\n      delete: RCTKeyframeGenerator(del, duration)\n    };\n\n    return keyframes;\n  }\n\n  createOpacityKeyframes(from: number, to: number, keyframes: number[]) {\n    return keyframes.map((keyframe) => ({\n      opacity: `${to + (from - to) * (1 - keyframe)}`\n    }));\n  }\n\n  createTransformAnimationKeyframes(\n    from: number,\n    to: number,\n    keyframes: number[],\n    propName: string,\n    existingKeyframes: any[]\n  ) {\n    return existingKeyframes.map((prevKeyframe, index) => {\n      let newValue;\n\n      if ([\"scaleX\", \"scaleY\"].includes(propName)) {\n        newValue = from + (to - from) * keyframes[index];\n\n        if (newValue <= 0) {\n          newValue = 0.0001;\n        }\n      } else {\n        newValue = from + (to - from) * keyframes[index];\n      }\n\n      return {\n        ...prevKeyframe,\n        [propName]: newValue\n      };\n    });\n  }\n\n  createInverseTransformAnimationKeyframes(\n    propName: string,\n    existingKeyframes: any[],\n    parentKeyframes: any[]\n  ) {\n    return existingKeyframes.map((prevKeyframe, index) => {\n      const parentKeyframe = parentKeyframes[index];\n      let parentValue = parentKeyframe[propName];\n\n      let newValue;\n      if ([\"scaleX\", \"scaleY\"].includes(propName)) {\n        newValue = 1 / parentValue;\n      } else {\n        newValue = -1 * parentValue;\n      }\n\n      return {\n        ...prevKeyframe,\n        [propName]: newValue\n      };\n    });\n  }\n\n  transformAnimationConfigFactory(\n    keyLength: number,\n    duration: number,\n    layout: Frame\n  ): TransformAnimationConfig {\n    return [\n      new Array(keyLength).fill({\n        translateX: layout.left,\n        translateY: layout.top,\n        scaleX: 1.0,\n        scaleY: 1.0,\n        inverseScaleX: 1.0,\n        inverseScaleY: 1.0\n      }),\n      {\n        duration: duration,\n        layout,\n        origin: {\n          x: -1 * layout.width / 2,\n          y: -1 * layout.height / 2\n        }\n      }\n    ];\n  }\n\n  childContainerAnimationConfigFactory(keyLength: number) {\n    return new Array(keyLength).fill({\n      scaleX: 1.0,\n      scaleY: 1.0\n    });\n  }\n\n  applyInverseTransformOnChildren(\n    shadowView: *,\n    registry: TransformAnimationConfigRegistry,\n    updateKeyConfig: KeyframeResult,\n    newFrames: TransformKeyframeConfig[],\n    propName: string\n  ) {\n    const view = this.manager.viewRegistry.get(shadowView.reactTag);\n\n    if (view && view.reactSubviews.length !== 0) {\n      view.reactSubviews.forEach((subView, index) => {\n        const subReactTag = subView.reactTag;\n\n        const subShadowView = this.manager.shadowViewRegistry.get(subReactTag);\n        invariant(subShadowView, \"Shadow View does not exist\");\n\n        const previousLayout = subShadowView.previousLayout;\n        invariant(previousLayout, \"Shadow View has no previous layout\");\n\n        if (!registry.hasOwnProperty(subReactTag)) {\n          registry[subReactTag] = this.transformAnimationConfigFactory(\n            updateKeyConfig.keyframes.length,\n            updateKeyConfig.duration,\n            previousLayout\n          );\n        }\n\n        registry[\n          subReactTag\n        ][0] = this.createInverseTransformAnimationKeyframes(\n          propName,\n          registry[subReactTag][0],\n          newFrames\n        );\n      });\n    }\n  }\n\n  createTransformAnimations(\n    keyframes: KeyframeConfig,\n    config: LayoutAnimationConfig\n  ) {\n    const animations = [];\n    const cleanup = [];\n    const registry: TransformAnimationConfigRegistry = {};\n\n    const {\n      create: createKeyConfig,\n      update: updateKeyConfig,\n      delete: deleteKeyConfig\n    } = keyframes;\n\n    const addedNodes = this.layoutChanges\n      .filter((lc) => !lc.previousMeasurement)\n      .map((lc) => lc.reactTag);\n\n    this.layoutChanges.forEach((layoutChange) => {\n      const {\n        reactTag,\n        layout,\n        nextMeasurement,\n        previousMeasurement\n      } = layoutChange;\n\n      const view = this.manager.viewRegistry.get(reactTag);\n      invariant(view, \"view does not exist\");\n\n      // if there's no previous measurement we can assume the view is created\n      if (!previousMeasurement) {\n        // skip if no creation keyframe config\n        if (createKeyConfig == null) {\n          view.frame = layout;\n          view.opacity = 1;\n          return;\n        }\n\n        // Don't animate children of added views\n        if (\n          view.reactSuperview &&\n          addedNodes.includes(view.reactSuperview.reactTag)\n        ) {\n          view.frame = layout;\n          view.opacity = 1;\n          return;\n        }\n\n        const keyframes = this.createOpacityKeyframes(\n          0,\n          1,\n          createKeyConfig.keyframes\n        );\n\n        const config = {\n          duration: createKeyConfig.duration,\n          delay: createKeyConfig.delay,\n          fill: \"none\"\n        };\n\n        view.frame = layout;\n        view.addWillChange(\"opacity\");\n\n        animations.push(new KeyframeEffect(view, keyframes, config));\n        cleanup.push(() => {\n          view.removeWillChange(\"opacity\");\n        });\n      } else {\n        // skip layout update animation\n        if (updateKeyConfig == null) {\n          view.frame = layout;\n          return;\n        }\n\n        const shadowView = this.manager.shadowViewRegistry.get(reactTag);\n        invariant(\n          shadowView,\n          `shadowView does not exist with tag: ${reactTag}`\n        );\n\n        if (!registry.hasOwnProperty(reactTag)) {\n          registry[reactTag] = this.transformAnimationConfigFactory(\n            updateKeyConfig.keyframes.length,\n            updateKeyConfig.duration,\n            layout\n          );\n        }\n\n        let {\n          top: prevTop,\n          left: prevLeft,\n          width: prevWidth,\n          height: prevHeight\n        } = view.frame;\n\n        let {\n          top: nextTop,\n          left: nextLeft,\n          width: nextWidth,\n          height: nextHeight\n        } = layout;\n\n        if (prevTop !== nextTop) {\n          const prevTranslateY = prevTop;\n          const nextTranslateY = nextTop;\n\n          const newFrames = this.createTransformAnimationKeyframes(\n            prevTranslateY,\n            nextTranslateY,\n            updateKeyConfig.keyframes,\n            \"translateY\",\n            registry[reactTag][0]\n          );\n\n          registry[reactTag][0] = newFrames;\n        }\n\n        if (prevLeft !== nextLeft) {\n          const prevTranslateX = prevLeft;\n          const nextTranslateX = nextLeft;\n\n          const newFrames = this.createTransformAnimationKeyframes(\n            prevTranslateX,\n            nextTranslateX,\n            updateKeyConfig.keyframes,\n            \"translateX\",\n            registry[reactTag][0]\n          );\n\n          registry[reactTag][0] = newFrames;\n        }\n\n        const parentLayout = shadowView.previousLayout;\n        view.reactSubviews.forEach((subView, index) => {\n          if (addedNodes.includes(subView.reactTag)) {\n            const previousLayout =\n              shadowView.reactSubviews[index].previousLayout;\n            const [originalKeyframes, { duration }] = registry[reactTag];\n\n            const adjustedKeyframes = originalKeyframes.map(\n              ({ translateX, translateY }) => ({\n                transform: `translateX(${-translateX +\n                  parentLayout.left +\n                  previousLayout.left}px) translateY(${-translateY +\n                  parentLayout.top +\n                  previousLayout.top}px)`\n              })\n            );\n\n            const config = { duration, fill: \"none\" };\n\n            animations.push(\n              new KeyframeEffect(subView, adjustedKeyframes, config)\n            );\n          }\n        });\n\n        let childContainerTransform = this.childContainerAnimationConfigFactory(\n          updateKeyConfig.keyframes.length\n        );\n        let shouldTransformChildren = false;\n\n        if (prevWidth !== nextWidth && nextWidth !== 0) {\n          const prevScaleX = prevWidth / nextWidth;\n          const nextScaleX = 1.0;\n\n          const newFrames = this.createTransformAnimationKeyframes(\n            prevScaleX,\n            nextScaleX,\n            updateKeyConfig.keyframes,\n            \"scaleX\",\n            registry[reactTag][0]\n          );\n\n          registry[reactTag][0] = newFrames;\n\n          if (view.childContainer) {\n            shouldTransformChildren = true;\n            childContainerTransform = this.createInverseTransformAnimationKeyframes(\n              \"scaleX\",\n              childContainerTransform,\n              newFrames\n            );\n          }\n        }\n\n        if (prevHeight !== nextHeight && nextHeight !== 0) {\n          const nextScaleY = 1.0;\n          const prevScaleY = prevHeight / nextHeight;\n\n          const newFrames = this.createTransformAnimationKeyframes(\n            prevScaleY,\n            nextScaleY,\n            updateKeyConfig.keyframes,\n            \"scaleY\",\n            registry[reactTag][0]\n          );\n\n          registry[reactTag][0] = newFrames;\n\n          if (view.childContainer) {\n            shouldTransformChildren = true;\n            childContainerTransform = this.createInverseTransformAnimationKeyframes(\n              \"scaleY\",\n              childContainerTransform,\n              newFrames\n            );\n          }\n        }\n\n        if (shouldTransformChildren) {\n          const childContainer = view.childContainer;\n          if (childContainer) {\n            const keyframes = childContainerTransform.map(\n              ({ scaleX, scaleY }) => ({\n                transform: `scale(${scaleX},${scaleY})`\n              })\n            );\n            const config = { duration: updateKeyConfig.duration, fill: \"none\" };\n\n            childContainer.style.willChange = \"transform\";\n            animations.push(\n              new KeyframeEffect(childContainer, keyframes, config)\n            );\n            cleanup.push(() => {\n              childContainer.style.willChange = \"\";\n            });\n          }\n        }\n      }\n    });\n\n    Object.keys(registry).forEach((tag) => {\n      const reactTag = parseInt(tag, 10);\n\n      const [keyframeConfigs, { duration, layout, origin }] = registry[\n        reactTag\n      ];\n\n      const view = this.manager.viewRegistry.get(reactTag);\n      invariant(view, \"view does not exist\");\n\n      const keyframes = this.constructTransformKeyframes(\n        keyframeConfigs,\n        origin\n      );\n\n      const layoutStyle = {\n        width: `${layout.width}px`,\n        height: `${layout.height}px`\n      };\n\n      const config = { duration, fill: \"none\" };\n\n      view.addWillChange(\"transform\");\n      view.frame = layout;\n      animations.push(new KeyframeEffect(view, keyframes, config));\n      cleanup.push(() => {\n        view.removeWillChange(\"transform\");\n      });\n    });\n\n    // Animate view removal\n    this.removedNodes.forEach((reactTag) => {\n      const view = this.manager.viewRegistry.get(reactTag);\n      invariant(view, \"view does not exist\");\n\n      if (deleteKeyConfig == null) {\n        if (view.reactSuperview) {\n          view.reactSuperview.removeReactSubview(view);\n        }\n        this.manager.viewRegistry.delete(reactTag);\n        view.purge();\n        return;\n      }\n\n      if (\n        view.reactSuperview &&\n        this.removedNodes.includes(view.reactSuperview.reactTag)\n      ) {\n        if (view.reactSuperview) {\n          view.reactSuperview.removeReactSubview(view);\n        }\n        this.manager.viewRegistry.delete(reactTag);\n        return;\n      }\n\n      const keyframes = this.createOpacityKeyframes(\n        1,\n        0,\n        deleteKeyConfig.keyframes\n      );\n\n      const config = {\n        duration: deleteKeyConfig.duration,\n        delay: deleteKeyConfig.delay,\n        fill: \"forwards\"\n      };\n\n      view.addWillChange(\"opacity\");\n      animations.push(new KeyframeEffect(view, keyframes, config));\n      cleanup.push(() => {\n        if (view.reactSuperview) {\n          view.reactSuperview.removeReactSubview(view);\n        }\n        this.manager.viewRegistry.delete(reactTag);\n        view.purge();\n      });\n    });\n\n    return [animations, cleanup];\n  }\n\n  constructTransformKeyframes(\n    keyframeConfigs: TransformKeyframeConfig[],\n    origin: Position\n  ) {\n    return keyframeConfigs.map((config) => {\n      const { translateX, translateY, scaleX, scaleY } = config;\n\n      // shift transformation origin\n      let transformMatrix = MatrixMath.createTranslate2d(origin.x, origin.y);\n\n      // apply translation\n      MatrixMath.multiplyInto(\n        transformMatrix,\n        transformMatrix,\n        MatrixMath.createTranslate2d(translateX, translateY)\n      );\n\n      // apply scaling\n      const scaleMatrix = MatrixMath.createIdentityMatrix();\n      MatrixMath.reuseScale3dCommand(scaleMatrix, scaleX, scaleY, 1.0);\n      MatrixMath.multiplyInto(transformMatrix, transformMatrix, scaleMatrix);\n\n      // revert transformation origin\n      MatrixMath.multiplyInto(\n        transformMatrix,\n        transformMatrix,\n        MatrixMath.createTranslate2d(-origin.x, -origin.y)\n      );\n\n      return {\n        transform: `matrix3d(${transformMatrix.join(\", \")})`\n      };\n    });\n  }\n\n  applyLayoutChanges() {\n    const pendingConfig = this.pendingConfig;\n    const layoutChanges = this.layoutChanges;\n    const callback = this.pendingCallback;\n\n    invariant(\n      pendingConfig && layoutChanges && callback,\n      \"Attempting to apply a layoutanimation without a pending config.\"\n    );\n\n    const keyframes = this.constructKeyframes(pendingConfig);\n    const [animations, cleanup] = this.createTransformAnimations(\n      keyframes,\n      pendingConfig\n    );\n\n    const groupEffect = new GroupEffect(animations);\n\n    const animation = document.timeline.play(groupEffect);\n    animation.finished.then(() => {\n      cleanup.forEach((c) => c());\n      callback();\n    });\n\n    this.reset();\n  }\n}\n\nexport default RCTLayoutAnimationManager;\n"]}