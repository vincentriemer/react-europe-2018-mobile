{"version":3,"sources":["../../../ReactDom/modules/LayoutAnimation/RTCKeyframeGenerator.js"],"names":["timestepCoefficient","staticEasingFunctions","linear","x","easeIn","easeOut","easeInEaseOut","springFactor","springTimestep","generateStaticKeyframes","ease","duration","delay","numSteps","timestep","keyframes","currentX","i","push","epsilon","maxDamping","minDamping","Number","MIN_VALUE","approximateRoot","func","derivative","initialGuess","times","result","angularFrequency","undampedFrequency","dampingRatio","Math","sqrt","pow","computeDerivedSpringCurveOptions","velocity","mass","max","min","envelope","exponentialDecay","currentDisplacement","a","b","c","exp","d","e","f","g","factor","tension","friction","isNaN","Integrator","accelerationForState","state","dt","evaluateState","evaluateStateWithDerivative","dxdt","dx","dvdt","dv","v","initialState","output","createSpringInterpolator","tolerance","stopSpring","time","value","integrator","finished","next","delta","stateBefore","stateAfter","integrateState","finalVelocity","netFloat","net1DVelocity","netValueIsLow","abs","netVelocityIsLow","generateSpringKeyframes","springDamping","initialVelocity","interpolator","length","generateKeyframes","config","type","resolvedDelay","resolvedDuration","easingFunction"],"mappings":"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","file":"RTCKeyframeGenerator.js","sourcesContent":["/**\n * @providesModule RCTKeyframeGenerator\n * @flow\n */\n\nimport BezierEasing from \"bezier-easing\";\nimport memoize from \"fast-memoize\";\n\nimport invariant from \"Invariant\";\n\nimport type { LayoutAnim } from \"RCTLayoutAnimationManager\";\n\nconst timestepCoefficient = 1;\n\nconst staticEasingFunctions = {\n  linear: (x) => x,\n  easeIn: BezierEasing(0.42, 0, 1, 1),\n  easeOut: BezierEasing(0, 0, 0.58, 1),\n  easeInEaseOut: BezierEasing(0.42, 0, 0.58, 1)\n};\n\nexport type KeyframeResult = {\n  keyframes: number[],\n  duration: number,\n  delay: number\n};\n\nconst springFactor = 0.5;\nconst springTimestep = 16.667 * timestepCoefficient;\n\nfunction generateStaticKeyframes(\n  ease: (x: number) => number,\n  duration: number,\n  delay: number\n): KeyframeResult {\n  const numSteps = duration / springTimestep;\n  const timestep = 1.0 / numSteps;\n\n  const keyframes = [];\n\n  let currentX = 0;\n  for (let i = 0; i < numSteps; i++) {\n    keyframes.push(ease(currentX));\n    currentX += timestep;\n  }\n\n  keyframes.push(1);\n\n  return { keyframes, duration, delay };\n}\n\n// Spring Curve Approximation & Generation adapted from https://github.com/koenbok/Framer\n\nconst epsilon = 0.001;\nconst maxDamping = 1;\nconst minDamping = Number.MIN_VALUE;\n\ntype ApproxFunc = (number) => number;\n\nconst approximateRoot = (\n  func: ApproxFunc,\n  derivative: ApproxFunc,\n  initialGuess: number,\n  times = 24\n) => {\n  let result = initialGuess;\n  for (let i = 0; i < times; i++) {\n    result = result = func(result) / derivative(result);\n  }\n  return result;\n};\n\nconst angularFrequency = (undampedFrequency, dampingRatio) =>\n  undampedFrequency * Math.sqrt(1 - Math.pow(dampingRatio, 2));\n\nfunction computeDerivedSpringCurveOptions(\n  dampingRatio: number,\n  duration: number,\n  velocity: number = 0,\n  mass: number = 1\n) {\n  dampingRatio = Math.max(Math.min(dampingRatio, maxDamping), minDamping);\n\n  let envelope: (number) => number;\n  let derivative: (number) => number;\n  if (dampingRatio < 1) {\n    envelope = (undampedFrequency: number) => {\n      const exponentialDecay = undampedFrequency * dampingRatio;\n      const currentDisplacement = exponentialDecay * duration;\n      const a = exponentialDecay - velocity;\n      const b = angularFrequency(undampedFrequency, dampingRatio);\n      const c = Math.exp(-currentDisplacement);\n      return epsilon - a / b * c;\n    };\n    derivative = (undampedFrequency: number) => {\n      const exponentialDecay = undampedFrequency * dampingRatio;\n      const currentDisplacement = exponentialDecay * duration;\n      const d = currentDisplacement * velocity + velocity;\n      const e =\n        Math.pow(dampingRatio, 2) * Math.pow(undampedFrequency, 2) * duration;\n      const f = Math.exp(-currentDisplacement);\n      const g = angularFrequency(Math.pow(undampedFrequency, 2), dampingRatio);\n      const factor = -envelope(undampedFrequency) + epsilon > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    envelope = (undampedFrequency: number) => {\n      const a = Math.exp(-undampedFrequency * duration);\n      const b = (undampedFrequency - velocity) * duration + 1;\n      return -epsilon + a * b;\n    };\n    derivative = (undampedFrequency: number) => {\n      const a = Math.exp(-undampedFrequency * duration);\n      const b = (velocity - undampedFrequency) * Math.pow(duration, 2);\n      return a * b;\n    };\n  }\n\n  const result = {\n    tension: 100,\n    friction: 10,\n    velocity\n  };\n\n  const initialGuess = 5 / duration;\n  const undampedFrequency = approximateRoot(envelope, derivative, initialGuess);\n  if (!isNaN(undampedFrequency)) {\n    result.tension = Math.pow(undampedFrequency, 2) * mass;\n    result.friction = dampingRatio * 2 * Math.sqrt(mass * result.tension);\n  }\n\n  return result;\n}\n\nclass Integrator {\n  accelerationForState: ({ x: number, v: number }) => number;\n\n  constructor(accelerationForState: *) {\n    this.accelerationForState = accelerationForState;\n  }\n\n  integrateState(state: { x: number, v: number }, dt: number) {\n    const a = this.evaluateState(state);\n    const b = this.evaluateStateWithDerivative(state, dt * 0.5, a);\n    const c = this.evaluateStateWithDerivative(state, dt * 0.5, b);\n    const d = this.evaluateStateWithDerivative(state, dt, c);\n\n    const dxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx);\n    const dvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);\n\n    state.x = state.x + dxdt * dt;\n    state.v = state.v + dvdt * dt;\n\n    return state;\n  }\n\n  evaluateState(initialState: { x: number, v: number }) {\n    return {\n      dx: initialState.v,\n      dv: this.accelerationForState(initialState)\n    };\n  }\n\n  evaluateStateWithDerivative(initialState, dt, derivative) {\n    const state = {};\n    state.x = initialState.x + derivative.dx * dt;\n    state.v = initialState.v + derivative.dv * dt;\n\n    const output = {};\n    output.dx = state.v;\n    output.dv = this.accelerationForState(state);\n\n    return output;\n  }\n}\n\nfunction createSpringInterpolator(\n  tension: number,\n  friction: number,\n  velocity: number,\n  tolerance: number = 1 / 1000\n) {\n  let stopSpring = false;\n  let time = 0;\n  let value = 0;\n  const integrator = new Integrator(\n    (state: *) => -tension * state.x - friction * state.v\n  );\n\n  const finished = () => stopSpring;\n\n  return {\n    finished,\n    next: (delta: number) => {\n      if (finished()) {\n        return 1;\n      }\n\n      time += delta;\n\n      const stateBefore = {\n        x: value - 1,\n        v: velocity\n      };\n\n      const stateAfter = integrator.integrateState(stateBefore, delta);\n      value = 1 + stateAfter.x;\n      const finalVelocity = stateAfter.v;\n      const netFloat = stateAfter.x;\n      const net1DVelocity = stateAfter.v;\n\n      // See if we reached the end state\n      const netValueIsLow = Math.abs(netFloat) < tolerance;\n      const netVelocityIsLow = Math.abs(net1DVelocity) < tolerance;\n\n      stopSpring = netValueIsLow && netValueIsLow;\n      velocity = finalVelocity;\n\n      return value;\n    }\n  };\n}\n\nfunction generateSpringKeyframes(\n  springDamping: number = springFactor,\n  initialVelocity: number = 0,\n  duration: number,\n  delay: number\n): KeyframeResult {\n  const numSteps = duration / springTimestep;\n\n  const { friction, tension, velocity } = computeDerivedSpringCurveOptions(\n    springDamping,\n    duration / 6000,\n    initialVelocity\n  );\n\n  const interpolator = createSpringInterpolator(tension, friction, velocity);\n\n  const keyframes = [];\n  while (!interpolator.finished()) {\n    keyframes.push(interpolator.next(1 / 60));\n  }\n\n  keyframes.push(1);\n\n  return { keyframes, duration: keyframes.length * springTimestep, delay };\n}\n\nconst generateKeyframes: (\n  config: LayoutAnim,\n  duration: number\n) => ?KeyframeResult = memoize((config: LayoutAnim = {}, duration: number) => {\n  const {\n    type = \"easeInEaseOut\",\n    springDamping,\n    initialVelocity,\n    delay\n  } = config;\n\n  const resolvedDelay = delay != null ? delay : 0;\n\n  const resolvedDuration = config.duration != null ? config.duration : duration;\n\n  if (resolvedDuration === 0) {\n    return null;\n  }\n\n  if (type && type !== \"spring\") {\n    const easingFunction = staticEasingFunctions[type];\n\n    return generateStaticKeyframes(\n      easingFunction,\n      resolvedDuration,\n      resolvedDelay\n    );\n  }\n\n  if (type && type === \"spring\" && springDamping) {\n    return generateSpringKeyframes(\n      springDamping,\n      initialVelocity,\n      resolvedDuration,\n      resolvedDelay\n    );\n  }\n\n  invariant(false, \"Invalid layoutAnimation configuration provided\");\n});\n\nexport default generateKeyframes;\n"]}