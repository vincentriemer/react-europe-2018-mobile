{"version":3,"sources":["../../ReactDom/modules/RCTLinkingManager.js"],"names":["initialURL","location","href","RCTLinkingManager","url","resolveId","rejectId","window","URL","toString","bridge","callbackFromId"],"mappings":"ooBAKA,gD,mDAKA,mD,uyBAEA,GAAMA,YAAaC,SAASC,IAA5B,C,GAGMC,kB,OADL,iCAAkB,mBAAlB,C,OAIE,mE,OAMA,mE,OAKA,mE,oaAVOC,G,CAAaC,S,CAAmBC,Q,CAAkB,CACxDC,OAAON,QAAP,CAAkB,GAAIO,IAAJ,CAAQJ,GAAR,CAAaG,OAAON,QAApB,EAA8BQ,QAA9B,EAAlB,CACA,KAAKC,MAAL,CAAYC,cAAZ,CAA2BN,SAA3B,EAAsC,IAAtC,EACD,C,8CAGUD,G,CAAaC,S,CAAmBC,Q,CAAkB,CAC3D,KAAKI,MAAL,CAAYC,cAAZ,CAA2BN,SAA3B,EAAsC,IAAtC,EACD,C,oDAGaA,S,CAAmBC,Q,CAAkB,CACjD,KAAKI,MAAL,CAAYC,cAAZ,CAA2BN,SAA3B,EAAsCL,UAAtC,EACD,C,2hBAGYG,iB","file":"RCTLinkingManager.js","sourcesContent":["/**\n * @providesModule RCTLinkingManager\n * @flow\n */\n\nimport RCTBridge, {\n  RCT_EXPORT_MODULE,\n  RCT_EXPORT_METHOD,\n  RCTFunctionTypePromise\n} from \"RCTBridge\";\nimport RCTEventEmitter from \"RCTNativeEventEmitter\";\n\nconst initialURL = location.href;\n\n@RCT_EXPORT_MODULE(\"RCTLinkingManager\")\nclass RCTLinkingManager extends RCTEventEmitter {\n  // TODO: URL Events\n\n  @RCT_EXPORT_METHOD(RCTFunctionTypePromise)\n  openURL(url: string, resolveId: number, rejectId: number) {\n    window.location = new URL(url, window.location).toString();\n    this.bridge.callbackFromId(resolveId)(true);\n  }\n\n  @RCT_EXPORT_METHOD(RCTFunctionTypePromise)\n  canOpenURL(url: string, resolveId: number, rejectId: number) {\n    this.bridge.callbackFromId(resolveId)(true);\n  }\n\n  @RCT_EXPORT_METHOD(RCTFunctionTypePromise)\n  getInitialURL(resolveId: number, rejectId: number) {\n    this.bridge.callbackFromId(resolveId)(initialURL);\n  }\n}\n\nexport default RCTLinkingManager;\n"]}