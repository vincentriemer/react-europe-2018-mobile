{"version":3,"sources":["../../ReactDom/modules/RCTDeviceEventManager.js"],"names":["RCTDeviceEventManager","bridge","shouldBlockHistory","dispatcher","eventDispatcher","setupBackHandler","history","pushState","window","onpopstate","sendDeviceEvent","go"],"mappings":"wXAKA,gD,6xBASqBA,sB,OADpB,iCAAkB,uBAAlB,C,OAyBE,kE,iCApBD,+BAAYC,MAAZ,CAA+B,+DAF/BC,kBAE+B,CAFV,IAEU,CAC7B,KAAKC,UAAL,CAAkBF,OAAOG,eAAzB,CACA,KAAKC,gBAAL,GACD,C,0GAEkB,gBACjB,GAAI,MAAOC,SAAQC,SAAf,GAA6B,UAAjC,CAA6C,CAE3CD,QAAQC,SAAR,CAAkB,aAAlB,CAAiC,IAAjC,CAAuC,IAAvC,EAEAC,OAAOC,UAAP,CAAoB,UAAM,CACxB,GAAI,MAAKP,kBAAT,CAA6B,CAE3BI,QAAQC,SAAR,CAAkB,aAAlB,CAAiC,IAAjC,CAAuC,IAAvC,EACA,MAAKJ,UAAL,CAAgBO,eAAhB,CAAgC,mBAAhC,EACD,CACF,CAND,CAOD,CACF,C,qFAG+B,CAC9B,KAAKR,kBAAL,CAA0B,KAA1B,CACAM,OAAOF,OAAP,CAAeK,EAAf,CAAkB,CAAC,CAAnB,EACD,C,oQA5BkBX,qB","file":"RCTDeviceEventManager.js","sourcesContent":["/**\n * @providesModule RCTDeviceEventManager\n * @flow\n */\n\nimport RCTBridge, {\n  RCT_EXPORT_MODULE,\n  RCT_EXPORT_METHOD,\n  RCTFunctionTypeNormal\n} from \"RCTBridge\";\n\nimport type RCTEventDispatcher from \"RCTEventDispatcher\";\n\n@RCT_EXPORT_MODULE(\"RCTDeviceEventManager\")\nexport default class RCTDeviceEventManager {\n  dispatcher: RCTEventDispatcher;\n  shouldBlockHistory = true;\n\n  constructor(bridge: RCTBridge) {\n    this.dispatcher = bridge.eventDispatcher;\n    this.setupBackHandler();\n  }\n\n  setupBackHandler() {\n    if (typeof history.pushState === \"function\") {\n      // $FlowFixMe\n      history.pushState(\"BackHandler\", null, null);\n\n      window.onpopstate = () => {\n        if (this.shouldBlockHistory) {\n          // $FlowFixMe\n          history.pushState(\"BackHandler\", null, null);\n          this.dispatcher.sendDeviceEvent(\"hardwareBackPress\");\n        }\n      };\n    }\n  }\n\n  @RCT_EXPORT_METHOD(RCTFunctionTypeNormal)\n  invokeDefaultBackPressHandler() {\n    this.shouldBlockHistory = false;\n    window.history.go(-2);\n  }\n}\n"]}