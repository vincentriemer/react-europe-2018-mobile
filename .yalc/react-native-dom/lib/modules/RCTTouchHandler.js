Object.defineProperty(exports,"__esModule",{value:true});var _extends2=require("babel-runtime/helpers/extends");var _extends3=_interopRequireDefault(_extends2);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _detectIt=require("detect-it");var _detectIt2=_interopRequireDefault(_detectIt);var _Invariant=require("./../utils/Invariant");var _Invariant2=_interopRequireDefault(_Invariant);var _UIView=require("./../base/UIView");var _UIView2=_interopRequireDefault(_UIView);var _RCTEventDispatcher=require("./../bridge/RCTEventDispatcher");var _RCTEventDispatcher2=_interopRequireDefault(_RCTEventDispatcher);var _RCTTouchEvent=require("./RCTTouchEvent");var _RCTTouchEvent2=_interopRequireDefault(_RCTTouchEvent);var _Guid=require("./../utils/Guid");var _Guid2=_interopRequireDefault(_Guid);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var mouseTouchCounter=1;var TOUCH_LISTENER_OPTIONS=_detectIt2.default.passiveEvents?{passive:true,capture:false}:false;var RCTTouchHandler=function(){function RCTTouchHandler(bridge){var _this=this;(0,_classCallCheck3.default)(this,RCTTouchHandler);this.mouseClickBegan=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesBegan(touches);var view=_this.view;if(view){view.addEventListener("mouseup",_this.mouseClickEnded);view.addEventListener("mousemove",_this.mouseClickMoved);}};this.mouseClickMoved=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesMoved(touches);};this.mouseClickEnded=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesEnded(touches);var view=_this.view;if(view){view.removeEventListener("mouseup",_this.mouseClickEnded);view.removeEventListener("mousemove",_this.mouseClickMoved);}};this.nativeTouchBegan=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesBegan(touches);var view=_this.view;if(view){window.addEventListener("touchend",_this.nativeTouchEnded,TOUCH_LISTENER_OPTIONS);window.addEventListener("touchmove",_this.nativeTouchMoved,TOUCH_LISTENER_OPTIONS);window.addEventListener("touchcancel",_this.nativeTouchCanceled,TOUCH_LISTENER_OPTIONS);}return true;};this.nativeTouchMoved=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesMoved(touches);return true;};this.nativeTouchEnded=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesEnded(touches);var view=_this.view;if(view){_this.removeTouchEvents(view);}return true;};this.nativeTouchCanceled=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesCanceled(touches);var view=_this.view;if(view){_this.removeTouchEvents(view);}return true;};this.eventDispatcher=bridge.moduleForClass(_RCTEventDispatcher2.default);this.nativeTouches=[];this.nativeTouchesByIdentifier={};this.reactTouches=[];this.touchViews=[];}(0,_createClass3.default)(RCTTouchHandler,[{key:"attachToView",value:function attachToView(view){this.view=view;view.addGestureRecognizer(this,_detectIt2.default.deviceType,TOUCH_LISTENER_OPTIONS);}},{key:"detachFromView",value:function detachFromView(view){this.view=undefined;view.removeGestureRecognizer(this);}},{key:"recordNewTouches",value:function recordNewTouches(touches){var _this2=this;touches.forEach(function(touch){(0,_Invariant2.default)(!_this2.nativeTouchesByIdentifier.hasOwnProperty(touch.identifier),"Touch is already recorded. This is a critical bug");var targetView=touch.view;while(targetView){if(targetView===_this2.view)break;if(targetView.reactTag&&targetView.touchable)break;targetView=targetView.parentElement;}var reactTag=targetView.reactTag;var touchID=touch.identifier;var reactTouch={target:reactTag,identifier:touchID};_this2.touchViews.push(targetView);_this2.nativeTouches.push(touch);_this2.nativeTouchesByIdentifier[touchID]=touch;_this2.reactTouches.push(reactTouch);});}},{key:"recordRemovedTouches",value:function recordRemovedTouches(touches){for(var _iterator=touches,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var touch=_ref;var nativeTouch=this.nativeTouchesByIdentifier[touch.identifier];if(!nativeTouch){continue;}var index=this.nativeTouches.indexOf(nativeTouch);this.touchViews.splice(index,1);this.nativeTouches.splice(index,1);delete this.nativeTouchesByIdentifier[touch.identifier];this.reactTouches.splice(index,1);}}},{key:"updateReactTouch",value:function updateReactTouch(touchIndex,newTouch){var reactTouch=this.reactTouches[touchIndex];var updatedReactTouch=(0,_extends3.default)({},reactTouch,{pageX:newTouch.pageX,pageY:newTouch.pageY,locationX:newTouch.locationX,locationY:newTouch.locationY,timestamp:newTouch.timestamp});this.reactTouches[touchIndex]=updatedReactTouch;}},{key:"updateAndDispatchTouches",value:function updateAndDispatchTouches(touches,eventName){var changedIndexes=[];for(var _iterator2=touches,_isArray2=Array.isArray(_iterator2),_i2=0,_iterator2=_isArray2?_iterator2:_iterator2[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref2;if(_isArray2){if(_i2>=_iterator2.length)break;_ref2=_iterator2[_i2++];}else{_i2=_iterator2.next();if(_i2.done)break;_ref2=_i2.value;}var touch=_ref2;var nativeTouch=this.nativeTouchesByIdentifier[touch.identifier];if(!nativeTouch){console.log("updateAndDispatch failed");continue;}var index=this.nativeTouches.indexOf(nativeTouch);if(index===-1)continue;this.updateReactTouch(index,touch);changedIndexes.push(index);}if(changedIndexes.length===0){console.log("no changed Indexes");return;}var reactTouches=this.reactTouches.map(function(reactTouch){return(0,_extends3.default)({},reactTouch);});var canBeCoalesced=eventName==="touchMove";if(!canBeCoalesced){this.coalescingKey++;}(0,_Invariant2.default)(this.view,"attempting to send event to unknown view");var event=new _RCTTouchEvent2.default(eventName,this.view.reactTag,reactTouches,changedIndexes,this.coalescingKey);if(!canBeCoalesced){this.coalescingKey++;}this.eventDispatcher.sendEvent(event);}},{key:"removeTouchEvents",value:function removeTouchEvents(view){window.removeEventListener("touchend",this.nativeTouchEnded,TOUCH_LISTENER_OPTIONS);window.removeEventListener("touchmove",this.nativeTouchMoved,TOUCH_LISTENER_OPTIONS);window.removeEventListener("touchcancel",this.nativeTouchCanceled,TOUCH_LISTENER_OPTIONS);}},{key:"touchesBegan",value:function touchesBegan(touches){this.recordNewTouches(touches);this.updateAndDispatchTouches(touches,"touchStart");}},{key:"touchesMoved",value:function touchesMoved(touches){this.updateAndDispatchTouches(touches,"touchMove");}},{key:"touchesEnded",value:function touchesEnded(touches){this.updateAndDispatchTouches(touches,"touchEnd");this.recordRemovedTouches(touches);}},{key:"touchesCanceled",value:function touchesCanceled(touches){console.log("touches canceled");this.updateAndDispatchTouches(touches,"touchCancel");this.recordRemovedTouches(touches);}}],[{key:"RCTNormalizeInteractionEvent",value:function RCTNormalizeInteractionEvent(rawEvent){if(rawEvent instanceof MouseEvent){var _target=rawEvent.target;(0,_Invariant2.default)(_target instanceof _UIView2.default||_target instanceof _UIView.UIChildContainerView,"Cannot normalize interaction event on object which does not inherit from UIView");if("which"in rawEvent&&rawEvent.which===3){return null;}else if("button"in rawEvent&&rawEvent.button===2){return null;}return[{view:_target,identifier:0,pageX:rawEvent.pageX,pageY:rawEvent.pageY,locationX:rawEvent.clientX,locationY:rawEvent.clientY,timestamp:performance.now()}];}else if(rawEvent.changedTouches){var rawTouches=rawEvent.changedTouches;var resultingTouchList=[];for(var i=0;i<rawTouches.length;i++){var rawTouch=rawTouches[i];var _target2=rawTouch.target;(0,_Invariant2.default)(_target2 instanceof _UIView2.default||_target2 instanceof _UIView.UIChildContainerView,"Cannot normalize interaction event on object which does not inherit from UIView");var rect=_target2.getBoundingClientRect();resultingTouchList.push({view:_target2,identifier:rawTouch.identifier%20,pageX:rawTouch.clientX,pageY:rawTouch.clientY,locationX:rawTouch.pageX-rect.left,locationY:rawTouch.pageY-rect.top,timestamp:performance.now()});}return resultingTouchList;}console.error(rawEvent);throw new Error("Invalid Event");}}]);return RCTTouchHandler;}();exports.default=RCTTouchHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,