Object.defineProperty(exports,"__esModule",{value:true});var _extends2=require("babel-runtime/helpers/extends");var _extends3=_interopRequireDefault(_extends2);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _detectIt=require("detect-it");var _detectIt2=_interopRequireDefault(_detectIt);var _Invariant=require("./../utils/Invariant");var _Invariant2=_interopRequireDefault(_Invariant);var _UIView=require("./../base/UIView");var _UIView2=_interopRequireDefault(_UIView);var _RCTEventDispatcher=require("./../bridge/RCTEventDispatcher");var _RCTEventDispatcher2=_interopRequireDefault(_RCTEventDispatcher);var _RCTTouchEvent=require("./RCTTouchEvent");var _RCTTouchEvent2=_interopRequireDefault(_RCTTouchEvent);var _Guid=require("./../utils/Guid");var _Guid2=_interopRequireDefault(_Guid);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var mouseTouchCounter=1;var TOUCH_LISTENER_OPTIONS=_detectIt2.default.passiveEvents?{passive:true,capture:false}:false;function getFirstParentUIView(target){while(target.parentElement){if(target instanceof _UIView2.default||target instanceof _UIView.UIChildContainerView){return target;}target=target.parentElement;}return target;}var RCTTouchHandler=function(){function RCTTouchHandler(bridge){var _this=this;(0,_classCallCheck3.default)(this,RCTTouchHandler);this.pointerBegan=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesBegan(touches);var view=_this.view;if(view){view.addEventListener("pointerup",_this.pointerEnded,TOUCH_LISTENER_OPTIONS);view.addEventListener("pointermove",_this.pointerMoved,TOUCH_LISTENER_OPTIONS);view.addEventListener("pointercancel",_this.pointerCancelled,TOUCH_LISTENER_OPTIONS);}};this.pointerMoved=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesMoved(touches);};this.pointerEnded=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesEnded(touches);var view=_this.view;if(view){_this.removePointerEvents(view);}};this.pointerCancelled=function(event){var touches=RCTTouchHandler.RCTNormalizeInteractionEvent(event);if(!touches)return;_this.touchesCanceled(touches);var view=_this.view;if(view){_this.removePointerEvents(view);}};this.eventDispatcher=bridge.moduleForClass(_RCTEventDispatcher2.default);this.nativeTouches=[];this.nativeTouchesByIdentifier={};this.reactTouches=[];this.touchViews=[];}(0,_createClass3.default)(RCTTouchHandler,[{key:"attachToView",value:function attachToView(view){this.view=view;view.addGestureRecognizer(this,_detectIt2.default.deviceType,TOUCH_LISTENER_OPTIONS);}},{key:"detachFromView",value:function detachFromView(view){this.view=undefined;view.removeGestureRecognizer(this);}},{key:"recordNewTouches",value:function recordNewTouches(touches){var _this2=this;touches.forEach(function(touch){(0,_Invariant2.default)(!_this2.nativeTouchesByIdentifier.hasOwnProperty(touch.identifier),"Touch is already recorded. This is a critical bug");var targetView=touch.view;while(targetView){if(targetView===_this2.view)break;if(targetView.reactTag&&targetView.touchable)break;targetView=targetView.parentElement;}var reactTag=targetView.reactTag;var touchID=touch.identifier;var reactTouch={target:reactTag,identifier:touchID};_this2.touchViews.push(targetView);_this2.nativeTouches.push(touch);_this2.nativeTouchesByIdentifier[touchID]=touch;_this2.reactTouches.push(reactTouch);});}},{key:"recordRemovedTouches",value:function recordRemovedTouches(touches){for(var _iterator=touches,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var touch=_ref;var nativeTouch=this.nativeTouchesByIdentifier[touch.identifier];if(!nativeTouch){continue;}var index=this.nativeTouches.indexOf(nativeTouch);this.touchViews.splice(index,1);this.nativeTouches.splice(index,1);delete this.nativeTouchesByIdentifier[touch.identifier];this.reactTouches.splice(index,1);}}},{key:"updateReactTouch",value:function updateReactTouch(touchIndex,newTouch){var reactTouch=this.reactTouches[touchIndex];var updatedReactTouch=(0,_extends3.default)({},reactTouch,{pageX:newTouch.pageX,pageY:newTouch.pageY,locationX:newTouch.locationX,locationY:newTouch.locationY,timestamp:newTouch.timestamp});this.reactTouches[touchIndex]=updatedReactTouch;}},{key:"updateAndDispatchTouches",value:function updateAndDispatchTouches(touches,eventName){var changedIndexes=[];for(var _iterator2=touches,_isArray2=Array.isArray(_iterator2),_i2=0,_iterator2=_isArray2?_iterator2:_iterator2[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref2;if(_isArray2){if(_i2>=_iterator2.length)break;_ref2=_iterator2[_i2++];}else{_i2=_iterator2.next();if(_i2.done)break;_ref2=_i2.value;}var touch=_ref2;var nativeTouch=this.nativeTouchesByIdentifier[touch.identifier];if(!nativeTouch){console.log("updateAndDispatch failed");continue;}var index=this.nativeTouches.indexOf(nativeTouch);if(index===-1)continue;this.updateReactTouch(index,touch);changedIndexes.push(index);}if(changedIndexes.length===0){console.log("no changed Indexes");return;}var reactTouches=this.reactTouches.map(function(reactTouch){return(0,_extends3.default)({},reactTouch);});var canBeCoalesced=eventName==="touchMove";if(!canBeCoalesced){this.coalescingKey++;}(0,_Invariant2.default)(this.view,"attempting to send event to unknown view");var event=new _RCTTouchEvent2.default(eventName,this.view.reactTag,reactTouches,changedIndexes,this.coalescingKey);if(!canBeCoalesced){this.coalescingKey++;}this.eventDispatcher.sendEvent(event);}},{key:"removePointerEvents",value:function removePointerEvents(view){view.removeEventListener("pointerup",this.pointerEnded,TOUCH_LISTENER_OPTIONS);view.removeEventListener("pointermove",this.pointerMoved,TOUCH_LISTENER_OPTIONS);view.removeEventListener("pointercancel",this.pointerCancelled,TOUCH_LISTENER_OPTIONS);}},{key:"touchesBegan",value:function touchesBegan(touches){this.recordNewTouches(touches);this.updateAndDispatchTouches(touches,"touchStart");}},{key:"touchesMoved",value:function touchesMoved(touches){this.updateAndDispatchTouches(touches,"touchMove");}},{key:"touchesEnded",value:function touchesEnded(touches){this.updateAndDispatchTouches(touches,"touchEnd");this.recordRemovedTouches(touches);}},{key:"touchesCanceled",value:function touchesCanceled(touches){this.updateAndDispatchTouches(touches,"touchCancel");this.recordRemovedTouches(touches);}}],[{key:"RCTNormalizeInteractionEvent",value:function RCTNormalizeInteractionEvent(rawEvent){var target=getFirstParentUIView(rawEvent.target);if("which"in rawEvent&&rawEvent.which===3){return null;}else if("button"in rawEvent&&rawEvent.button===2){return null;}return[{view:target,identifier:0,pageX:rawEvent.pageX,pageY:rawEvent.pageY,locationX:rawEvent.clientX,locationY:rawEvent.clientY,timestamp:performance.now()}];}}]);return RCTTouchHandler;}();exports.default=RCTTouchHandler;
//# sourceMappingURL=RCTTouchHandler.js.map