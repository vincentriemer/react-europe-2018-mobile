Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _RCTAnimationDriver=require("./RCTAnimationDriver");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var RCTDecayAnimation=function(){function RCTDecayAnimation(animationId,config,valueNode,callback){(0,_classCallCheck3.default)(this,RCTDecayAnimation);this.animationId=animationId;this.fromValue=0;this.lastValue=0;this.valueNode=valueNode;this.callback=callback;this.velocity=config.velocity;this.deceleration=config.deceleration;this.iterations=config.iterations!=null?config.iterations:1;this.currentLoop=1;this.animationHasFinished=this.iterations===0;return this;}(0,_createClass3.default)(RCTDecayAnimation,[{key:"startAnimation",value:function startAnimation(){this.frameStartTime=-1;this.animationHasBegun=true;}},{key:"stopAnimation",value:function stopAnimation(){if(this.callback){this.callback({finished:this.animationHasFinished});}}},{key:"stepAnimationWithTime",value:function stepAnimationWithTime(currentTime){var valueNode=this.valueNode;if(valueNode==null||!this.animationHasBegun||this.animationHasFinished){return;}if(this.frameStartTime===-1){this.frameStartTime=currentTime-_RCTAnimationDriver.RCTSingleFrameInterval;if(this.fromValue===this.lastValue){this.fromValue=valueNode.value;}else{this.updateValue(this.fromValue);}this.lastValue=valueNode.value;}var value=this.fromValue+this.velocity/(1-this.deceleration)*(1-Math.exp(-(1-this.deceleration)*(currentTime-this.frameStartTime)));this.updateValue(value);if(Math.abs(this.lastValue-value)<0.1){if(this.iterations===-1||this.currentLoop<this.iterations){this.frameStartTime=-1;this.currentLoop++;}else{this.animationHasFinished=true;return;}}this.lastValue=value;}},{key:"updateValue",value:function updateValue(outputValue){var valueNode=this.valueNode;if(valueNode){valueNode.value=outputValue;valueNode.setNeedsUpdate();}}}]);return RCTDecayAnimation;}();exports.default=RCTDecayAnimation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL1JlYWN0RG9tL21vZHVsZXMvTmF0aXZlQW5pbWF0aW9uL0RyaXZlcnMvUkNURGVjYXlBbmltYXRpb24uanMiXSwibmFtZXMiOlsiUkNURGVjYXlBbmltYXRpb24iLCJhbmltYXRpb25JZCIsImNvbmZpZyIsInZhbHVlTm9kZSIsImNhbGxiYWNrIiwiZnJvbVZhbHVlIiwibGFzdFZhbHVlIiwidmVsb2NpdHkiLCJkZWNlbGVyYXRpb24iLCJpdGVyYXRpb25zIiwiY3VycmVudExvb3AiLCJhbmltYXRpb25IYXNGaW5pc2hlZCIsImZyYW1lU3RhcnRUaW1lIiwiYW5pbWF0aW9uSGFzQmVndW4iLCJmaW5pc2hlZCIsImN1cnJlbnRUaW1lIiwidmFsdWUiLCJ1cGRhdGVWYWx1ZSIsIk1hdGgiLCJleHAiLCJhYnMiLCJvdXRwdXRWYWx1ZSIsInNldE5lZWRzVXBkYXRlIl0sIm1hcHBpbmdzIjoibVRBU0Esd0Qsc0ZBRU1BLGtCLFlBZUosMkJBQ0VDLFdBREYsQ0FFRUMsTUFGRixDQUdFQyxTQUhGLENBSUVDLFFBSkYsQ0FLRSxzREFDQSxLQUFLSCxXQUFMLENBQW1CQSxXQUFuQixDQUNBLEtBQUtJLFNBQUwsQ0FBaUIsQ0FBakIsQ0FDQSxLQUFLQyxTQUFMLENBQWlCLENBQWpCLENBQ0EsS0FBS0gsU0FBTCxDQUFpQkEsU0FBakIsQ0FDQSxLQUFLQyxRQUFMLENBQWdCQSxRQUFoQixDQUNBLEtBQUtHLFFBQUwsQ0FBZ0JMLE9BQU9LLFFBQXZCLENBQ0EsS0FBS0MsWUFBTCxDQUFvQk4sT0FBT00sWUFBM0IsQ0FDQSxLQUFLQyxVQUFMLENBQWtCUCxPQUFPTyxVQUFQLEVBQXFCLElBQXJCLENBQTRCUCxPQUFPTyxVQUFuQyxDQUFnRCxDQUFsRSxDQUNBLEtBQUtDLFdBQUwsQ0FBbUIsQ0FBbkIsQ0FDQSxLQUFLQyxvQkFBTCxDQUE0QixLQUFLRixVQUFMLEdBQW9CLENBQWhELENBQ0EsTUFBTyxLQUFQLENBQ0QsQyxrR0FFZ0IsQ0FDZixLQUFLRyxjQUFMLENBQXNCLENBQUMsQ0FBdkIsQ0FDQSxLQUFLQyxpQkFBTCxDQUF5QixJQUF6QixDQUNELEMscURBRWUsQ0FFZCxHQUFJLEtBQUtULFFBQVQsQ0FBbUIsQ0FDakIsS0FBS0EsUUFBTCxDQUFjLENBQ1pVLFNBQVUsS0FBS0gsb0JBREgsQ0FBZCxFQUdELENBQ0YsQyxvRUFFcUJJLFcsQ0FBcUIsQ0FDekMsR0FBTVosV0FBWSxLQUFLQSxTQUF2QixDQUVBLEdBQ0VBLFdBQWEsSUFBYixFQUNBLENBQUMsS0FBS1UsaUJBRE4sRUFFQSxLQUFLRixvQkFIUCxDQUlFLENBRUEsT0FDRCxDQUVELEdBQUksS0FBS0MsY0FBTCxHQUF3QixDQUFDLENBQTdCLENBQWdDLENBRTlCLEtBQUtBLGNBQUwsQ0FBc0JHLHNEQUF0QixDQUVBLEdBQUksS0FBS1YsU0FBTCxHQUFtQixLQUFLQyxTQUE1QixDQUF1QyxDQUVyQyxLQUFLRCxTQUFMLENBQWlCRixVQUFVYSxLQUEzQixDQUNELENBSEQsSUFHTyxDQUVMLEtBQUtDLFdBQUwsQ0FBaUIsS0FBS1osU0FBdEIsRUFDRCxDQUNELEtBQUtDLFNBQUwsQ0FBaUJILFVBQVVhLEtBQTNCLENBQ0QsQ0FFRCxHQUFNQSxPQUNKLEtBQUtYLFNBQUwsQ0FDQSxLQUFLRSxRQUFMLEVBQ0csRUFBSSxLQUFLQyxZQURaLEdBRUcsRUFDQ1UsS0FBS0MsR0FBTCxDQUNFLEVBQUUsRUFBSSxLQUFLWCxZQUFYLEdBQTRCTyxZQUFjLEtBQUtILGNBQS9DLENBREYsQ0FISixDQUZGLENBU0EsS0FBS0ssV0FBTCxDQUFpQkQsS0FBakIsRUFFQSxHQUFJRSxLQUFLRSxHQUFMLENBQVMsS0FBS2QsU0FBTCxDQUFpQlUsS0FBMUIsRUFBbUMsR0FBdkMsQ0FBNEMsQ0FDMUMsR0FBSSxLQUFLUCxVQUFMLEdBQW9CLENBQUMsQ0FBckIsRUFBMEIsS0FBS0MsV0FBTCxDQUFtQixLQUFLRCxVQUF0RCxDQUFrRSxDQUNoRSxLQUFLRyxjQUFMLENBQXNCLENBQUMsQ0FBdkIsQ0FDQSxLQUFLRixXQUFMLEdBQ0QsQ0FIRCxJQUdPLENBQ0wsS0FBS0Msb0JBQUwsQ0FBNEIsSUFBNUIsQ0FDQSxPQUNELENBQ0YsQ0FFRCxLQUFLTCxTQUFMLENBQWlCVSxLQUFqQixDQUNELEMsZ0RBRVdLLFcsQ0FBcUIsQ0FDL0IsR0FBTWxCLFdBQVksS0FBS0EsU0FBdkIsQ0FDQSxHQUFJQSxTQUFKLENBQWUsQ0FDYkEsVUFBVWEsS0FBVixDQUFrQkssV0FBbEIsQ0FDQWxCLFVBQVVtQixjQUFWLEdBQ0QsQ0FDRixDLGlEQUdZdEIsaUIiLCJmaWxlIjoiUkNURGVjYXlBbmltYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwcm92aWRlc01vZHVsZSBSQ1REZWNheUFuaW1hdGlvblxuICogQGZsb3dcbiAqL1xuXG5pbXBvcnQgdHlwZSB7IENvbmZpZyB9IGZyb20gXCJSQ1ROYXRpdmVBbmltYXRlZE1vZHVsZVwiO1xuaW1wb3J0IHR5cGUgeyBSQ1RBbmltYXRpb25Ecml2ZXIgfSBmcm9tIFwiUkNUQW5pbWF0aW9uRHJpdmVyXCI7XG5pbXBvcnQgdHlwZSBSQ1RWYWx1ZUFuaW1hdGVkTm9kZSBmcm9tIFwiUkNUVmFsdWVBbmltYXRlZE5vZGVcIjtcblxuaW1wb3J0IHsgUkNUU2luZ2xlRnJhbWVJbnRlcnZhbCB9IGZyb20gXCJSQ1RBbmltYXRpb25Ecml2ZXJcIjtcblxuY2xhc3MgUkNURGVjYXlBbmltYXRpb24gaW1wbGVtZW50cyBSQ1RBbmltYXRpb25Ecml2ZXIge1xuICBhbmltYXRpb25JZDogbnVtYmVyO1xuICB2YWx1ZU5vZGU6IFJDVFZhbHVlQW5pbWF0ZWROb2RlO1xuICBhbmltYXRpb25IYXNCZWd1bjogYm9vbGVhbjtcbiAgYW5pbWF0aW9uSGFzRmluaXNoZWQ6IGJvb2xlYW47XG5cbiAgdmVsb2NpdHk6IG51bWJlcjtcbiAgZGVjZWxlcmF0aW9uOiBudW1iZXI7XG4gIGZyYW1lU3RhcnRUaW1lOiBudW1iZXI7XG4gIGZyb21WYWx1ZTogbnVtYmVyO1xuICBsYXN0VmFsdWU6IG51bWJlcjtcbiAgaXRlcmF0aW9uczogbnVtYmVyO1xuICBjdXJyZW50TG9vcDogbnVtYmVyO1xuICBjYWxsYmFjazogRnVuY3Rpb247XG5cbiAgY29uc3RydWN0b3IoXG4gICAgYW5pbWF0aW9uSWQ6IG51bWJlcixcbiAgICBjb25maWc6IENvbmZpZyxcbiAgICB2YWx1ZU5vZGU6IFJDVFZhbHVlQW5pbWF0ZWROb2RlLFxuICAgIGNhbGxiYWNrOiBGdW5jdGlvblxuICApIHtcbiAgICB0aGlzLmFuaW1hdGlvbklkID0gYW5pbWF0aW9uSWQ7XG4gICAgdGhpcy5mcm9tVmFsdWUgPSAwO1xuICAgIHRoaXMubGFzdFZhbHVlID0gMDtcbiAgICB0aGlzLnZhbHVlTm9kZSA9IHZhbHVlTm9kZTtcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgdGhpcy52ZWxvY2l0eSA9IGNvbmZpZy52ZWxvY2l0eTtcbiAgICB0aGlzLmRlY2VsZXJhdGlvbiA9IGNvbmZpZy5kZWNlbGVyYXRpb247XG4gICAgdGhpcy5pdGVyYXRpb25zID0gY29uZmlnLml0ZXJhdGlvbnMgIT0gbnVsbCA/IGNvbmZpZy5pdGVyYXRpb25zIDogMTtcbiAgICB0aGlzLmN1cnJlbnRMb29wID0gMTtcbiAgICB0aGlzLmFuaW1hdGlvbkhhc0ZpbmlzaGVkID0gdGhpcy5pdGVyYXRpb25zID09PSAwO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgc3RhcnRBbmltYXRpb24oKSB7XG4gICAgdGhpcy5mcmFtZVN0YXJ0VGltZSA9IC0xO1xuICAgIHRoaXMuYW5pbWF0aW9uSGFzQmVndW4gPSB0cnVlO1xuICB9XG5cbiAgc3RvcEFuaW1hdGlvbigpIHtcbiAgICAvLyB0aGlzLnZhbHVlTm9kZSA9IG51bGw7XG4gICAgaWYgKHRoaXMuY2FsbGJhY2spIHtcbiAgICAgIHRoaXMuY2FsbGJhY2soe1xuICAgICAgICBmaW5pc2hlZDogdGhpcy5hbmltYXRpb25IYXNGaW5pc2hlZFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgc3RlcEFuaW1hdGlvbldpdGhUaW1lKGN1cnJlbnRUaW1lOiBudW1iZXIpIHtcbiAgICBjb25zdCB2YWx1ZU5vZGUgPSB0aGlzLnZhbHVlTm9kZTtcblxuICAgIGlmIChcbiAgICAgIHZhbHVlTm9kZSA9PSBudWxsIHx8XG4gICAgICAhdGhpcy5hbmltYXRpb25IYXNCZWd1biB8fFxuICAgICAgdGhpcy5hbmltYXRpb25IYXNGaW5pc2hlZFxuICAgICkge1xuICAgICAgLy8gQW5pbWF0aW9uIGhhcyBub3QgYmVndW4gb3IgYW5pbWF0aW9uIGhhcyBhbHJlYWR5IGZpbmlzaGVkLlxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmZyYW1lU3RhcnRUaW1lID09PSAtMSkge1xuICAgICAgLy8gU2luY2UgdGhpcyBpcyB0aGUgZmlyc3QgYW5pbWF0aW9uIHN0ZXAsIGNvbnNpZGVyIHRoZSBzdGFydCB0byBiZSBvbiB0aGUgcHJldmlvdXMgZnJhbWUuXG4gICAgICB0aGlzLmZyYW1lU3RhcnRUaW1lID0gY3VycmVudFRpbWUgLSBSQ1RTaW5nbGVGcmFtZUludGVydmFsO1xuXG4gICAgICBpZiAodGhpcy5mcm9tVmFsdWUgPT09IHRoaXMubGFzdFZhbHVlKSB7XG4gICAgICAgIC8vIEZpcnN0IGl0ZXJhdGlvbiwgYXNzaWduIF9mcm9tVmFsdWUgYmFzZWQgb24gX3ZhbHVlTm9kZS5cbiAgICAgICAgdGhpcy5mcm9tVmFsdWUgPSB2YWx1ZU5vZGUudmFsdWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBOb3QgdGhlIGZpcnN0IGl0ZXJhdGlvbiwgcmVzZXQgX3ZhbHVlTm9kZSBiYXNlZCBvbiBfZnJvbVZhbHVlLlxuICAgICAgICB0aGlzLnVwZGF0ZVZhbHVlKHRoaXMuZnJvbVZhbHVlKTtcbiAgICAgIH1cbiAgICAgIHRoaXMubGFzdFZhbHVlID0gdmFsdWVOb2RlLnZhbHVlO1xuICAgIH1cblxuICAgIGNvbnN0IHZhbHVlID1cbiAgICAgIHRoaXMuZnJvbVZhbHVlICtcbiAgICAgIHRoaXMudmVsb2NpdHkgL1xuICAgICAgICAoMSAtIHRoaXMuZGVjZWxlcmF0aW9uKSAqXG4gICAgICAgICgxIC1cbiAgICAgICAgICBNYXRoLmV4cChcbiAgICAgICAgICAgIC0oMSAtIHRoaXMuZGVjZWxlcmF0aW9uKSAqIChjdXJyZW50VGltZSAtIHRoaXMuZnJhbWVTdGFydFRpbWUpXG4gICAgICAgICAgKSk7XG5cbiAgICB0aGlzLnVwZGF0ZVZhbHVlKHZhbHVlKTtcblxuICAgIGlmIChNYXRoLmFicyh0aGlzLmxhc3RWYWx1ZSAtIHZhbHVlKSA8IDAuMSkge1xuICAgICAgaWYgKHRoaXMuaXRlcmF0aW9ucyA9PT0gLTEgfHwgdGhpcy5jdXJyZW50TG9vcCA8IHRoaXMuaXRlcmF0aW9ucykge1xuICAgICAgICB0aGlzLmZyYW1lU3RhcnRUaW1lID0gLTE7XG4gICAgICAgIHRoaXMuY3VycmVudExvb3ArKztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYW5pbWF0aW9uSGFzRmluaXNoZWQgPSB0cnVlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5sYXN0VmFsdWUgPSB2YWx1ZTtcbiAgfVxuXG4gIHVwZGF0ZVZhbHVlKG91dHB1dFZhbHVlOiBudW1iZXIpIHtcbiAgICBjb25zdCB2YWx1ZU5vZGUgPSB0aGlzLnZhbHVlTm9kZTtcbiAgICBpZiAodmFsdWVOb2RlKSB7XG4gICAgICB2YWx1ZU5vZGUudmFsdWUgPSBvdXRwdXRWYWx1ZTtcbiAgICAgIHZhbHVlTm9kZS5zZXROZWVkc1VwZGF0ZSgpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSQ1REZWNheUFuaW1hdGlvbjtcbiJdfQ==