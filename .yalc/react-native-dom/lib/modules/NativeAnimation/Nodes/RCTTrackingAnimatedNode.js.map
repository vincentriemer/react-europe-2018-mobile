{"version":3,"sources":["../../../../ReactDom/modules/NativeAnimation/Nodes/RCTTrackingAnimatedNode.js"],"names":["RCTTrackingAnimatedNode","tag","config","animationId","toValueNodeTag","toValue","valueNodeTag","value","animationConfig","parent","manager","stopAnimation","parentNodes","node","startAnimatingNode"],"mappings":"oqBAMA,qD,mDACA,4D,yEACA,mD,sJAEMA,wB,6FAMJ,iCAAYC,GAAZ,CAAyBC,MAAzB,CAAyC,iNACjCD,GADiC,CAC5BC,MAD4B,GAGvC,MAAKC,WAAL,CAAmBD,OAAOC,WAA1B,CACA,MAAKC,cAAL,CAAsBF,OAAOG,OAA7B,CACA,MAAKC,YAAL,CAAoBJ,OAAOK,KAA3B,CACA,MAAKC,eAAL,CAAuBN,OAAOM,eAA9B,CANuC,aAOxC,C,+GAEkBC,M,CAAyB,CAC1C,KAAKC,OAAL,CAAaC,aAAb,CAA2B,KAAKR,WAAhC,EACA,6JAAyBM,MAAzB,EACD,C,qDAEe,CACd,yJAEA,GAAMG,aAAc,KAAKA,WAAzB,CACA,wBAAUA,WAAV,4CAGA,GAAMC,MAA8BD,YAAY,KAAKR,cAAjB,CAApC,CACA,KAAKI,eAAL,CAAqBH,OAArB,CAA+BQ,KAAKN,KAApC,CAEA,KAAKG,OAAL,CAAaI,kBAAb,CACE,KAAKX,WADP,CAEE,KAAKG,YAFP,CAGE,KAAKE,eAHP,CAIE,IAJF,EAMD,C,gFAGYR,uB","file":"RCTTrackingAnimatedNode.js","sourcesContent":["/**\n * @providesModule RCTTrackingAnimatedNode\n * @flow\n */\n\nimport type { Config } from \"RCTNativeAnimatedModule\";\nimport invariant from \"Invariant\";\nimport RCTValueAnimatedNode from \"RCTValueAnimatedNode\";\nimport RCTAnimatedNode from \"RCTAnimatedNode\";\n\nclass RCTTrackingAnimatedNode extends RCTAnimatedNode {\n  animationId: number;\n  toValueNodeTag: number;\n  valueNodeTag: number;\n  animationConfig: Object;\n\n  constructor(tag: number, config: Config) {\n    super(tag, config);\n\n    this.animationId = config.animationId;\n    this.toValueNodeTag = config.toValue;\n    this.valueNodeTag = config.value;\n    this.animationConfig = config.animationConfig;\n  }\n\n  onDetachedFromNode(parent: RCTAnimatedNode) {\n    this.manager.stopAnimation(this.animationId);\n    super.onDetachedFromNode(parent);\n  }\n\n  performUpdate() {\n    super.performUpdate();\n\n    const parentNodes = this.parentNodes;\n    invariant(parentNodes, `No parent nodes in TrackingAnimatedNode`);\n\n    // change animation config's \"toValue\" to reflect updated value of the parent node\n    const node: RCTValueAnimatedNode = (parentNodes[this.toValueNodeTag]: any);\n    this.animationConfig.toValue = node.value;\n\n    this.manager.startAnimatingNode(\n      this.animationId,\n      this.valueNodeTag,\n      this.animationConfig,\n      null\n    );\n  }\n}\n\nexport default RCTTrackingAnimatedNode;\n"]}