{"version":3,"sources":["../../../../ReactDom/modules/NativeAnimation/Nodes/RCTDivisionAnimatedNode.js"],"names":["RCTDivisionAnimatedNode","inputNodes","config","input","length","parentNodes","parent1","parent2","value","console","error"],"mappings":"oqBAKA,6D,gKAEMA,wB,0cACY,CACd,yJAEA,GAAMC,YAAuB,KAAKC,MAAL,CAAYC,KAAzC,CACA,GAAIF,WAAWG,MAAX,CAAoB,CAAxB,CAA2B,CACzB,GAAMC,aAAc,KAAKA,WAAzB,CACA,GAAI,CAACA,WAAL,CAAkB,OAElB,GAAMC,SAAUD,YAAYJ,WAAW,CAAX,CAAZ,CAAhB,CACA,GAAMM,SAAUF,YAAYJ,WAAW,CAAX,CAAZ,CAAhB,CAEA,GACEK,mDACAC,iDAFF,CAGE,CACA,GAAIA,QAAQC,KAAR,GAAkB,CAAtB,CAAyB,CACvBC,QAAQC,KAAR,CAAc,qDAAd,EACA,OACD,CACD,KAAKF,KAAL,CAAaF,QAAQE,KAAR,CAAgBD,QAAQC,KAArC,CACD,CACF,CACF,C,qFAGYR,uB","file":"RCTDivisionAnimatedNode.js","sourcesContent":["/**\n * @providesModule RCTDivisionAnimatedNode\n * @flow\n */\n\nimport RCTValueAnimatedNode from \"RCTValueAnimatedNode\";\n\nclass RCTDivisionAnimatedNode extends RCTValueAnimatedNode {\n  performUpdate() {\n    super.performUpdate();\n\n    const inputNodes: number[] = this.config.input;\n    if (inputNodes.length > 1) {\n      const parentNodes = this.parentNodes;\n      if (!parentNodes) return;\n\n      const parent1 = parentNodes[inputNodes[0]];\n      const parent2 = parentNodes[inputNodes[2]];\n\n      if (\n        parent1 instanceof RCTValueAnimatedNode &&\n        parent2 instanceof RCTValueAnimatedNode\n      ) {\n        if (parent2.value === 0) {\n          console.error(\"Detected a division by zero in Animated.divide node\");\n          return;\n        }\n        this.value = parent1.value / parent2.value;\n      }\n    }\n  }\n}\n\nexport default RCTDivisionAnimatedNode;\n"]}