Object.defineProperty(exports,"__esModule",{value:true});var _extends2=require("babel-runtime/helpers/extends");var _extends3=_interopRequireDefault(_extends2);var _slicedToArray2=require("babel-runtime/helpers/slicedToArray");var _slicedToArray3=_interopRequireDefault(_slicedToArray2);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _get2=require("babel-runtime/helpers/get");var _get3=_interopRequireDefault(_get2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _RCTAnimatedNode2=require("./RCTAnimatedNode");var _RCTAnimatedNode3=_interopRequireDefault(_RCTAnimatedNode2);var _RCTStyleAnimatedNode=require("./RCTStyleAnimatedNode");var _RCTStyleAnimatedNode2=_interopRequireDefault(_RCTStyleAnimatedNode);var _RCTValueAnimatedNode=require("./RCTValueAnimatedNode");var _RCTValueAnimatedNode2=_interopRequireDefault(_RCTValueAnimatedNode);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var RCTPropsAnimatedNode=function(_RCTAnimatedNode){(0,_inherits3.default)(RCTPropsAnimatedNode,_RCTAnimatedNode);function RCTPropsAnimatedNode(tag,config){(0,_classCallCheck3.default)(this,RCTPropsAnimatedNode);var _this=(0,_possibleConstructorReturn3.default)(this,(RCTPropsAnimatedNode.__proto__||Object.getPrototypeOf(RCTPropsAnimatedNode)).call(this,tag,config));_this.propsDictionary={};return _this;}(0,_createClass3.default)(RCTPropsAnimatedNode,[{key:"connectToView",value:function connectToView(viewTag,viewName,uiManager){this.connectedViewTag=viewTag;this.connectedViewName=viewName;this.uiManager=uiManager;}},{key:"disconnectFromView",value:function disconnectFromView(viewTag){for(var _iterator=Object.keys(this.propsDictionary),_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var key=_ref;this.propsDictionary[key]=null;}if(Object.keys(this.propsDictionary).length&&this.connectedViewTag&&this.connectedViewName&&this.uiManager){this.uiManager.synchronouslyUpdateView(this.connectedViewTag,this.connectedViewName,this.propsDictionary);}this.connectedViewTag=null;this.connectedViewName=null;this.uiManager=null;}},{key:"performUpdate",value:function performUpdate(){var _this2=this;(0,_get3.default)(RCTPropsAnimatedNode.prototype.__proto__||Object.getPrototypeOf(RCTPropsAnimatedNode.prototype),"performUpdate",this).call(this);var connectedViewTag=this.connectedViewTag;if(!connectedViewTag){return;}this.parentNodes&&Object.entries(this.parentNodes).forEach(function(_ref2){var _ref3=(0,_slicedToArray3.default)(_ref2,2),parentTag=_ref3[0],parentNode=_ref3[1];if(parentNode instanceof _RCTStyleAnimatedNode2.default){_this2.propsDictionary=(0,_extends3.default)({},_this2.propsDictionary,parentNode.propsDictionary);}else if(parentNode instanceof _RCTValueAnimatedNode2.default){var property=_this2.propertyNameForParentTag(parseInt(parentTag,10));var value=parentNode.value;_this2.propsDictionary[property]=value;}});if(Object.keys(this.propsDictionary).length){if(this.uiManager&&this.connectedViewName&&this.connectedViewTag){this.uiManager.synchronouslyUpdateView(this.connectedViewTag,this.connectedViewName,this.propsDictionary);}}}},{key:"propertyNameForParentTag",value:function propertyNameForParentTag(parentTag){for(var _ref4 in this.config.props){var _ref5=(0,_slicedToArray3.default)(_ref4,2);var property=_ref5[0];var tag=_ref5[1];if(tag===parentTag){return property;}}throw new Error("No tags found in props that match parentTag");}}]);return RCTPropsAnimatedNode;}(_RCTAnimatedNode3.default);exports.default=RCTPropsAnimatedNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL1JlYWN0RG9tL21vZHVsZXMvTmF0aXZlQW5pbWF0aW9uL05vZGVzL1JDVFByb3BzQW5pbWF0ZWROb2RlLmpzIl0sIm5hbWVzIjpbIlJDVFByb3BzQW5pbWF0ZWROb2RlIiwidGFnIiwiY29uZmlnIiwicHJvcHNEaWN0aW9uYXJ5Iiwidmlld1RhZyIsInZpZXdOYW1lIiwidWlNYW5hZ2VyIiwiY29ubmVjdGVkVmlld1RhZyIsImNvbm5lY3RlZFZpZXdOYW1lIiwiT2JqZWN0Iiwia2V5cyIsImtleSIsImxlbmd0aCIsInN5bmNocm9ub3VzbHlVcGRhdGVWaWV3IiwicGFyZW50Tm9kZXMiLCJlbnRyaWVzIiwiZm9yRWFjaCIsInBhcmVudFRhZyIsInBhcmVudE5vZGUiLCJwcm9wZXJ0eSIsInByb3BlcnR5TmFtZUZvclBhcmVudFRhZyIsInBhcnNlSW50IiwidmFsdWUiLCJwcm9wcyIsIkVycm9yIl0sIm1hcHBpbmdzIjoiMDRCQU1BLG1ELGdFQUNBLDRELHlFQUNBLDRELCtKQUVNQSxxQiwwRkFNSiw4QkFBWUMsR0FBWixDQUF5QkMsTUFBekIsQ0FBeUMsd01BQ2pDRCxHQURpQyxDQUM1QkMsTUFENEIsR0FFdkMsTUFBS0MsZUFBTCxDQUF1QixFQUF2QixDQUZ1QyxhQUd4QyxDLGtHQUVhQyxPLENBQWlCQyxRLENBQWtCQyxTLENBQWMsQ0FDN0QsS0FBS0MsZ0JBQUwsQ0FBd0JILE9BQXhCLENBQ0EsS0FBS0ksaUJBQUwsQ0FBeUJILFFBQXpCLENBQ0EsS0FBS0MsU0FBTCxDQUFpQkEsU0FBakIsQ0FDRCxDLDhEQUVrQkYsTyxDQUFpQixDQUVsQyxrQkFBZ0JLLE9BQU9DLElBQVAsQ0FBWSxLQUFLUCxlQUFqQixDQUFoQiw0SUFBbUQsdUlBQTFDUSxJQUEwQyxNQUNqRCxLQUFLUixlQUFMLENBQXFCUSxHQUFyQixFQUE0QixJQUE1QixDQUNELENBRUQsR0FDRUYsT0FBT0MsSUFBUCxDQUFZLEtBQUtQLGVBQWpCLEVBQWtDUyxNQUFsQyxFQUNBLEtBQUtMLGdCQURMLEVBRUEsS0FBS0MsaUJBRkwsRUFHQSxLQUFLRixTQUpQLENBS0UsQ0FDQSxLQUFLQSxTQUFMLENBQWVPLHVCQUFmLENBQ0UsS0FBS04sZ0JBRFAsQ0FFRSxLQUFLQyxpQkFGUCxDQUdFLEtBQUtMLGVBSFAsRUFLRCxDQUVELEtBQUtJLGdCQUFMLENBQXdCLElBQXhCLENBQ0EsS0FBS0MsaUJBQUwsQ0FBeUIsSUFBekIsQ0FDQSxLQUFLRixTQUFMLENBQWlCLElBQWpCLENBQ0QsQyxxREFFZSxpQkFDZCxtSkFFQSxHQUFNQyxrQkFBbUIsS0FBS0EsZ0JBQTlCLENBQ0EsR0FBSSxDQUFDQSxnQkFBTCxDQUF1QixDQUNyQixPQUNELENBRUQsS0FBS08sV0FBTCxFQUNFTCxPQUFPTSxPQUFQLENBQWUsS0FBS0QsV0FBcEIsRUFBaUNFLE9BQWpDLENBQXlDLGVBQTZCLGdEQUEzQkMsU0FBMkIsVUFBaEJDLFVBQWdCLFVBQ3BFLEdBQUlBLG9EQUFKLENBQWdELENBQzlDLE9BQUtmLGVBQUwsMEJBQ0ssT0FBS0EsZUFEVixDQUVLZSxXQUFXZixlQUZoQixFQUlELENBTEQsSUFLTyxJQUFJZSxvREFBSixDQUFnRCxDQUNyRCxHQUFNQyxVQUFXLE9BQUtDLHdCQUFMLENBQ2ZDLFNBQVNKLFNBQVQsQ0FBb0IsRUFBcEIsQ0FEZSxDQUFqQixDQUdBLEdBQU1LLE9BQVFKLFdBQVdJLEtBQXpCLENBQ0EsT0FBS25CLGVBQUwsQ0FBcUJnQixRQUFyQixFQUFpQ0csS0FBakMsQ0FDRCxDQUNGLENBYkQsQ0FERixDQWdCQSxHQUFJYixPQUFPQyxJQUFQLENBQVksS0FBS1AsZUFBakIsRUFBa0NTLE1BQXRDLENBQThDLENBQzVDLEdBQUksS0FBS04sU0FBTCxFQUFrQixLQUFLRSxpQkFBdkIsRUFBNEMsS0FBS0QsZ0JBQXJELENBQXVFLENBQ3JFLEtBQUtELFNBQUwsQ0FBZU8sdUJBQWYsQ0FDRSxLQUFLTixnQkFEUCxDQUVFLEtBQUtDLGlCQUZQLENBR0UsS0FBS0wsZUFIUCxFQUtELENBQ0YsQ0FDRixDLDBFQUV3QmMsUyxDQUEyQixDQUNsRCxnQkFBNEIsTUFBS2YsTUFBTCxDQUFZcUIsS0FBeEMsQ0FBK0MsbURBQXJDSixTQUFxQyxhQUEzQmxCLElBQTJCLFVBQzdDLEdBQUlBLE1BQVFnQixTQUFaLENBQXVCLENBQ3JCLE1BQU9FLFNBQVAsQ0FDRCxDQUNGLENBQ0QsS0FBTSxJQUFJSyxNQUFKLENBQVUsNkNBQVYsQ0FBTixDQUNELEMsNkVBR1l4QixvQiIsImZpbGUiOiJSQ1RQcm9wc0FuaW1hdGVkTm9kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHByb3ZpZGVzTW9kdWxlIFJDVFByb3BzQW5pbWF0ZWROb2RlXG4gKiBAZmxvd1xuICovXG5cbmltcG9ydCB0eXBlIHsgQ29uZmlnIH0gZnJvbSBcIlJDVE5hdGl2ZUFuaW1hdGVkTW9kdWxlXCI7XG5pbXBvcnQgUkNUQW5pbWF0ZWROb2RlIGZyb20gXCJSQ1RBbmltYXRlZE5vZGVcIjtcbmltcG9ydCBSQ1RTdHlsZUFuaW1hdGVkTm9kZSBmcm9tIFwiUkNUU3R5bGVBbmltYXRlZE5vZGVcIjtcbmltcG9ydCBSQ1RWYWx1ZUFuaW1hdGVkTm9kZSBmcm9tIFwiUkNUVmFsdWVBbmltYXRlZE5vZGVcIjtcblxuY2xhc3MgUkNUUHJvcHNBbmltYXRlZE5vZGUgZXh0ZW5kcyBSQ1RBbmltYXRlZE5vZGUge1xuICBjb25uZWN0ZWRWaWV3VGFnOiA/bnVtYmVyO1xuICBjb25uZWN0ZWRWaWV3TmFtZTogP3N0cmluZztcbiAgdWlNYW5hZ2VyOiA/KjtcbiAgcHJvcHNEaWN0aW9uYXJ5OiB7IFtwcm9wTmFtZTogc3RyaW5nXTogYW55IH07XG5cbiAgY29uc3RydWN0b3IodGFnOiBudW1iZXIsIGNvbmZpZzogQ29uZmlnKSB7XG4gICAgc3VwZXIodGFnLCBjb25maWcpO1xuICAgIHRoaXMucHJvcHNEaWN0aW9uYXJ5ID0ge307XG4gIH1cblxuICBjb25uZWN0VG9WaWV3KHZpZXdUYWc6IG51bWJlciwgdmlld05hbWU6IHN0cmluZywgdWlNYW5hZ2VyOiAqKSB7XG4gICAgdGhpcy5jb25uZWN0ZWRWaWV3VGFnID0gdmlld1RhZztcbiAgICB0aGlzLmNvbm5lY3RlZFZpZXdOYW1lID0gdmlld05hbWU7XG4gICAgdGhpcy51aU1hbmFnZXIgPSB1aU1hbmFnZXI7XG4gIH1cblxuICBkaXNjb25uZWN0RnJvbVZpZXcodmlld1RhZzogbnVtYmVyKSB7XG4gICAgLy8gUmVzdG9yZSB0aGUgZGVmYXVsdCB2YWx1ZSBmb3IgYWxsIHByb3BzIHRoYXQgd2VyZSBtb2RpZmllZCBieSB0aGlzIG5vZGUuXG4gICAgZm9yIChsZXQga2V5IG9mIE9iamVjdC5rZXlzKHRoaXMucHJvcHNEaWN0aW9uYXJ5KSkge1xuICAgICAgdGhpcy5wcm9wc0RpY3Rpb25hcnlba2V5XSA9IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgT2JqZWN0LmtleXModGhpcy5wcm9wc0RpY3Rpb25hcnkpLmxlbmd0aCAmJlxuICAgICAgdGhpcy5jb25uZWN0ZWRWaWV3VGFnICYmXG4gICAgICB0aGlzLmNvbm5lY3RlZFZpZXdOYW1lICYmXG4gICAgICB0aGlzLnVpTWFuYWdlclxuICAgICkge1xuICAgICAgdGhpcy51aU1hbmFnZXIuc3luY2hyb25vdXNseVVwZGF0ZVZpZXcoXG4gICAgICAgIHRoaXMuY29ubmVjdGVkVmlld1RhZyxcbiAgICAgICAgdGhpcy5jb25uZWN0ZWRWaWV3TmFtZSxcbiAgICAgICAgdGhpcy5wcm9wc0RpY3Rpb25hcnlcbiAgICAgICk7XG4gICAgfVxuXG4gICAgdGhpcy5jb25uZWN0ZWRWaWV3VGFnID0gbnVsbDtcbiAgICB0aGlzLmNvbm5lY3RlZFZpZXdOYW1lID0gbnVsbDtcbiAgICB0aGlzLnVpTWFuYWdlciA9IG51bGw7XG4gIH1cblxuICBwZXJmb3JtVXBkYXRlKCkge1xuICAgIHN1cGVyLnBlcmZvcm1VcGRhdGUoKTtcblxuICAgIGNvbnN0IGNvbm5lY3RlZFZpZXdUYWcgPSB0aGlzLmNvbm5lY3RlZFZpZXdUYWc7XG4gICAgaWYgKCFjb25uZWN0ZWRWaWV3VGFnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5wYXJlbnROb2RlcyAmJlxuICAgICAgT2JqZWN0LmVudHJpZXModGhpcy5wYXJlbnROb2RlcykuZm9yRWFjaCgoW3BhcmVudFRhZywgcGFyZW50Tm9kZV0pID0+IHtcbiAgICAgICAgaWYgKHBhcmVudE5vZGUgaW5zdGFuY2VvZiBSQ1RTdHlsZUFuaW1hdGVkTm9kZSkge1xuICAgICAgICAgIHRoaXMucHJvcHNEaWN0aW9uYXJ5ID0ge1xuICAgICAgICAgICAgLi4udGhpcy5wcm9wc0RpY3Rpb25hcnksXG4gICAgICAgICAgICAuLi5wYXJlbnROb2RlLnByb3BzRGljdGlvbmFyeVxuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAocGFyZW50Tm9kZSBpbnN0YW5jZW9mIFJDVFZhbHVlQW5pbWF0ZWROb2RlKSB7XG4gICAgICAgICAgY29uc3QgcHJvcGVydHkgPSB0aGlzLnByb3BlcnR5TmFtZUZvclBhcmVudFRhZyhcbiAgICAgICAgICAgIHBhcnNlSW50KHBhcmVudFRhZywgMTApXG4gICAgICAgICAgKTtcbiAgICAgICAgICBjb25zdCB2YWx1ZSA9IHBhcmVudE5vZGUudmFsdWU7XG4gICAgICAgICAgdGhpcy5wcm9wc0RpY3Rpb25hcnlbcHJvcGVydHldID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgaWYgKE9iamVjdC5rZXlzKHRoaXMucHJvcHNEaWN0aW9uYXJ5KS5sZW5ndGgpIHtcbiAgICAgIGlmICh0aGlzLnVpTWFuYWdlciAmJiB0aGlzLmNvbm5lY3RlZFZpZXdOYW1lICYmIHRoaXMuY29ubmVjdGVkVmlld1RhZykge1xuICAgICAgICB0aGlzLnVpTWFuYWdlci5zeW5jaHJvbm91c2x5VXBkYXRlVmlldyhcbiAgICAgICAgICB0aGlzLmNvbm5lY3RlZFZpZXdUYWcsXG4gICAgICAgICAgdGhpcy5jb25uZWN0ZWRWaWV3TmFtZSxcbiAgICAgICAgICB0aGlzLnByb3BzRGljdGlvbmFyeVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByb3BlcnR5TmFtZUZvclBhcmVudFRhZyhwYXJlbnRUYWc6IG51bWJlcik6IHN0cmluZyB7XG4gICAgZm9yIChsZXQgW3Byb3BlcnR5LCB0YWddIGluIHRoaXMuY29uZmlnLnByb3BzKSB7XG4gICAgICBpZiAodGFnID09PSBwYXJlbnRUYWcpIHtcbiAgICAgICAgcmV0dXJuIHByb3BlcnR5O1xuICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyB0YWdzIGZvdW5kIGluIHByb3BzIHRoYXQgbWF0Y2ggcGFyZW50VGFnXCIpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJDVFByb3BzQW5pbWF0ZWROb2RlO1xuIl19