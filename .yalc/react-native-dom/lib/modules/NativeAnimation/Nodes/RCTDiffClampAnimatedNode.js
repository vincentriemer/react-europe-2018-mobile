Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _get2=require("babel-runtime/helpers/get");var _get3=_interopRequireDefault(_get2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _RCTValueAnimatedNode2=require("./RCTValueAnimatedNode");var _RCTValueAnimatedNode3=_interopRequireDefault(_RCTValueAnimatedNode2);var _Invariant=require("./../../../utils/Invariant");var _Invariant2=_interopRequireDefault(_Invariant);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var RCTDiffClampAnimatedNode=function(_RCTValueAnimatedNode){(0,_inherits3.default)(RCTDiffClampAnimatedNode,_RCTValueAnimatedNode);function RCTDiffClampAnimatedNode(tag,config){(0,_classCallCheck3.default)(this,RCTDiffClampAnimatedNode);var _this=(0,_possibleConstructorReturn3.default)(this,(RCTDiffClampAnimatedNode.__proto__||Object.getPrototypeOf(RCTDiffClampAnimatedNode)).call(this,tag,config));_this.inputNodeTag=config.input;_this.min=config.min;_this.max=config.max;return _this;}(0,_createClass3.default)(RCTDiffClampAnimatedNode,[{key:"onAttachedToNode",value:function onAttachedToNode(parent){(0,_get3.default)(RCTDiffClampAnimatedNode.prototype.__proto__||Object.getPrototypeOf(RCTDiffClampAnimatedNode.prototype),"onAttachedToNode",this).call(this,parent);this.value=this.lastValue=this.inputNodeValue;}},{key:"performUpdate",value:function performUpdate(){(0,_get3.default)(RCTDiffClampAnimatedNode.prototype.__proto__||Object.getPrototypeOf(RCTDiffClampAnimatedNode.prototype),"performUpdate",this).call(this);var lastValue=this.lastValue?this.lastValue:0;var value=this.inputNodeValue;var diff=value-lastValue;this.lastValue=value;this.value=Math.min(Math.max(this.value+diff,this.min),this.max);}},{key:"inputNodeValue",get:function get(){(0,_Invariant2.default)(this.parentNodes,"diffClamp node has no parents");var inputNode=this.parentNodes[this.inputNodeTag];if(!(inputNode instanceof _RCTValueAnimatedNode3.default)){console.error("Illegal node ID set as an input for Animated.DiffClamp node");return 0;}return inputNode.value;}}]);return RCTDiffClampAnimatedNode;}(_RCTValueAnimatedNode3.default);exports.default=RCTDiffClampAnimatedNode;
//# sourceMappingURL=RCTDiffClampAnimatedNode.js.map